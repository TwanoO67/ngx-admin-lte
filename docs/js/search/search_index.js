var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/components/AppFooterComponent.html",[0,0.321,1,0.871]],["body/components/AppFooterComponent.html",[0,0.551,1,1.492,2,1.33,3,0.312,4,0.278,5,1.002,6,1.571,7,1.211,8,1.211,9,0.245,10,4.166,11,4.166,12,3.17,13,1.137,14,2.254,15,2.123,16,4.359,17,2.398,18,5.573,19,1.714,20,4.964,21,0.245,22,0.716,23,0.517,24,0.46,25,3.739,26,2.868,27,0.46,28,4.964,29,0.383,30,0.025,31,0.415,32,0.414,33,0.42,34,4.964,35,0.627,36,0.627,37,0.508,38,0.383,39,3.17,40,0.278,41,0.123,42,0.722,43,3.739,44,3.739,45,1.067,46,1.248,47,1.608,48,1.211,49,1.923,50,1.211,51,1.211,52,0.94,53,1.211,54,0.94,55,1.211,56,0.94,57,1.211,58,0.94,59,1.067,60,1.211,61,0.881,62,1.137,63,1.211,64,0.825,65,1.417,66,1.211,67,0.94,68,1.211,69,0.94,70,1.211,71,0.94,72,1.002,73,1.211,74,0.94,75,1.211,76,0.94,77,1.211,78,0.94,79,1.211,80,0.94,81,1.211,82,1.211,83,1.211,84,0.013,85,0.017,86,0.013]],["title/components/AppHeaderComponent.html",[0,0.321,52,0.871]],["body/components/AppHeaderComponent.html",[0,0.502,1,0.756,2,1.145,3,0.251,4,0.224,5,0.806,6,1.264,7,0.975,8,0.975,9,0.197,10,4.874,13,0.915,14,2.192,15,2.068,17,2.065,19,1.476,21,0.197,23,0.567,24,0.396,27,0.598,29,0.308,30,0.025,31,0.37,32,0.251,33,0.338,35,1.025,36,1.025,37,0.509,38,0.308,40,0.224,41,0.099,42,0.825,45,0.859,46,1.074,47,1.385,48,0.975,49,1.754,50,0.975,51,0.975,52,1.361,53,0.975,54,0.756,55,0.975,56,0.756,57,0.975,58,0.756,59,0.859,60,0.975,61,0.709,62,0.915,63,0.975,64,0.664,65,1.22,66,0.975,67,0.756,68,0.975,69,0.756,70,0.975,71,0.756,72,0.806,73,0.975,74,0.756,75,0.975,76,0.756,77,0.975,78,0.756,79,0.975,80,0.756,81,0.975,82,0.975,83,0.975,84,0.01,85,0.015,86,0.01,87,4.874,88,2.55,89,2.407,90,4.972,91,4.275,92,0.617,93,3.642,94,5.414,95,2.62,96,3.717,97,3.717,98,3.717,99,3.717,100,3.717,101,3.717,102,3.717,103,3.008,104,2.188,105,4.972,106,2.818,107,4.275,108,3.354,109,3.008,110,1.68,111,3.008,112,3.008,113,3.008,114,3.008,115,3.008,116,3.008,117,0.617,118,0.895,119,3.008,120,3.251,121,2.023,122,2.249,123,2.249,124,3.008,125,3.008,126,3.624,127,3.195]],["title/components/BreadcrumbComponent.html",[0,0.321,54,0.871]],["body/components/BreadcrumbComponent.html",[0,0.527,1,0.843,2,1.235,3,0.28,4,0.249,5,0.898,7,1.086,8,1.086,9,0.22,13,1.02,14,2.224,15,2.04,19,1.592,21,0.22,22,0.665,23,0.622,24,0.311,27,0.552,29,0.343,30,0.025,31,0.392,32,0.474,33,0.377,35,0.952,36,0.952,37,0.472,38,0.343,40,0.249,41,0.11,45,0.957,46,1.159,47,1.494,48,1.086,49,1.839,50,1.086,51,1.086,52,0.843,53,1.086,54,1.427,55,1.086,56,0.843,57,1.086,58,0.843,59,0.957,60,1.086,61,0.79,62,1.02,63,1.086,64,0.74,65,1.316,66,1.086,67,0.843,68,1.086,69,0.843,70,1.086,71,0.843,72,0.898,73,1.086,74,0.843,75,1.086,76,0.843,77,1.086,78,0.843,79,1.086,80,0.843,81,1.086,82,1.086,83,1.086,84,0.012,85,0.016,86,0.012,89,3.351,110,1.812,128,2.843,129,3.91,130,4.612,131,4.004,132,3.546,133,3.94,134,3.353,135,2.743,136,4.612,137,3.91,138,1.698,139,3.353,140,3.353,141,3.353,142,2.075,143,2.843,144,2.255,145,1.888,146,1.409,147,2.255,148,3.353,149,3.353,150,3.353,151,3.353,152,3.353,153,3.353,154,3.353,155,3.353,156,3.353,157,3.91]],["title/injectables/BreadcrumbService.html",[135,1.674,158,0.539]],["body/injectables/BreadcrumbService.html",[3,0.326,4,0.29,9,0.256,21,0.256,22,0.737,23,0.637,24,0.528,27,0.596,29,0.399,30,0.025,31,0.29,32,0.475,33,0.438,35,0.954,36,0.654,37,0.523,38,0.399,40,0.29,41,0.129,42,1.098,84,0.014,85,0.018,86,0.014,89,2.875,92,0.737,110,2.007,117,0.821,118,0.919,131,3.435,132,3.435,133,3.817,135,2.467,146,1.64,158,0.795,159,1.437,160,3.309,161,2.749,162,5.691,163,6.037,164,3.399,165,2.657,166,3.903,167,3.903,168,3.903,169,5.106,170,3.903,171,2.749,172,3.903,173,3.435,174,5.106,175,5.106,176,3.435,177,3.129,178,3.903,179,1.64,180,3.129,181,1.046,182,2.625,183,3.903,184,3.903,185,1.114,186,3.903]],["title/guards/CanActivateGuard.html",[187,2.59,188,2.123]],["body/guards/CanActivateGuard.html",[3,0.358,4,0.32,9,0.282,21,0.282,22,0.62,23,0.552,24,0.504,27,0.504,29,0.44,30,0.025,31,0.32,32,0.358,33,0.482,37,0.61,38,0.44,40,0.32,41,0.142,42,1.208,84,0.015,85,0.019,86,0.015,92,0.784,104,2.465,110,1.689,117,0.62,158,0.846,185,1.226,188,3.329,189,4.296,190,5.05,191,4.452,192,3.642,193,4.06,194,5.59,195,3.212,196,3.431,197,4.296,198,4.296,199,3.212,200,1.933,201,3.642,202,1.392,203,4.296,204,5.05,205,3.212,206,3.212,207,3.212,208,1.689,209,3.642,210,3.642,211,3.212]],["title/components/ComponentLoaderComponent.html",[0,0.321,56,0.871]],["body/components/ComponentLoaderComponent.html",[0,0.636,1,0.64,2,1.014,3,0.212,4,0.189,5,1.014,7,1.464,8,0.824,9,0.167,13,0.774,14,2.138,15,1.938,21,0.167,22,0.546,24,0.351,27,0.565,29,0.463,30,0.025,31,0.398,32,0.446,33,0.507,35,0.757,36,0.757,37,0.26,38,0.26,40,0.189,41,0.149,42,1.121,45,0.726,46,0.951,47,1.226,48,0.824,49,1.621,50,0.824,51,0.824,52,0.64,53,0.824,54,0.64,55,0.824,56,1.258,57,0.824,58,0.64,59,0.726,60,0.824,61,0.6,62,0.774,63,0.824,64,0.562,65,1.08,66,0.824,67,0.64,68,0.824,69,0.64,70,0.824,71,0.64,72,0.682,73,0.824,74,0.64,75,0.824,76,0.64,77,0.824,78,0.64,79,0.824,80,0.64,81,0.824,82,0.824,83,0.824,84,0.009,85,0.013,86,0.009,92,0.546,95,2.319,110,1.487,117,0.722,118,0.901,120,2.352,131,1.712,146,2.645,202,1.226,212,5.259,213,4.637,214,2.157,215,3.785,216,5.004,217,1.969,218,3.278,219,4.535,220,3.785,221,3.785,222,2.546,223,4.519,224,5.965,225,3.785,226,3.067,227,1.728,228,3.785,229,4.519,230,2.545,231,5.004,232,3.785,233,3.785,234,3.785,235,2.522,236,2.545,237,2.545,238,3.785,239,3.785,240,2.545,241,5.606,242,5.606,243,3.209,244,4.535,245,4.519,246,2.604,247,2.545,248,2.545,249,3.785,250,2.545,251,3.785,252,5.004,253,2.545,254,3.785,255,3.785,256,3.785,257,2.545,258,2.545,259,2.545,260,2.545,261,1.145,262,2.545,263,2.545,264,4.519,265,2.545,266,2.545,267,2.545,268,2.545,269,2.545,270,2.545,271,2.545,272,2.545,273,2.545]],["title/components/ControlSidebarComponent.html",[0,0.321,58,0.871]],["body/components/ControlSidebarComponent.html",[0,0.517,1,0.807,2,1.199,3,0.268,4,0.239,5,0.86,6,1.349,7,1.04,8,1.04,9,0.211,13,0.976,14,2.212,15,2.026,17,2.162,19,1.545,21,0.211,22,0.646,23,0.618,24,0.415,27,0.563,29,0.329,30,0.025,31,0.383,32,0.465,33,0.361,37,0.458,38,0.329,40,0.239,41,0.106,42,0.994,45,0.917,46,1.125,47,1.45,48,1.04,49,1.805,50,1.04,51,1.04,52,0.807,53,1.04,54,0.807,55,1.04,56,0.807,57,1.04,58,1.401,59,1.813,60,1.04,61,0.757,62,0.976,63,1.04,64,0.709,65,1.278,66,1.04,67,0.807,68,1.04,69,0.807,70,1.04,71,0.807,72,0.86,73,1.04,74,0.807,75,1.04,76,0.807,77,1.04,78,0.807,79,1.04,80,0.807,81,1.04,82,1.04,83,1.04,84,0.011,85,0.016,86,0.011,92,0.646,106,3.05,117,0.646,118,0.806,122,2.4,123,2.4,202,1.45,217,1.897,218,3.157,226,3.415,227,1.924,235,2.014,261,1.445,274,5.279,275,4.655,276,2.722,277,3.01,278,5.152,279,4.476,280,5.573,281,4.166,282,5.152,283,3.211,284,4.476,285,3.211,286,3.211,287,3.211,288,3.211,289,2.722,290,3.211,291,4.476,292,4.476,293,3.211,294,3.211,295,3.211,296,4.476,297,3.794]],["title/injectables/ControlSidebarService.html",[106,1.803,158,0.539]],["body/injectables/ControlSidebarService.html",[3,0.221,4,0.197,5,1.045,9,0.174,21,0.174,22,0.563,23,0.631,24,0.429,27,0.602,29,0.399,30,0.025,31,0.29,32,0.475,33,0.438,35,0.912,36,0.912,37,0.399,38,0.271,40,0.197,41,0.087,42,1.273,46,1.43,59,1.457,84,0.009,85,0.014,86,0.009,92,0.563,106,2.03,108,2.03,110,2.236,117,0.848,118,1.109,126,4.327,158,0.607,159,0.976,171,2.842,173,3.433,179,1.113,181,1.367,182,3.433,185,1.113,199,3.459,277,3.433,281,4.253,298,5.551,299,2.247,300,4.628,301,4.628,302,4.628,303,4.628,304,4.628,305,5.104,306,5.104,307,5.104,308,4.612,309,3.9,310,3.9,311,2.65,312,2.65,313,2.65,314,2.65,315,2.65,316,3.9,317,2.65,318,3.9,319,2.65,320,3.9,321,2.65,322,2.65,323,2.65,324,2.65,325,4.327,326,3.815,327,4.327,328,5.104,329,3.9,330,3.9,331,3.9,332,3.9,333,3.9,334,3.9,335,3.9,336,2.915,337,3.9,338,3.306,339,3.306,340,3.9,341,4.823,342,3.9,343,5.104,344,3.9,345,3.9,346,3.306,347,3.306,348,3.306,349,2.65,350,2.65,351,3.306,352,2.65,353,2.65,354,2.65,355,2.65,356,2.65,357,2.65,358,2.65,359,2.65,360,3.9,361,2.65,362,2.65,363,2.65]],["title/injectables/FooterService.html",[26,1.674,158,0.539]],["body/injectables/FooterService.html",[3,0.336,4,0.3,9,0.264,16,4.109,21,0.264,22,0.752,23,0.64,24,0.536,26,2.517,27,0.587,29,0.412,30,0.025,31,0.3,32,0.482,33,0.452,35,1.061,36,0.873,37,0.533,38,0.412,40,0.3,41,0.133,46,1.012,84,0.014,85,0.018,86,0.014,92,0.752,117,0.752,118,0.725,158,0.811,159,1.482,161,2.791,164,3.44,165,3.006,171,3.057,179,1.691,180,2.467,181,1.396,185,1.149,364,3.413,365,4.026,366,4.026,367,4.026,368,4.026,369,2.711,370,4.026,371,4.417,372,5.21,373,4.417,374,4.417,375,4.417,376,4.417,377,5.21,378,5.21,379,5.21,380,4.417,381,5.21,382,4.026,383,3.413,384,2.708]],["title/components/LayoutAuthComponent.html",[0,0.321,61,0.816]],["body/components/LayoutAuthComponent.html",[0,0.408,1,0.5,2,0.839,3,0.166,4,0.148,5,0.533,7,0.644,8,0.644,9,0.131,13,0.605,14,2.045,15,1.831,16,2.107,19,1.082,21,0.289,22,0.452,23,0.646,24,0.291,27,0.595,29,0.321,30,0.025,31,0.327,32,0.399,33,0.352,35,1.048,36,1.037,37,0.45,38,0.204,40,0.148,41,0.066,42,0.924,45,0.568,46,0.787,47,1.015,48,0.644,49,1.425,50,0.644,51,0.644,52,0.5,53,0.644,54,0.5,55,0.644,56,0.5,57,0.644,58,0.5,59,1.107,60,0.644,61,1.037,62,1.179,63,0.644,64,0.439,65,0.894,66,0.644,67,0.5,68,0.644,69,0.5,70,0.644,71,0.5,72,1.362,73,0.644,74,0.5,75,0.644,76,0.5,77,0.644,78,0.5,79,0.644,80,0.5,81,0.644,82,0.644,83,0.644,84,0.007,85,0.011,86,0.007,89,2.183,92,0.452,96,3.288,97,3.288,98,3.288,99,3.288,100,3.288,101,3.288,102,3.288,108,3.437,110,1.729,117,0.635,118,0.792,127,1.486,138,1.762,142,1.41,173,1.337,176,1.337,177,1.219,181,0.533,185,0.894,199,2.342,200,0.895,202,1.015,217,1.427,218,2.376,226,2.696,227,1.519,261,1.979,277,2.608,326,1.486,385,1.686,386,3.133,387,3.133,388,3.729,389,3.288,390,3.288,391,3.288,392,3.287,393,3.977,394,3.877,395,4.399,396,3.133,397,1.988,398,2.312,399,2.861,400,2.125,401,3.877,402,4.399,403,3.133,404,2.656,405,1.988,406,1.988,407,1.988,408,3.133,409,4.399,410,1.988,411,3.133,412,1.988,413,1.988,414,1.988,415,1.988,416,1.988,417,1.988,418,1.988,419,1.988,420,1.988,421,1.988,422,1.988,423,3.877,424,1.988,425,1.686,426,1.686,427,1.988,428,3.133,429,6.021,430,1.988,431,1.988,432,1.988,433,1.988,434,1.988,435,1.988,436,1.988,437,1.988,438,1.988,439,1.988,440,1.988,441,1.988,442,1.988,443,1.988,444,3.287,445,3.578,446,1.219,447,1.988,448,1.988,449,3.877,450,1.988,451,2.656,452,1.988,453,1.988,454,1.988,455,1.988,456,1.686,457,1.486,458,1.12,459,1.486,460,3.133,461,1.686,462,1.486,463,1.686,464,1.988,465,2.656,466,1.686,467,1.686,468,1.988,469,1.988,470,1.988,471,1.988,472,1.988,473,1.988,474,5.513]],["title/components/LayoutLoginComponent.html",[0,0.321,64,0.765]],["body/components/LayoutLoginComponent.html",[0,0.547,1,0.925,2,1.316,3,0.307,4,0.274,5,0.986,6,2.322,7,1.192,8,1.192,9,0.241,13,1.119,14,2.25,15,2.071,19,1.695,21,0.241,23,0.586,24,0.513,27,0.513,30,0.025,31,0.365,37,0.503,38,0.377,40,0.274,41,0.121,45,1.05,46,1.234,47,1.591,48,1.192,49,1.911,50,1.192,51,1.192,52,0.925,53,1.192,54,0.925,55,1.192,56,0.925,57,1.192,58,0.925,59,1.05,60,1.192,61,0.867,62,1.119,63,1.192,64,1.302,65,1.683,66,1.192,67,0.925,68,1.192,69,0.925,70,1.192,71,0.925,72,0.986,73,1.192,74,0.925,75,1.192,76,0.925,77,1.192,78,0.925,79,1.192,80,0.925,81,1.192,82,1.192,83,1.192,84,0.013,85,0.017,86,0.013,92,0.708,117,0.708,118,0.884,181,0.986,196,1.914,200,1.655,202,1.591,211,4.132,217,2.035,218,3.387,226,3.614,227,2.036,444,3.119,445,2.75,451,3.119,465,4.163,466,3.119,467,3.119,475,3.119,476,5.527,477,4.91,478,3.679,479,3.679,480,3.679,481,3.119]],["title/components/LayoutRegisterComponent.html",[0,0.321,67,0.871]],["body/components/LayoutRegisterComponent.html",[0,0.562,1,0.992,2,1.378,3,0.329,4,0.294,5,1.058,7,1.279,8,1.279,9,0.259,13,1.201,14,2.268,15,2.093,19,1.776,21,0.259,23,0.531,24,0.531,27,0.477,30,0.025,31,0.383,37,0.404,38,0.404,40,0.294,41,0.13,45,1.127,46,1.293,47,1.667,48,1.279,49,1.964,50,1.279,51,1.279,52,0.992,53,1.279,54,0.992,55,1.279,56,0.992,57,1.279,58,0.992,59,1.127,60,1.279,61,0.93,62,1.201,63,1.279,64,0.872,65,1.731,66,1.279,67,1.524,68,1.279,69,0.992,70,1.279,71,0.992,72,1.058,73,1.279,74,0.992,75,1.279,76,0.992,77,1.279,78,0.992,79,1.279,80,0.992,81,1.279,82,1.279,83,1.279,84,0.014,85,0.018,86,0.014,92,0.742,117,0.57,118,0.711,202,1.667,217,2.107,218,2.42,227,2.093,462,3.846,482,3.347,483,5.145,484,3.948,485,3.948,486,3.846]],["title/injectables/LoggerService.html",[158,0.539,487,1.674]],["body/injectables/LoggerService.html",[0,0.549,3,0.31,4,0.276,9,0.244,21,0.244,23,0.515,24,0.458,27,0.458,29,0.506,30,0.025,31,0.368,32,0.412,33,0.555,37,0.506,38,0.38,40,0.276,41,0.122,42,0.716,84,0.013,85,0.017,86,0.013,92,0.713,108,1.932,117,0.535,118,0.668,138,2.526,146,2.487,158,0.769,159,1.367,206,2.775,207,2.775,369,2.571,399,2.387,400,2.86,487,2.387,488,3.147,489,5.018,490,3.712,491,3.712,492,3.712,493,5.018,494,6.164,495,3.712,496,5.552,497,3.712,498,3.712,499,3.712,500,3.147,501,6.57,502,5.919,503,2.889,504,5.552,505,4.94,506,3.147,507,3.712,508,3.712,509,4.94,510,3.693]],["title/components/LogoComponent.html",[0,0.321,69,0.871]],["body/components/LogoComponent.html",[0,0.541,1,0.899,2,1.291,3,0.298,4,0.266,5,0.958,7,1.158,8,1.158,9,0.235,13,1.087,14,2.242,15,2.062,19,1.663,21,0.235,22,0.695,23,0.581,24,0.447,27,0.541,29,0.366,30,0.025,31,0.405,32,0.402,33,0.402,35,0.599,36,0.599,37,0.558,38,0.366,40,0.266,41,0.118,42,0.69,45,1.021,46,1.211,47,1.561,48,1.158,49,1.889,50,1.158,51,1.158,52,0.899,53,1.158,54,0.899,55,1.158,56,0.899,57,1.158,58,0.899,59,1.021,60,1.158,61,0.843,62,1.087,63,1.158,64,0.789,65,1.375,66,1.158,67,0.899,68,1.158,69,1.466,70,1.158,71,0.899,72,0.958,73,1.158,74,0.899,75,1.158,76,0.899,77,1.158,78,0.899,79,1.158,80,0.899,81,1.158,82,1.158,83,1.158,84,0.012,85,0.017,86,0.012,92,0.695,95,2.953,117,0.516,118,0.644,120,2.507,202,1.561,217,2.006,227,2.013,400,1.727,511,3.032,512,4.687,513,4.818,514,4.073,515,3.576,516,2.817,517,4.818,518,4.085,519,3.576,520,3.576,521,2.013,522,2.405,523,3.032,524,3.576,525,3.576,526,4.818,527,4.818]],["title/injectables/LogoService.html",[158,0.539,516,1.674]],["body/injectables/LogoService.html",[3,0.331,4,0.295,9,0.261,21,0.261,22,0.745,23,0.625,24,0.532,27,0.584,29,0.406,30,0.025,31,0.295,32,0.479,33,0.446,35,0.962,36,0.866,37,0.529,38,0.406,40,0.295,41,0.131,42,1.108,84,0.014,85,0.018,86,0.014,92,0.745,117,0.745,118,0.715,158,0.804,159,1.462,161,2.773,164,3.422,165,3.163,171,3.044,179,1.668,180,2.434,181,1.384,185,1.134,369,2.688,383,3.367,384,2.671,446,3.165,458,2.236,512,5.038,516,2.773,528,3.367,529,3.971,530,3.971,531,3.971,532,3.971,533,3.971,534,4.866,535,5.164,536,4.866,537,3.971,538,3.971,539,3.971,540,3.971,541,3.971,542,3.971,543,3.971,544,2.969,545,2.969]],["title/components/MenuAsideComponent.html",[0,0.321,71,0.871]],["body/components/MenuAsideComponent.html",[0,0.499,1,0.744,2,1.132,3,0.247,4,0.22,5,0.793,6,1.244,7,0.959,8,0.959,9,0.194,13,0.9,14,2.187,15,1.996,17,2.042,19,1.459,21,0.194,22,0.61,23,0.609,24,0.392,27,0.577,29,0.303,30,0.025,31,0.367,32,0.474,33,0.332,35,0.901,36,0.901,37,0.55,38,0.303,40,0.22,41,0.098,42,0.571,45,0.845,46,1.062,47,1.369,48,0.959,49,1.741,50,0.959,51,0.959,52,0.744,53,0.959,54,0.744,55,0.959,56,0.744,57,0.959,58,0.744,59,0.845,60,0.959,61,0.698,62,0.9,63,0.959,64,0.654,65,1.206,66,0.959,67,0.744,68,0.959,69,0.744,70,0.959,71,1.351,72,1.667,73,0.959,74,0.744,75,0.959,76,0.744,77,0.959,78,0.744,79,0.959,80,0.744,81,0.959,82,0.959,83,0.959,84,0.01,85,0.015,86,0.01,92,0.61,95,2.59,104,1.979,108,2.797,117,0.427,118,0.533,120,2.797,121,1.991,138,1.556,142,1.902,145,1.667,157,5.011,161,1.43,181,1.132,196,3.343,200,1.332,202,1.369,208,2.323,217,1.815,227,1.856,390,3.684,391,3.684,546,5.368,547,4.733,548,2.51,549,3.159,550,4.929,551,4.226,552,4.929,553,3.684,554,3.684,555,2.213,556,4.226,557,2.843,558,2.96,559,2.96,560,2.96,561,2.96,562,2.96,563,2.96,564,1.991,565,2.213,566,2.96,567,2.96,568,2.96,569,2.51,570,2.213,571,4.226,572,4.226,573,4.226,574,5.375]],["title/injectables/MenuService.html",[158,0.539,398,1.674]],["body/injectables/MenuService.html",[3,0.355,4,0.317,9,0.28,21,0.28,22,0.779,23,0.61,24,0.501,27,0.579,29,0.553,30,0.025,31,0.402,32,0.495,33,0.607,35,0.714,36,0.714,37,0.607,38,0.436,40,0.317,41,0.14,42,1.204,72,1.59,84,0.015,85,0.019,86,0.015,92,0.779,117,0.779,118,0.767,158,0.841,159,1.569,161,2.866,164,3.513,165,3.088,171,3.111,179,1.79,180,2.611,181,1.447,185,1.216,195,3.185,196,3.424,200,1.917,369,2.812,384,2.866,398,2.61,575,3.612,576,5.403,577,4.261,578,4.261,579,4.261]],["title/classes/Message.html",[41,0.114,580,1.674]],["body/classes/Message.html",[3,0.35,4,0.312,9,0.276,21,0.276,22,0.772,23,0.655,24,0.389,27,0.608,29,0.43,30,0.025,31,0.312,32,0.547,33,0.472,37,0.43,40,0.312,41,0.138,84,0.015,85,0.019,86,0.015,138,2.413,146,1.764,177,3.612,208,2.576,235,2.409,580,2.586,581,2.573,582,3.56,583,4.996,584,3.964,585,3.612,586,4.996,587,3.601,588,5.354,589,4.199,590,4.199,591,4.199,592,4.199,593,3.56,594,3.56,595,4.199,596,4.199,597,4.199,598,4.199,599,4.199,600,4.199,601,4.199,602,4.199,603,3.139]],["title/components/MessagesBoxComponent.html",[0,0.321,74,0.871]],["body/components/MessagesBoxComponent.html",[0,0.503,1,0.761,2,1.15,3,0.252,4,0.225,5,0.811,6,1.271,7,0.98,8,0.98,9,0.199,13,0.92,14,2.194,15,1.962,17,2.074,19,1.482,21,0.199,22,0.619,23,0.552,24,0.398,27,0.503,29,0.31,30,0.025,31,0.371,32,0.416,33,0.34,35,0.507,36,0.72,37,0.556,38,0.31,40,0.225,41,0.1,42,0.829,45,0.864,46,1.079,47,1.391,48,0.98,49,1.759,50,0.98,51,0.98,52,0.761,53,0.98,54,0.761,55,0.98,56,0.761,57,0.98,58,0.761,59,0.864,60,0.98,61,0.713,62,0.92,63,0.98,64,0.668,65,1.225,66,0.98,67,0.761,68,0.98,69,0.761,70,0.98,71,0.761,72,0.811,73,0.98,74,1.364,75,0.98,76,0.761,77,0.98,78,0.761,79,0.98,80,0.761,81,0.98,82,0.98,83,0.98,84,0.011,85,0.015,86,0.011,92,0.619,117,0.437,118,0.545,120,1.575,142,1.362,202,1.391,217,1.837,227,1.874,235,1.931,246,1.575,399,2.074,487,2.623,493,3.639,503,2.983,580,2.876,604,4.86,605,4.285,606,1.854,607,4.293,608,4.208,609,3.355,610,2.887,611,4.989,612,3.026,613,2.825,614,4.229,615,3.209,616,3.639,617,2.565,618,2.262,619,2.262,620,2.565,621,2.262,622,2.262,623,2.035,624,2.035,625,3.026,626,2.565,627,3.026,628,3.026,629,4.293,630,2.565,631,2.565,632,2.565,633,3.026,634,2.565,635,3.026,636,3.026,637,3.026,638,3.026,639,4.293,640,4.293,641,4.293,642,4.293,643,3.026,644,4.293,645,4.293,646,3.026]],["title/injectables/MessagesService.html",[158,0.539,613,1.803]],["body/injectables/MessagesService.html",[3,0.269,4,0.24,9,0.212,21,0.212,22,0.648,23,0.634,24,0.479,27,0.578,29,0.33,30,0.025,31,0.24,32,0.52,33,0.362,35,0.984,36,0.984,37,0.572,38,0.33,40,0.24,41,0.106,42,0.997,84,0.011,85,0.016,86,0.011,92,0.648,117,0.465,118,0.808,142,1.452,158,0.699,159,1.188,171,2.495,179,1.355,181,1.752,182,3.02,185,1.282,246,1.679,261,1.452,580,3.221,585,1.977,608,4.484,613,2.337,622,2.412,647,2.17,648,4.379,649,5.165,650,5.165,651,4.734,652,4.49,653,4.49,654,4.49,655,3.226,656,5.082,657,3.226,658,3.226,659,3.226,660,3.226,661,2.412,662,2.412,663,2.412,664,3.807,665,4.379,666,2.735,667,2.412,668,2.735,669,2.735,670,2.735,671,2.735,672,2.735,673,2.17,674,2.412,675,2.735,676,2.735,677,2.735,678,3.357,679,2.735,680,2.735,681,2.735,682,2.735,683,2.735,684,2.735,685,2.735,686,2.735,687,3.807,688,2.735,689,2.735,690,2.735,691,2.735,692,2.735,693,2.412,694,2.735,695,2.735,696,3.226,697,3.226,698,3.226,699,3.226,700,3.226,701,3.226,702,3.226,703,2.735,704,2.735,705,1.817,706,2.735,707,3.226]],["title/modules/NgxAdminLteModule.html",[708,2.33,709,2.123]],["body/modules/NgxAdminLteModule.html",[1,1.362,3,0.194,4,0.173,9,0.153,11,1.74,26,2.619,30,0.025,37,0.71,38,0.238,39,1.973,40,0.263,41,0.077,45,0.664,52,1.362,54,1.362,56,1.362,58,1.362,61,1.277,62,1.076,64,1.197,67,1.362,69,1.362,71,1.362,74,1.362,76,1.362,78,1.362,80,1.362,84,0.008,85,0.012,86,0.008,87,1.74,104,1.996,106,2.821,108,1.842,110,0.915,121,1.566,122,1.74,123,1.74,135,2.619,143,1.973,147,2.381,181,0.624,185,0.664,188,2.169,191,1.74,200,1.047,213,1.74,222,2.88,275,1.74,398,2.619,399,1.124,400,2.619,425,1.973,426,1.973,487,2.619,516,2.619,521,2.694,522,1.566,523,1.973,547,1.74,605,1.74,613,2.821,620,1.973,621,1.74,705,1.993,708,1.566,709,4.352,710,1.74,711,1.426,712,3.201,713,1.74,714,3.631,715,3.631,716,1.973,717,1.973,718,1.973,719,1.973,720,3.52,721,2.821,722,3.001,723,1.973,724,1.566,725,1.74,726,1.311,727,1.74,728,3.001,729,3.539,730,3.539,731,1.74,732,1.211,733,2.328,734,3.539,735,1.973,736,1.74,737,3.539,738,2.328,739,2.328,740,1.973,741,3.201,742,3.539,743,1.973,744,2.328,745,2.328,746,2.328,747,2.328,748,2.646,749,2.328,750,1.973,751,1.74,752,3.001,753,2.328,754,2.328,755,2.646,756,3.539,757,2.328,758,2.328,759,2.328,760,1.973,761,2.328,762,2.328,763,2.328,764,2.328,765,4.785,766,2.328,767,1.74,768,2.328,769,1.74,770,2.328,771,1.74,772,2.328,773,2.328,774,2.328,775,2.328,776,2.328,777,1.973,778,2.328,779,2.328,780,2.328,781,1.973,782,2.328,783,2.328,784,2.328,785,2.328,786,2.328,787,1.973,788,2.328,789,2.328,790,2.328,791,2.328,792,2.328,793,1.74,794,2.328,795,2.328]],["title/classes/Notification.html",[41,0.114,796,1.674]],["body/classes/Notification.html",[3,0.381,4,0.34,9,0.3,21,0.3,22,0.814,23,0.648,24,0.423,27,0.593,29,0.467,30,0.025,31,0.34,32,0.534,33,0.513,40,0.34,41,0.211,84,0.016,85,0.02,86,0.016,138,2.464,146,1.918,176,4.118,581,2.797,584,4.118,587,3.794,593,3.87,594,3.87,796,2.725,797,3.87,798,5.641,799,4.565,800,4.565,801,4.565,802,4.565,803,4.565,804,4.565]],["title/components/NotificationBoxComponent.html",[0,0.321,76,0.871]],["body/components/NotificationBoxComponent.html",[0,0.507,1,0.773,2,1.163,3,0.257,4,0.229,5,0.824,6,1.292,7,0.996,8,0.996,9,0.202,13,0.935,14,2.199,15,1.969,17,2.098,19,1.499,21,0.202,22,0.626,23,0.555,24,0.403,27,0.507,29,0.315,30,0.025,31,0.374,32,0.42,33,0.345,35,0.516,36,0.516,37,0.56,38,0.315,40,0.229,41,0.101,42,0.838,45,0.878,46,1.091,47,1.407,48,0.996,49,1.771,50,0.996,51,0.996,52,0.773,53,0.996,54,0.773,55,0.996,56,0.773,57,0.996,58,0.773,59,0.878,60,0.996,61,0.725,62,0.935,63,0.996,64,0.679,65,1.24,66,0.996,67,0.773,68,0.996,69,0.773,70,0.996,71,0.773,72,0.824,73,0.996,74,0.773,75,0.996,76,1.374,77,0.996,78,0.773,79,0.996,80,0.773,81,0.996,82,0.996,83,0.996,84,0.011,85,0.015,86,0.011,92,0.626,117,0.444,118,0.554,142,1.384,202,1.407,217,1.853,227,1.888,235,1.954,246,1.601,399,2.098,487,2.642,503,3.001,606,1.885,609,3.386,610,2.921,614,4.267,615,3.246,617,2.608,618,2.299,619,2.299,621,2.299,623,2.069,624,2.069,630,2.608,631,2.608,632,2.608,634,2.608,721,2.846,767,4.311,777,2.608,796,3.164,805,4.89,806,4.343,807,4.267,808,5.034,809,3.076,810,3.682,811,2.608,812,4.343,813,3.076,814,4.343,815,3.076,816,3.076,817,3.076,818,3.076,819,4.343,820,4.343,821,4.343,822,4.343,823,4.343]],["title/injectables/NotificationsService.html",[158,0.539,721,1.803]],["body/injectables/NotificationsService.html",[3,0.269,4,0.24,9,0.212,21,0.212,22,0.648,23,0.634,24,0.479,27,0.578,29,0.33,30,0.025,31,0.24,32,0.52,33,0.362,35,0.984,36,0.984,37,0.572,38,0.33,40,0.24,41,0.106,42,0.997,84,0.011,85,0.016,86,0.011,92,0.648,117,0.465,118,0.808,142,1.452,158,0.699,159,1.188,171,2.495,179,1.355,181,1.752,182,3.02,185,1.282,246,1.679,261,1.452,585,1.977,648,4.379,651,4.734,656,5.082,661,2.412,662,2.412,665,4.379,666,2.735,667,2.412,668,2.735,669,2.735,670,2.735,671,2.735,672,2.735,673,2.17,674,2.412,675,2.735,676,2.735,677,2.735,678,3.357,679,2.735,680,2.735,681,2.735,682,2.735,683,2.735,684,2.735,685,2.735,686,2.735,687,3.807,688,2.735,689,2.735,690,2.735,691,2.735,692,2.735,693,2.412,694,2.735,695,2.735,703,2.735,704,2.735,705,1.817,706,2.735,721,2.337,796,3.221,807,5.652,811,2.735,824,2.17,825,5.165,826,5.165,827,4.49,828,4.49,829,4.49,830,3.226,831,3.226,832,3.226,833,3.226,834,3.226,835,2.412,836,3.807,837,3.226,838,3.226,839,3.226,840,3.226,841,3.226,842,3.226,843,3.226,844,3.226]],["title/classes/Preference.html",[41,0.114,845,2.33]],["body/classes/Preference.html",[3,0.395,4,0.352,9,0.311,21,0.311,22,0.832,23,0.64,24,0.535,27,0.577,29,0.484,30,0.025,31,0.352,32,0.519,33,0.532,40,0.352,41,0.156,84,0.016,85,0.02,86,0.016,138,2.384,146,2.423,235,2.13,581,2.901,587,3.184,845,3.88,846,4.013,847,4.185,848,4.651,849,5.768,850,4.733,851,4.013,852,4.013,853,4.013,854,4.013]],["title/injectables/RestService.html",[158,0.539,855,2.123]],["body/injectables/RestService.html",[3,0.18,4,0.161,9,0.142,21,0.219,22,0.482,23,0.644,24,0.2,27,0.599,29,0.609,30,0.025,31,0.45,32,0.53,33,0.668,35,0.362,36,0.362,37,0.471,38,0.221,40,0.161,41,0.071,42,1.123,84,0.008,85,0.012,86,0.008,92,0.482,117,0.873,118,0.389,138,2.087,142,2.619,144,1.453,145,1.216,146,2.211,158,0.521,159,0.795,179,0.908,181,0.579,185,1.754,235,0.972,261,2.619,325,4.807,327,4.219,503,1.74,565,3.056,584,1.453,585,1.324,603,1.615,619,1.615,661,1.615,662,1.615,736,2.499,741,3.44,743,1.832,751,2.499,855,2.049,856,1.832,857,4.35,858,4.089,859,4.089,860,4.089,861,4.089,862,2.499,863,3.343,864,3.343,865,4.602,866,3.901,867,3.343,868,3.343,869,3.343,870,3.466,871,3.343,872,2.161,873,3.343,874,2.834,875,2.161,876,2.161,877,5.278,878,2.834,879,2.161,880,2.834,881,5.21,882,2.161,883,2.834,884,2.161,885,2.161,886,2.161,887,2.834,888,2.161,889,2.161,890,1.832,891,2.161,892,3.343,893,5.82,894,2.161,895,3.343,896,2.161,897,2.161,898,2.834,899,3.466,900,2.161,901,4.602,902,2.161,903,2.161,904,2.161,905,2.161,906,2.161,907,1.832,908,3.901,909,1.832,910,5.488,911,3.343,912,2.161,913,3.343,914,1.832,915,2.161,916,3.343,917,4.089,918,2.161,919,2.161,920,2.161,921,1.832,922,1.324,923,3.343,924,3.225,925,4.977,926,2.161,927,1.832,928,1.615,929,2.161,930,2.161,931,2.161,932,2.161,933,2.161,934,2.834,935,1.832,936,2.161,937,1.615,938,2.161,939,2.161,940,2.161,941,2.161,942,2.161,943,2.161,944,2.161,945,2.161,946,5.263,947,4.602,948,2.161,949,4.602,950,2.161,951,3.343,952,2.161,953,2.161,954,2.161,955,2.161,956,2.161,957,2.161,958,1.832]],["title/pipes/SafeHtmlPipe.html",[720,1.951,924,2.123]],["body/pipes/SafeHtmlPipe.html",[3,0.401,4,0.358,9,0.316,13,1.463,27,0.446,29,0.492,30,0.025,31,0.433,32,0.401,33,0.54,36,0.807,37,0.596,38,0.492,40,0.358,41,0.158,84,0.017,85,0.02,86,0.017,92,0.694,117,0.694,138,2.307,144,3.236,185,1.373,202,1.559,297,5.312,720,3.28,731,3.597,732,2.504,752,4.079,924,2.948,959,4.939,960,4.079,961,4.811,962,5.826,963,4.811,964,5.826,965,5.826,966,4.811,967,4.811,968,4.811]],["title/components/TasksBoxComponent.html",[0,0.321,78,0.871]],["body/components/TasksBoxComponent.html",[0,0.525,1,0.836,2,1.229,3,0.277,4,0.247,5,0.891,6,1.397,7,1.077,8,1.077,9,0.218,13,1.011,14,2.222,15,2.001,17,2.215,19,1.583,21,0.218,22,0.662,23,0.525,24,0.487,27,0.55,30,0.025,31,0.341,32,0.438,35,0.558,36,0.558,37,0.469,38,0.34,40,0.247,41,0.11,45,0.949,46,1.153,47,1.486,48,1.077,49,1.833,50,1.077,51,1.077,52,0.836,53,1.077,54,0.836,55,1.077,56,0.836,57,1.077,58,0.836,59,0.949,60,1.077,61,0.784,62,1.011,63,1.077,64,0.734,65,1.309,66,1.077,67,0.836,68,1.077,69,0.836,70,1.077,71,0.836,72,0.891,73,1.077,74,0.836,75,1.077,76,0.836,77,1.077,78,1.422,79,1.077,80,0.836,81,1.077,82,1.077,83,1.077,84,0.012,85,0.016,86,0.012,92,0.662,95,2.81,117,0.48,118,0.599,120,2.386,202,1.486,208,2.063,217,1.932,227,1.953,336,4.436,339,3.888,399,2.215,503,2.944,580,2.536,606,2.038,608,3.53,609,3.53,610,3.085,618,3.428,622,2.486,623,2.237,624,2.237,769,4.586,969,5.201,970,4.586,971,5.249,972,3.326,973,3.326,974,3.326,975,3.326,976,4.586,977,4.586,978,4.586,979,3.428,980,5.658,981,4.586,982,4.586]],["title/injectables/TranslateService.html",[158,0.539,400,1.674]],["body/injectables/TranslateService.html",[3,0.269,4,0.24,9,0.212,21,0.212,22,0.648,23,0.564,24,0.416,27,0.544,29,0.33,30,0.025,31,0.24,32,0.431,33,0.362,35,0.541,36,0.541,37,0.572,38,0.33,40,0.24,41,0.106,42,1.227,84,0.011,85,0.016,86,0.011,92,0.648,104,2.056,117,0.648,118,0.581,138,1.188,158,0.699,159,1.188,161,2.495,185,0.921,201,2.735,202,1.045,208,2.499,217,1.653,222,2.17,227,1.928,235,1.452,261,2.641,399,2.495,400,2.495,458,2.528,486,2.412,510,3.861,521,1.817,522,2.17,553,3.861,555,2.412,557,3.02,564,2.17,570,3.357,732,2.337,983,2.412,984,6.078,985,5.584,986,6.078,987,4.49,988,3.226,989,3.226,990,3.226,991,3.357,992,4.388,993,2.412,994,3.357,995,2.412,996,2.735,997,3.861,998,2.735,999,3.226,1000,5.153,1001,2.735,1002,3.226,1003,3.357,1004,4.49,1005,3.226,1006,3.226,1007,3.226,1008,2.735,1009,4.49,1010,3.226,1011,4.49,1012,3.226,1013,4.49,1014,2.735,1015,4.49,1016,3.807,1017,3.226,1018,5.87,1019,5.584,1020,3.226,1021,3.226,1022,3.226,1023,3.226,1024,3.226,1025,3.226]],["title/classes/User.html",[41,0.114,208,1.362]],["body/classes/User.html",[3,0.315,4,0.281,9,0.248,21,0.248,22,0.72,23,0.66,24,0.463,27,0.619,29,0.386,30,0.025,31,0.281,32,0.542,33,0.424,35,0.633,36,0.633,40,0.281,41,0.124,84,0.013,85,0.017,86,0.013,92,0.72,110,2.2,117,0.544,138,2.532,146,2.098,185,1.077,193,4.185,204,3.199,208,1.963,235,1.698,581,2.313,587,2.538,603,2.821,847,3.765,848,4.185,851,3.199,852,3.199,853,3.199,854,3.199,1026,3.199,1027,5.598,1028,4.185,1029,4.185,1030,4.185,1031,5.958,1032,4.994,1033,3.774,1034,3.774,1035,3.774,1036,3.774,1037,3.774,1038,3.774,1039,3.774,1040,4.994,1041,3.774,1042,4.994,1043,3.774,1044,3.774,1045,3.774,1046,3.774,1047,3.774,1048,3.774]],["title/components/UserBoxComponent.html",[0,0.321,80,0.871]],["body/components/UserBoxComponent.html",[0,0.496,1,0.735,2,1.122,3,0.244,4,0.217,5,0.783,6,1.228,7,0.947,8,0.947,9,0.192,13,0.889,14,2.183,15,1.948,17,2.023,19,1.446,21,0.192,22,0.604,23,0.585,24,0.271,27,0.496,29,0.299,30,0.025,31,0.364,32,0.349,33,0.328,35,0.82,36,0.702,37,0.547,38,0.299,40,0.217,41,0.096,42,0.564,45,0.834,46,1.052,47,1.356,48,0.947,49,1.731,50,0.947,51,0.947,52,0.735,53,0.947,54,0.735,55,0.947,56,0.735,57,0.947,58,0.735,59,0.834,60,0.947,61,0.689,62,0.889,63,0.947,64,0.645,65,1.195,66,0.947,67,0.735,68,0.947,69,0.735,70,0.947,71,0.735,72,0.783,73,0.947,74,0.735,75,0.947,76,0.735,77,0.947,78,0.735,79,0.947,80,1.343,81,1.585,82,0.947,83,0.947,84,0.01,85,0.015,86,0.01,92,0.604,93,3.291,104,2.082,117,0.422,118,0.754,121,1.966,144,1.966,181,1.122,196,3.154,200,1.315,202,1.356,208,2.616,217,1.802,227,1.845,399,2.843,457,2.185,458,1.645,459,2.185,486,2.185,553,3.658,555,2.185,557,2.816,564,1.966,569,2.478,570,2.185,606,1.791,609,3.291,610,2.816,615,2.185,623,1.966,624,1.966,771,4.228,847,2.816,1028,3.13,1029,3.13,1030,3.13,1049,4.795,1050,2.922,1051,2.922,1052,3.55,1053,3.55,1054,3.55,1055,3.55,1056,3.55,1057,2.922,1058,2.478,1059,2.478,1060,2.478,1061,2.478,1062,2.922,1063,2.478,1064,2.478,1065,2.922,1066,5.344,1067,4.187,1068,4.187,1069,4.187,1070,4.187,1071,4.187,1072,4.187,1073,4.187,1074,4.187,1075,4.187]],["title/injectables/UserService.html",[104,1.276,158,0.539]],["body/injectables/UserService.html",[3,0.318,4,0.283,9,0.25,21,0.25,22,0.725,23,0.635,24,0.466,27,0.592,29,0.514,30,0.025,31,0.374,32,0.499,33,0.564,35,0.638,36,0.638,37,0.612,38,0.39,40,0.283,41,0.125,42,1.154,84,0.013,85,0.018,86,0.013,92,0.725,93,4.181,104,1.85,110,1.497,117,0.811,118,0.905,158,0.782,159,1.402,161,2.717,164,3.367,165,2.926,171,3.003,179,1.6,180,2.334,181,1.507,185,1.087,195,2.847,196,3.322,200,1.714,205,2.847,208,2.653,261,1.714,369,2.615,384,2.562,564,2.562,705,2.829,1076,3.229,1077,4.768,1078,5.025,1079,3.809,1080,3.809,1081,3.809,1082,3.809,1083,3.809,1084,3.809,1085,5.025,1086,3.809,1087,3.809]],["title/changelog.html",[145,1.633,1088,2.167,1089,2.458]],["body/changelog.html",[2,0.897,5,0.897,23,0.31,26,1.617,29,0.343,30,0.022,46,0.841,59,1.315,64,0.739,65,1.503,72,1.647,84,0.012,85,0.016,86,0.012,89,2.965,93,2.252,104,1.696,132,2.252,135,1.617,147,2.252,164,1.885,165,1.742,177,2.823,181,0.897,246,1.742,277,3.098,281,2.502,348,3.905,351,2.838,389,2.502,393,2.502,398,2.225,446,2.052,514,3.443,516,2.225,544,4.241,545,4.447,549,3.937,554,2.502,673,2.252,674,2.502,711,2.052,720,1.885,732,1.742,755,2.502,793,2.502,796,1.617,845,2.252,855,2.052,857,3.443,862,5.172,922,2.823,928,2.502,937,2.502,979,2.502,1003,4.241,1077,2.838,1089,2.838,1090,3.348,1091,2.502,1092,3.348,1093,3.348,1094,3.348,1095,3.348,1096,3.348,1097,2.502,1098,3.348,1099,2.838,1100,2.838,1101,3.348,1102,5.949,1103,2.838,1104,2.838,1105,3.348,1106,3.348,1107,2.838,1108,3.348,1109,3.348,1110,3.348,1111,3.348,1112,3.348,1113,3.348,1114,3.348,1115,3.348,1116,5.043,1117,4.607,1118,3.348,1119,6.416,1120,4.607,1121,3.348,1122,3.348,1123,3.348,1124,4.607,1125,5.267,1126,3.348,1127,3.348,1128,3.348,1129,3.348,1130,4.607,1131,3.348,1132,3.348,1133,2.838,1134,3.348,1135,3.348,1136,3.348,1137,3.348,1138,3.348,1139,2.838,1140,2.838,1141,3.348,1142,3.348,1143,3.348,1144,3.348,1145,2.838,1146,3.348,1147,3.348,1148,5.949,1149,3.348,1150,3.348,1151,3.348,1152,3.348,1153,2.838,1154,2.838,1155,3.348,1156,3.348,1157,3.348,1158,3.348,1159,4.607,1160,3.905,1161,3.348,1162,3.348,1163,4.607,1164,4.607,1165,2.838,1166,3.348,1167,3.348,1168,3.348,1169,2.838,1170,2.838,1171,3.348,1172,3.348,1173,3.348,1174,3.348,1175,3.348,1176,3.348,1177,3.348,1178,2.838,1179,3.348,1180,4.607,1181,3.348,1182,3.348,1183,4.607,1184,4.607,1185,3.348,1186,2.838,1187,3.348,1188,3.348,1189,3.348,1190,3.348,1191,3.348,1192,3.348,1193,4.607,1194,3.348]],["title/coverage.html",[1195,3.998]],["body/coverage.html",[0,0.63,1,0.836,9,0.218,10,3.428,11,2.486,12,2.82,26,1.607,30,0.025,32,0.277,41,0.186,52,0.836,54,0.836,56,0.836,58,0.836,61,0.784,64,0.734,67,0.836,69,0.836,71,0.836,74,0.836,76,0.836,78,0.836,80,0.836,84,0.012,85,0.016,86,0.012,87,2.486,88,2.82,104,1.225,106,1.731,128,2.82,135,1.607,158,1.035,160,2.82,181,0.891,187,2.486,188,2.038,190,2.82,191,2.486,192,2.82,208,1.307,212,2.82,213,2.486,214,2.82,274,2.82,275,2.486,276,2.82,298,2.82,299,2.82,364,2.82,385,2.82,398,1.607,400,1.607,475,2.82,482,2.82,487,1.607,488,2.82,503,3.712,511,2.82,516,1.607,528,2.82,546,2.82,547,2.486,548,2.82,575,2.82,580,1.607,582,2.82,604,2.82,605,2.486,606,3.467,613,1.731,626,4.796,647,3.085,663,2.486,705,1.873,720,1.873,721,1.731,725,2.486,726,1.873,727,2.486,748,2.486,767,2.486,769,2.486,771,2.486,796,1.607,797,2.82,805,2.82,824,3.085,835,2.486,845,2.237,846,2.82,855,2.038,856,2.82,924,2.038,959,2.82,960,2.82,969,2.82,983,3.923,991,2.486,997,2.486,1026,2.82,1049,2.82,1076,2.82,1195,2.82,1196,2.486,1197,3.326,1198,2.82,1199,3.326,1200,5.249,1201,5.249,1202,5.658,1203,6.135,1204,3.326,1205,6.135,1206,3.326,1207,5.935,1208,4.586,1209,3.326,1210,3.326,1211,3.326,1212,3.326,1213,3.326,1214,3.326,1215,3.326]],["title/dependencies.html",[711,2.552,1091,2.167]],["body/dependencies.html",[30,0.025,38,0.497,84,0.017,85,0.02,86,0.017,179,2.041,200,2.185,222,3.267,521,3.543,522,3.267,711,2.976,713,3.631,726,2.735,731,4.38,732,3.049,735,4.118,740,4.118,1097,3.631,1216,4.857,1217,4.857,1218,6.687,1219,4.857,1220,4.857,1221,4.857,1222,3.631,1223,4.857,1224,4.857,1225,4.857,1226,4.857,1227,4.857,1228,4.857,1229,4.857,1230,4.857,1231,4.857,1232,4.857]],["title/miscellaneous/functions.html",[922,2.552,1233,1.633]],["body/miscellaneous/functions.html",[21,0.35,29,0.546,30,0.023,31,0.397,33,0.599,84,0.019,85,0.022,86,0.019,725,3.99,726,3.489,727,4.632,741,3.99,748,4.632,922,3.271,1233,3.006,1234,5.338,1235,5.338]],["title/index.html",[21,0.19,145,1.633,1088,2.167]],["body/index.html",[0,0.494,2,0.988,4,0.157,5,0.564,6,0.516,9,0.081,15,0.84,16,1.416,23,0.399,24,0.421,26,0.593,30,0.025,31,0.206,35,0.206,37,0.604,38,0.126,40,0.091,41,0.108,42,1.028,46,0.309,61,0.948,64,0.271,65,0.601,72,1.27,84,0.004,85,0.007,86,0.004,89,2.855,96,0.918,97,0.918,98,0.918,99,0.918,100,0.918,101,0.918,102,1.574,104,1.481,108,2.093,110,1.784,120,1.705,127,1.574,129,1.041,131,0.826,132,1.859,133,0.918,135,1.017,137,1.041,138,1.746,142,0.947,146,1.69,147,1.859,158,0.328,161,1.781,165,1.096,173,2.479,176,3.189,177,3.013,181,1.27,185,0.789,188,2.636,193,0.918,194,2.777,196,1.438,205,0.918,206,2.449,207,2.066,208,2.571,209,1.785,210,1.041,211,2.449,219,1.041,226,0.752,227,1.273,243,1.041,244,2.777,246,0.639,261,1.474,289,1.041,308,1.041,326,2.755,336,1.574,338,1.041,341,1.785,346,1.041,347,1.041,369,1.096,371,1.041,373,3.647,374,1.041,388,1.041,389,0.918,390,0.918,391,0.918,392,1.785,393,2.449,398,1.335,404,1.041,446,1.694,456,1.785,457,2.449,458,2.932,461,2.343,462,0.918,463,2.343,481,3.647,487,0.593,489,1.785,500,1.041,503,0.639,506,1.785,510,0.918,512,2.066,514,1.574,516,1.335,518,1.041,521,3,534,1.785,536,1.785,544,0.918,545,0.918,549,0.918,554,2.449,557,0.826,565,1.574,580,2.574,583,1.785,584,2.204,585,1.29,586,2.343,608,1.859,613,1.438,616,1.785,667,0.918,673,0.826,693,0.918,708,0.826,709,1.29,712,0.918,721,1.096,724,0.826,726,3.324,728,1.041,732,0.639,736,1.574,750,1.041,751,0.918,755,0.918,760,1.041,781,1.041,787,1.041,793,1.574,796,2.078,810,1.041,847,2.705,848,2.066,855,1.694,857,0.918,862,3.215,866,1.785,870,1.041,874,1.041,877,3.848,878,1.041,880,1.041,881,2.777,883,1.785,887,1.041,890,1.041,898,1.041,899,1.041,907,1.041,908,1.041,909,1.041,914,1.041,921,1.785,922,0.752,927,1.785,928,0.918,934,1.041,935,2.777,937,0.918,958,1.785,979,0.918,992,1.574,993,1.574,994,0.918,995,0.918,1000,3.125,1001,3.125,1003,2.449,1008,1.041,1014,2.777,1016,3.647,1028,3.392,1029,3.215,1030,3.215,1052,3.125,1053,3.125,1054,1.785,1055,2.777,1056,2.777,1058,3.848,1059,1.041,1060,1.041,1061,1.041,1063,1.041,1064,1.041,1091,2.449,1097,1.574,1099,3.41,1100,1.041,1103,1.041,1104,1.041,1107,4.414,1116,1.041,1133,1.041,1140,1.785,1145,1.041,1154,1.041,1160,1.041,1165,1.785,1169,4.299,1170,1.785,1178,1.785,1186,1.041,1196,2.066,1198,1.041,1222,4.202,1236,1.228,1237,2.105,1238,1.228,1239,1.228,1240,1.228,1241,2.105,1242,1.041,1243,1.228,1244,1.228,1245,1.228,1246,1.228,1247,1.228,1248,1.228,1249,1.228,1250,1.228,1251,1.228,1252,2.105,1253,2.105,1254,1.228,1255,1.228,1256,1.228,1257,1.228,1258,1.228,1259,1.228,1260,2.105,1261,1.228,1262,1.041,1263,1.228,1264,1.228,1265,1.228,1266,1.228,1267,1.228,1268,1.228,1269,1.228,1270,2.105,1271,1.228,1272,1.228,1273,1.228,1274,1.228,1275,1.228,1276,1.228,1277,1.228,1278,1.228,1279,1.228,1280,1.228,1281,2.105,1282,1.228,1283,1.228,1284,1.228,1285,2.105,1286,1.228,1287,1.228,1288,1.228,1289,2.105,1290,3.276,1291,1.228,1292,1.228,1293,3.276,1294,3.276,1295,1.228,1296,3.276,1297,1.228,1298,1.228,1299,1.228,1300,2.764,1301,1.228,1302,1.228,1303,1.228,1304,1.228,1305,1.228,1306,1.228,1307,1.228,1308,1.228,1309,1.228,1310,1.228,1311,1.228,1312,1.228,1313,3.686,1314,1.228,1315,1.228,1316,4.022,1317,1.228,1318,1.228,1319,1.228,1320,1.228,1321,1.785,1322,2.105,1323,1.228,1324,1.228,1325,1.228,1326,2.105,1327,2.105,1328,1.228,1329,2.105,1330,2.105,1331,1.228,1332,1.228,1333,1.228,1334,1.228,1335,1.228,1336,1.228,1337,1.228,1338,1.228,1339,1.228,1340,1.228,1341,1.228,1342,3.276,1343,1.228,1344,1.228,1345,2.105,1346,1.228,1347,1.228,1348,2.105,1349,1.228,1350,1.228,1351,2.764,1352,2.105,1353,4.538,1354,2.105,1355,1.228,1356,1.228,1357,2.105,1358,2.105,1359,2.105,1360,2.105,1361,1.228,1362,1.228,1363,1.228,1364,4.022,1365,1.228,1366,1.228,1367,1.228,1368,1.228,1369,1.228,1370,1.228,1371,1.228,1372,2.764,1373,2.764,1374,2.105,1375,1.228,1376,1.228,1377,1.228,1378,1.228,1379,1.228,1380,1.228,1381,1.228,1382,1.228,1383,1.228,1384,1.228,1385,3.276,1386,1.228,1387,1.228,1388,2.105,1389,1.228,1390,1.228,1391,2.105,1392,1.228,1393,1.228,1394,1.228,1395,1.228,1396,1.228,1397,1.228,1398,1.228,1399,2.105,1400,1.228,1401,1.228,1402,1.228,1403,5.071,1404,1.228,1405,1.228,1406,2.105,1407,1.228,1408,2.105,1409,2.764,1410,1.228,1411,1.228,1412,1.228,1413,1.228,1414,1.228,1415,1.228,1416,1.228,1417,1.228,1418,1.228,1419,1.228,1420,2.105,1421,1.228,1422,1.228,1423,1.228,1424,1.228,1425,1.228,1426,1.228,1427,2.105,1428,2.105,1429,2.105,1430,1.228,1431,1.228,1432,1.228,1433,1.228,1434,1.228,1435,1.228,1436,1.228,1437,1.228,1438,1.228,1439,1.228,1440,1.228,1441,1.228,1442,1.228,1443,1.228,1444,1.228,1445,1.228,1446,1.228,1447,1.228,1448,1.228,1449,1.228,1450,1.228,1451,1.228,1452,1.228,1453,1.228,1454,1.228,1455,1.228,1456,1.228,1457,1.228,1458,1.228,1459,1.228,1460,1.228,1461,1.041,1462,1.228,1463,2.105,1464,1.228,1465,1.228,1466,1.228,1467,1.228,1468,1.228,1469,1.228,1470,2.105,1471,1.228,1472,1.228,1473,3.686,1474,2.105,1475,1.228,1476,1.228,1477,1.228,1478,1.228,1479,1.228,1480,1.228,1481,1.228,1482,1.228,1483,1.228,1484,1.228]],["title/license.html",[145,1.633,1088,2.167,1485,2.458]],["body/license.html",[30,0.019,84,0.015,85,0.019,86,0.015,375,5.119,376,4.692,380,3.753,445,3.309,446,2.713,458,3.116,459,3.309,521,2.492,656,3.309,678,3.309,724,2.977,726,2.492,1139,3.753,1196,3.309,1222,3.309,1262,3.753,1321,3.753,1461,3.753,1485,3.753,1486,4.426,1487,4.426,1488,4.426,1489,5.534,1490,4.426,1491,4.426,1492,4.426,1493,4.426,1494,4.426,1495,6.873,1496,4.426,1497,4.426,1498,6.038,1499,4.426,1500,5.534,1501,4.426,1502,4.426,1503,4.426,1504,4.426,1505,4.426,1506,4.426,1507,4.426,1508,5.534,1509,4.426,1510,4.426,1511,4.426,1512,4.426,1513,4.426,1514,4.426,1515,5.534,1516,5.534,1517,4.426,1518,4.426,1519,4.426,1520,4.426,1521,4.426,1522,4.426,1523,4.426,1524,4.426,1525,4.426,1526,4.426,1527,4.426,1528,4.426,1529,4.426,1530,4.426,1531,4.426,1532,4.426,1533,4.426,1534,4.426,1535,4.426,1536,4.426,1537,4.426,1538,4.426,1539,4.426,1540,4.426,1541,4.426,1542,4.426,1543,4.426]],["title/modules.html",[710,3.525]],["body/modules.html",[30,0.022,84,0.019,85,0.022,86,0.019,709,3.368,710,4.108,732,2.86,1242,4.659,1544,5.496,1545,5.496]],["title/overview.html",[1546,3.998]],["body/overview.html",[1,1.394,2,0.993,26,2.68,30,0.025,45,1.058,52,1.394,54,1.394,56,1.394,58,1.394,61,1.307,64,1.225,67,1.394,69,1.394,71,1.394,74,1.394,76,1.394,78,1.394,80,1.394,84,0.013,85,0.017,86,0.013,104,2.042,106,2.887,135,2.68,159,1.364,187,2.77,369,2.887,398,2.68,400,2.68,487,2.68,516,2.68,581,2.271,613,2.887,708,3.319,709,4.441,711,2.271,712,2.77,713,2.77,714,3.141,715,3.141,716,3.141,717,3.141,718,3.141,719,3.141,720,3.641,721,2.887,722,4.183,723,3.141,724,2.492,924,2.271,1153,3.141,1546,3.141,1547,3.705,1548,3.705]],["title/miscellaneous/typealiases.html",[1233,1.633,1549,4.164]],["body/miscellaneous/typealiases.html",[21,0.353,30,0.022,32,0.449,84,0.019,85,0.022,86,0.019,647,3.619,664,5.277,705,3.505,824,3.619,836,5.277,1233,3.029,1550,5.38,1551,4.561,1552,4.561]],["title/miscellaneous/variables.html",[1233,1.633,1553,3.53]],["body/miscellaneous/variables.html",[21,0.325,30,0.025,32,0.529,35,1.102,36,1.102,84,0.017,85,0.021,86,0.017,580,2.392,647,3.33,663,4.431,796,2.392,824,3.33,835,4.431,983,3.701,991,4.431,992,3.701,993,3.701,994,3.701,995,3.701,996,4.197,997,4.431,998,4.197,1233,2.788,1551,4.197,1552,4.197,1553,4.197,1554,5.927]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":503,"title":{},"body":{"injectables/LoggerService.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"injectables/RestService.html":{},"components/TasksBoxComponent.html":{},"coverage.html":{},"index.html":{}}}],["0.1.0",{"_index":1194,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":1192,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":1190,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":1188,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":1176,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["0.6.1",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["0.6.2",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["0.6.3",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["0.6.4",{"_index":1147,"title":{},"body":{"changelog.html":{}}}],["0.9.1",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1210,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1209,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1207,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1208,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1213,"title":{},"body":{"coverage.html":{}}}],["01/09/2017",{"_index":1177,"title":{},"body":{"changelog.html":{}}}],["03/03/2018",{"_index":1109,"title":{},"body":{"changelog.html":{}}}],["03/08/2017",{"_index":1189,"title":{},"body":{"changelog.html":{}}}],["05/11/2017",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["08/10/2017",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":369,"title":{},"body":{"injectables/FooterService.html":{},"injectables/LoggerService.html":{},"injectables/LogoService.html":{},"injectables/MenuService.html":{},"injectables/UserService.html":{},"index.html":{},"overview.html":{}}}],["1.0.0",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["10/10",{"_index":1212,"title":{},"body":{"coverage.html":{}}}],["10/12/2017",{"_index":1128,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":1211,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":784,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["11",{"_index":1153,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["11.0.1",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["11/07/2017",{"_index":1193,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1547,"title":{},"body":{"overview.html":{}}}],["160x160.jpg",{"_index":1053,"title":{},"body":{"components/UserBoxComponent.html":{},"index.html":{}}}],["2",{"_index":506,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["2.0.0",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["2.3.11",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["2.5.1",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":980,"title":{},"body":{"components/TasksBoxComponent.html":{}}}],["200",{"_index":1259,"title":{},"body":{"index.html":{}}}],["2016",{"_index":377,"title":{},"body":{"injectables/FooterService.html":{}}}],["2017",{"_index":1487,"title":{},"body":{"license.html":{}}}],["22/10/2017",{"_index":1148,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":333,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["24th",{"_index":335,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["25/07/2017",{"_index":1191,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":1400,"title":{},"body":{"index.html":{}}}],["4",{"_index":1548,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["4/5/6/8",{"_index":1236,"title":{},"body":{"index.html":{}}}],["4/6",{"_index":1276,"title":{},"body":{"index.html":{}}}],["5",{"_index":1100,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["6.4.0",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":340,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["8",{"_index":1278,"title":{},"body":{"index.html":{}}}],["8.2.9",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":976,"title":{},"body":{"components/TasksBoxComponent.html":{}}}],["_blank",{"_index":1363,"title":{},"body":{"index.html":{}}}],["_factoryresolver",{"_index":234,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["_operations_",{"_index":671,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["_sidebar",{"_index":280,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["_user_serv",{"_index":1463,"title":{},"body":{"index.html":{}}}],["above",{"_index":1514,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1480,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":1425,"title":{},"body":{"index.html":{}}}],["accept",{"_index":912,"title":{},"body":{"injectables/RestService.html":{}}}],["accordingly",{"_index":1459,"title":{},"body":{"index.html":{}}}],["action",{"_index":678,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"license.html":{}}}],["activate",{"_index":191,"title":{},"body":{"guards/CanActivateGuard.html":{},"modules/NgxAdminLteModule.html":{},"coverage.html":{}}}],["activatedroute",{"_index":402,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["active",{"_index":328,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["activity",{"_index":330,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["actual_component",{"_index":83,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["add",{"_index":862,"title":{},"body":{"injectables/RestService.html":{},"changelog.html":{},"index.html":{}}}],["add(item",{"_index":874,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["addall",{"_index":863,"title":{},"body":{"injectables/RestService.html":{}}}],["addall(tab",{"_index":878,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["adding",{"_index":1350,"title":{},"body":{"index.html":{}}}],["additionnal",{"_index":1140,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["addmessage",{"_index":652,"title":{},"body":{"injectables/MessagesService.html":{}}}],["addmessage(message",{"_index":654,"title":{},"body":{"injectables/MessagesService.html":{}}}],["addnotification",{"_index":827,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["addnotification(notification",{"_index":829,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["address",{"_index":1478,"title":{},"body":{"index.html":{}}}],["admin",{"_index":726,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["adminlte",{"_index":446,"title":{},"body":{"components/LayoutAuthComponent.html":{},"injectables/LogoService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["aliases",{"_index":1550,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alt",{"_index":535,"title":{},"body":{"injectables/LogoService.html":{}}}],["alte",{"_index":1391,"title":{},"body":{"index.html":{}}}],["amehat",{"_index":1115,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1506,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1099,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular.json",{"_index":1289,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":743,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"injectables/RestService.html":{}}}],["angular/core",{"_index":38,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/http",{"_index":1431,"title":{},"body":{"index.html":{}}}],["angular/platform",{"_index":731,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"pipes/SafeHtmlPipe.html":{},"dependencies.html":{}}}],["angular/router",{"_index":200,"title":{},"body":{"guards/CanActivateGuard.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"modules/NgxAdminLteModule.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["answered",{"_index":1251,"title":{},"body":{"index.html":{}}}],["antoine",{"_index":1056,"title":{},"body":{"components/UserBoxComponent.html":{},"index.html":{}}}],["anymore",{"_index":1145,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["anything",{"_index":372,"title":{},"body":{"injectables/FooterService.html":{}}}],["aot",{"_index":744,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["api",{"_index":1427,"title":{},"body":{"index.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"index.html":{}}}],["app.component.ts",{"_index":1396,"title":{},"body":{"index.html":{}}}],["app.compontent.ts",{"_index":1393,"title":{},"body":{"index.html":{}}}],["app.modules.ts",{"_index":1288,"title":{},"body":{"index.html":{}}}],["appfootercomponent",{"_index":1,"title":{"components/AppFooterComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appheadercomponent",{"_index":52,"title":{"components/AppHeaderComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":911,"title":{},"body":{"injectables/RestService.html":{}}}],["applied",{"_index":672,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["applies",{"_index":1339,"title":{},"body":{"index.html":{}}}],["april",{"_index":334,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["aqua",{"_index":1421,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1541,"title":{},"body":{"license.html":{}}}],["around",{"_index":1255,"title":{},"body":{"index.html":{}}}],["array",{"_index":142,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/LayoutAuthComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"index.html":{}}}],["aside",{"_index":549,"title":{},"body":{"components/MenuAsideComponent.html":{},"changelog.html":{},"index.html":{}}}],["aside'},{'name",{"_index":73,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["aside.component",{"_index":761,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["aside.component.css",{"_index":550,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["aside.component.html",{"_index":551,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["aside.component.ts",{"_index":548,"title":{},"body":{"components/MenuAsideComponent.html":{},"coverage.html":{}}}],["aside.component.ts:12",{"_index":561,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["aside.component.ts:13",{"_index":562,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["aside.component.ts:15",{"_index":559,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["aside.component.ts:16",{"_index":558,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["aside.component.ts:17",{"_index":556,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["aside.component.ts:21",{"_index":563,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["aside.component.ts:28",{"_index":560,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["aside/menu",{"_index":547,"title":{},"body":{"components/MenuAsideComponent.html":{},"modules/NgxAdminLteModule.html":{},"coverage.html":{}}}],["assets",{"_index":1290,"title":{},"body":{"index.html":{}}}],["assets/i18n",{"_index":750,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"index.html":{}}}],["assets/img",{"_index":1336,"title":{},"body":{"index.html":{}}}],["assets/img/user2",{"_index":1052,"title":{},"body":{"components/UserBoxComponent.html":{},"index.html":{}}}],["associated",{"_index":1496,"title":{},"body":{"license.html":{}}}],["associative",{"_index":932,"title":{},"body":{"injectables/RestService.html":{}}}],["assure",{"_index":1249,"title":{},"body":{"index.html":{}}}],["au",{"_index":1061,"title":{},"body":{"components/UserBoxComponent.html":{},"index.html":{}}}],["auth",{"_index":386,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["auth'},{'name",{"_index":63,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["auth.html",{"_index":387,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["authlayout",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["author",{"_index":583,"title":{},"body":{"classes/Message.html":{},"index.html":{}}}],["authors",{"_index":1532,"title":{},"body":{"license.html":{}}}],["available",{"_index":1008,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["avatar",{"_index":1479,"title":{},"body":{"index.html":{}}}],["avatarurl",{"_index":847,"title":{},"body":{"classes/Preference.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"index.html":{}}}],["awesome",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["awesome.min.css",{"_index":1310,"title":{},"body":{"index.html":{}}}],["awesome/css/font",{"_index":1309,"title":{},"body":{"index.html":{}}}],["back",{"_index":1174,"title":{},"body":{"changelog.html":{}}}],["backoffice",{"_index":1382,"title":{},"body":{"index.html":{}}}],["bar",{"_index":1471,"title":{},"body":{"index.html":{}}}],["base",{"_index":1449,"title":{},"body":{"index.html":{}}}],["basic",{"_index":1381,"title":{},"body":{"index.html":{}}}],["bc",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["big",{"_index":543,"title":{},"body":{"injectables/LogoService.html":{}}}],["binding",{"_index":627,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["birthday",{"_index":332,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["black",{"_index":1344,"title":{},"body":{"index.html":{}}}],["blue",{"_index":423,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["body",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["boolean",{"_index":199,"title":{},"body":{"guards/CanActivateGuard.html":{},"injectables/ControlSidebarService.html":{},"components/LayoutAuthComponent.html":{}}}],["bootstrap",{"_index":713,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstraping",{"_index":1371,"title":{},"body":{"index.html":{}}}],["bootstrapping",{"_index":1241,"title":{},"body":{"index.html":{}}}],["box",{"_index":1403,"title":{},"body":{"index.html":{}}}],["box.component",{"_index":765,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["box.component.css",{"_index":609,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["box.component.html",{"_index":610,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["box.component.ts",{"_index":606,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{}}}],["box.component.ts:13",{"_index":973,"title":{},"body":{"components/TasksBoxComponent.html":{}}}],["box.component.ts:14",{"_index":975,"title":{},"body":{"components/TasksBoxComponent.html":{}}}],["box.component.ts:15",{"_index":618,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{}}}],["box.component.ts:16",{"_index":615,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["box.component.ts:19",{"_index":972,"title":{},"body":{"components/TasksBoxComponent.html":{}}}],["box.component.ts:21",{"_index":1050,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["box.component.ts:22",{"_index":617,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{}}}],["box.component.ts:28",{"_index":1051,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["box.component.ts:32",{"_index":1057,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["box/messages",{"_index":605,"title":{},"body":{"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"coverage.html":{}}}],["box/notification",{"_index":767,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"coverage.html":{}}}],["box/tasks",{"_index":769,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"components/TasksBoxComponent.html":{},"coverage.html":{}}}],["box/user",{"_index":771,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"components/UserBoxComponent.html":{},"coverage.html":{}}}],["boxed",{"_index":1110,"title":{},"body":{"changelog.html":{}}}],["boxed_style",{"_index":388,"title":{},"body":{"components/LayoutAuthComponent.html":{},"index.html":{}}}],["brand",{"_index":1392,"title":{},"body":{"index.html":{}}}],["breadcrumb",{"_index":129,"title":{},"body":{"components/BreadcrumbComponent.html":{},"index.html":{}}}],["breadcrumb'},{'name",{"_index":55,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["breadcrumb.component.html",{"_index":130,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["breadcrumbcomponent",{"_index":54,"title":{"components/BreadcrumbComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["breadcrumbservice",{"_index":135,"title":{"injectables/BreadcrumbService.html":{}},"body":{"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"modules/NgxAdminLteModule.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["breadserv",{"_index":137,"title":{},"body":{"components/BreadcrumbComponent.html":{},"index.html":{}}}],["browse",{"_index":1545,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":732,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/TranslateService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browserculturelang",{"_index":1011,"title":{},"body":{"injectables/TranslateService.html":{}}}],["browserlang",{"_index":1009,"title":{},"body":{"injectables/TranslateService.html":{}}}],["browserlang.match",{"_index":1021,"title":{},"body":{"injectables/TranslateService.html":{}}}],["browsermodule",{"_index":730,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["btd1337",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":260,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["button",{"_index":1117,"title":{},"body":{"changelog.html":{}}}],["buttons",{"_index":979,"title":{},"body":{"components/TasksBoxComponent.html":{},"changelog.html":{},"index.html":{}}}],["c",{"_index":1486,"title":{},"body":{"license.html":{}}}],["cache",{"_index":907,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["calculate",{"_index":1143,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":706,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["called",{"_index":1084,"title":{},"body":{"injectables/UserService.html":{}}}],["can't",{"_index":1248,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":194,"title":{},"body":{"guards/CanActivateGuard.html":{},"index.html":{}}}],["canactivateguard",{"_index":188,"title":{"guards/CanActivateGuard.html":{}},"body":{"guards/CanActivateGuard.html":{},"modules/NgxAdminLteModule.html":{},"coverage.html":{},"index.html":{}}}],["catcherror",{"_index":906,"title":{},"body":{"injectables/RestService.html":{}}}],["catcherror(this.handleerror",{"_index":946,"title":{},"body":{"injectables/RestService.html":{}}}],["catull",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["champ",{"_index":940,"title":{},"body":{"injectables/RestService.html":{}}}],["change",{"_index":463,"title":{},"body":{"components/LayoutAuthComponent.html":{},"index.html":{}}}],["changelog",{"_index":1089,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":246,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"changelog.html":{},"index.html":{}}}],["changing",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1492,"title":{},"body":{"license.html":{}}}],["check",{"_index":1014,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["child",{"_index":245,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["children",{"_index":1314,"title":{},"body":{"index.html":{}}}],["chinkan",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1535,"title":{},"body":{"license.html":{}}}],["class",{"_index":41,"title":{"classes/Message.html":{},"classes/Notification.html":{},"classes/Preference.html":{},"classes/User.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["class_component",{"_index":229,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["classes",{"_index":581,"title":{},"body":{"classes/Message.html":{},"classes/Notification.html":{},"classes/Preference.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":163,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["cli",{"_index":1283,"title":{},"body":{"index.html":{}}}],["clock",{"_index":174,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["close",{"_index":305,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["closed",{"_index":353,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["cluster_ngxadminltemodule",{"_index":716,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"overview.html":{}}}],["cluster_ngxadminltemodule_declarations",{"_index":717,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"overview.html":{}}}],["cluster_ngxadminltemodule_exports",{"_index":718,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"overview.html":{}}}],["cluster_ngxadminltemodule_providers",{"_index":719,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"overview.html":{}}}],["columns",{"_index":936,"title":{},"body":{"injectables/RestService.html":{}}}],["communauty",{"_index":1254,"title":{},"body":{"index.html":{}}}],["company",{"_index":378,"title":{},"body":{"injectables/FooterService.html":{}}}],["compatibility",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":981,"title":{},"body":{"components/TasksBoxComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":50,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["componentfactoryresolver",{"_index":231,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["componentloadercomponent",{"_index":56,"title":{"components/ComponentLoaderComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["componentref",{"_index":223,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["conditions",{"_index":1513,"title":{},"body":{"license.html":{}}}],["config",{"_index":499,"title":{},"body":{"injectables/LoggerService.html":{}}}],["configuration",{"_index":1342,"title":{},"body":{"index.html":{}}}],["configure",{"_index":909,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["connected",{"_index":193,"title":{},"body":{"guards/CanActivateGuard.html":{},"classes/User.html":{},"index.html":{}}}],["connecter",{"_index":1060,"title":{},"body":{"components/UserBoxComponent.html":{},"index.html":{}}}],["connection",{"_index":1542,"title":{},"body":{"license.html":{}}}],["considere",{"_index":1271,"title":{},"body":{"index.html":{}}}],["console.error(error",{"_index":956,"title":{},"body":{"injectables/RestService.html":{}}}],["console.log",{"_index":510,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/TranslateService.html":{},"index.html":{}}}],["console.log('ngxadminlte",{"_index":541,"title":{},"body":{"injectables/LogoService.html":{}}}],["console.log(this.messageslist",{"_index":698,"title":{},"body":{"injectables/MessagesService.html":{}}}],["console.log(this.notificationslist",{"_index":839,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["const",{"_index":261,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"injectables/TranslateService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["constructor(_factoryresolver",{"_index":230,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["constructor(_http",{"_index":1437,"title":{},"body":{"index.html":{}}}],["constructor(_sidebar",{"_index":283,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["constructor(breadserv",{"_index":134,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["constructor(data",{"_index":587,"title":{},"body":{"classes/Message.html":{},"classes/Notification.html":{},"classes/Preference.html":{},"classes/User.html":{}}}],["constructor(footerserv",{"_index":25,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["constructor(http",{"_index":872,"title":{},"body":{"injectables/RestService.html":{}}}],["constructor(logoserv",{"_index":515,"title":{},"body":{"components/LogoComponent.html":{}}}],["constructor(menuserv",{"_index":397,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["constructor(msgserv",{"_index":612,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["constructor(notifserv",{"_index":809,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["constructor(private",{"_index":144,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/UserBoxComponent.html":{}}}],["constructor(router",{"_index":195,"title":{},"body":{"guards/CanActivateGuard.html":{},"injectables/MenuService.html":{},"injectables/UserService.html":{}}}],["constructor(translate",{"_index":490,"title":{},"body":{"injectables/LoggerService.html":{}}}],["constructor(userserv",{"_index":555,"title":{},"body":{"components/MenuAsideComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{}}}],["constructor(userservice",{"_index":103,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["contact",{"_index":1426,"title":{},"body":{"index.html":{}}}],["content",{"_index":584,"title":{},"body":{"classes/Message.html":{},"classes/Notification.html":{},"injectables/RestService.html":{},"index.html":{}}}],["contenu",{"_index":1411,"title":{},"body":{"index.html":{}}}],["contract",{"_index":1539,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1243,"title":{},"body":{"index.html":{}}}],["control",{"_index":59,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"changelog.html":{}}}],["controlsidebarcomponent",{"_index":58,"title":{"components/ControlSidebarComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["controlsidebarservice",{"_index":106,"title":{"injectables/ControlSidebarService.html":{}},"body":{"components/AppHeaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"modules/NgxAdminLteModule.html":{},"coverage.html":{},"overview.html":{}}}],["copies",{"_index":1508,"title":{},"body":{"license.html":{}}}],["copy",{"_index":376,"title":{},"body":{"injectables/FooterService.html":{},"license.html":{}}}],["copyright",{"_index":375,"title":{},"body":{"injectables/FooterService.html":{},"license.html":{}}}],["core",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1160,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["counting",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["courant",{"_index":1064,"title":{},"body":{"components/UserBoxComponent.html":{},"index.html":{}}}],["coverage",{"_index":1195,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cp",{"_index":1331,"title":{},"body":{"index.html":{}}}],["create",{"_index":648,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["creation",{"_index":1484,"title":{},"body":{"index.html":{}}}],["creation_date",{"_index":1482,"title":{},"body":{"index.html":{}}}],["creationdate",{"_index":1027,"title":{},"body":{"classes/User.html":{}}}],["crud",{"_index":1450,"title":{},"body":{"index.html":{}}}],["css",{"_index":1178,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["current",{"_index":161,"title":{},"body":{"injectables/BreadcrumbService.html":{},"injectables/FooterService.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"injectables/TranslateService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["current_items",{"_index":300,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["current_state",{"_index":301,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["current_state_value",{"_index":302,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["current_user",{"_index":1466,"title":{},"body":{"index.html":{}}}],["currently",{"_index":676,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["currenturl",{"_index":552,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["currentuser",{"_index":553,"title":{},"body":{"components/MenuAsideComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{}}}],["currentuser.creationdate",{"_index":1070,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["currentuser.getname",{"_index":1066,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["currentuser?.getname",{"_index":571,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["custom",{"_index":338,"title":{},"body":{"injectables/ControlSidebarService.html":{},"index.html":{}}}],["d\\'un",{"_index":1412,"title":{},"body":{"index.html":{}}}],["d\\'une",{"_index":1413,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1536,"title":{},"body":{"license.html":{}}}],["dashboard",{"_index":461,"title":{},"body":{"components/LayoutAuthComponent.html":{},"index.html":{}}}],["data",{"_index":146,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"components/ComponentLoaderComponent.html":{},"injectables/LoggerService.html":{},"classes/Message.html":{},"classes/Notification.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"classes/User.html":{},"index.html":{}}}],["data.author",{"_index":598,"title":{},"body":{"classes/Message.html":{}}}],["data.avatarurl",{"_index":852,"title":{},"body":{"classes/Preference.html":{},"classes/User.html":{}}}],["data.class",{"_index":802,"title":{},"body":{"classes/Notification.html":{}}}],["data.columns.foreach",{"_index":939,"title":{},"body":{"injectables/RestService.html":{}}}],["data.connected",{"_index":1048,"title":{},"body":{"classes/User.html":{}}}],["data.content",{"_index":594,"title":{},"body":{"classes/Message.html":{},"classes/Notification.html":{}}}],["data.creation_date",{"_index":1047,"title":{},"body":{"classes/User.html":{}}}],["data.date",{"_index":602,"title":{},"body":{"classes/Message.html":{}}}],["data.description",{"_index":154,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["data.destination",{"_index":600,"title":{},"body":{"classes/Message.html":{}}}],["data.display",{"_index":150,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["data.email",{"_index":1045,"title":{},"body":{"classes/User.html":{}}}],["data.firstname",{"_index":1041,"title":{},"body":{"classes/User.html":{}}}],["data.header",{"_index":152,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["data.lastname",{"_index":1043,"title":{},"body":{"classes/User.html":{}}}],["data.levels",{"_index":156,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["data.link",{"_index":804,"title":{},"body":{"classes/Notification.html":{}}}],["data.preferredlang",{"_index":854,"title":{},"body":{"classes/Preference.html":{},"classes/User.html":{}}}],["data.records.map((elem",{"_index":933,"title":{},"body":{"injectables/RestService.html":{}}}],["data.title",{"_index":596,"title":{},"body":{"classes/Message.html":{}}}],["data[0",{"_index":502,"title":{},"body":{"injectables/LoggerService.html":{}}}],["data[1",{"_index":504,"title":{},"body":{"injectables/LoggerService.html":{}}}],["data[2",{"_index":505,"title":{},"body":{"injectables/LoggerService.html":{}}}],["datas",{"_index":1444,"title":{},"body":{"index.html":{}}}],["date",{"_index":585,"title":{},"body":{"classes/Message.html":{},"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"index.html":{}}}],["date.now",{"_index":603,"title":{},"body":{"classes/Message.html":{},"injectables/RestService.html":{},"classes/User.html":{}}}],["date:'ymd",{"_index":643,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["date:\\'ymd",{"_index":646,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["deal",{"_index":1497,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1543,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":712,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"index.html":{},"overview.html":{}}}],["declare",{"_index":1312,"title":{},"body":{"index.html":{}}}],["declaring",{"_index":625,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["decorators",{"_index":253,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["default",{"_index":35,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"components/ComponentLoaderComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["default_items",{"_index":303,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["default_state",{"_index":304,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["default_value",{"_index":409,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["define",{"_index":1364,"title":{},"body":{"index.html":{}}}],["defined",{"_index":27,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{}}}],["defining",{"_index":1405,"title":{},"body":{"index.html":{}}}],["del",{"_index":1141,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":864,"title":{},"body":{"injectables/RestService.html":{}}}],["delete(id",{"_index":880,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["dependencies",{"_index":711,"title":{"dependencies.html":{}},"body":{"modules/NgxAdminLteModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":545,"title":{},"body":{"injectables/LogoService.html":{},"changelog.html":{},"index.html":{}}}],["deps",{"_index":795,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["des",{"_index":682,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["desactivated",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":131,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"components/ComponentLoaderComponent.html":{},"index.html":{}}}],["design",{"_index":339,"title":{},"body":{"injectables/ControlSidebarService.html":{},"components/TasksBoxComponent.html":{}}}],["destination",{"_index":586,"title":{},"body":{"classes/Message.html":{},"index.html":{}}}],["detected",{"_index":1013,"title":{},"body":{"injectables/TranslateService.html":{}}}],["detectie",{"_index":395,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["developer",{"_index":1068,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["device",{"_index":1429,"title":{},"body":{"index.html":{}}}],["device(unit",{"_index":1447,"title":{},"body":{"index.html":{}}}],["devices",{"_index":1439,"title":{},"body":{"index.html":{}}}],["deviceservice",{"_index":1435,"title":{},"body":{"index.html":{}}}],["differs",{"_index":1017,"title":{},"body":{"injectables/TranslateService.html":{}}}],["diffuse",{"_index":692,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["directive",{"_index":48,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["directives",{"_index":82,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["disable",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["display",{"_index":132,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"changelog.html":{},"index.html":{}}}],["display_control",{"_index":96,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/LayoutAuthComponent.html":{},"index.html":{}}}],["display_control_sidebar",{"_index":389,"title":{},"body":{"components/LayoutAuthComponent.html":{},"changelog.html":{},"index.html":{}}}],["display_logout",{"_index":97,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/LayoutAuthComponent.html":{},"index.html":{}}}],["display_menu_search",{"_index":390,"title":{},"body":{"components/LayoutAuthComponent.html":{},"components/MenuAsideComponent.html":{},"index.html":{}}}],["display_menu_user",{"_index":391,"title":{},"body":{"components/LayoutAuthComponent.html":{},"components/MenuAsideComponent.html":{},"index.html":{}}}],["display_messages",{"_index":98,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/LayoutAuthComponent.html":{},"index.html":{}}}],["display_notifications",{"_index":99,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/LayoutAuthComponent.html":{},"index.html":{}}}],["display_tasks",{"_index":100,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/LayoutAuthComponent.html":{},"index.html":{}}}],["display_user",{"_index":101,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/LayoutAuthComponent.html":{},"index.html":{}}}],["distribute",{"_index":1504,"title":{},"body":{"license.html":{}}}],["document.body.classname",{"_index":465,"title":{},"body":{"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{}}}],["document.createevent",{"_index":454,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["documentation",{"_index":1196,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doesn't",{"_index":1142,"title":{},"body":{"changelog.html":{}}}],["doing",{"_index":1330,"title":{},"body":{"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["domsanitizer",{"_index":965,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["don't",{"_index":1345,"title":{},"body":{"index.html":{}}}],["donating",{"_index":1272,"title":{},"body":{"index.html":{}}}],["du",{"_index":1063,"title":{},"body":{"components/UserBoxComponent.html":{},"index.html":{}}}],["dynamic",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["dynamicly",{"_index":215,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["each",{"_index":1398,"title":{},"body":{"index.html":{}}}],["elem[index",{"_index":942,"title":{},"body":{"injectables/RestService.html":{}}}],["element",{"_index":47,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["email",{"_index":1028,"title":{},"body":{"classes/User.html":{},"components/UserBoxComponent.html":{},"index.html":{}}}],["emits",{"_index":668,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["en",{"_index":992,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["encapsulation",{"_index":220,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["entire",{"_index":631,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{}}}],["entrycomponents",{"_index":1366,"title":{},"body":{"index.html":{}}}],["environment",{"_index":498,"title":{},"body":{"injectables/LoggerService.html":{}}}],["en|fr|ru|he|zh|pt|it",{"_index":998,"title":{},"body":{"injectables/TranslateService.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":895,"title":{},"body":{"injectables/RestService.html":{}}}],["et",{"_index":684,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["event",{"_index":445,"title":{},"body":{"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"license.html":{}}}],["event.initevent",{"_index":455,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["evt.url",{"_index":568,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["example",{"_index":1058,"title":{},"body":{"components/UserBoxComponent.html":{},"index.html":{}}}],["existing",{"_index":1286,"title":{},"body":{"index.html":{}}}],["export",{"_index":40,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["exported",{"_index":746,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["exporting",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["exports",{"_index":715,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"overview.html":{}}}],["express",{"_index":1523,"title":{},"body":{"license.html":{}}}],["extended",{"_index":1373,"title":{},"body":{"index.html":{}}}],["extends",{"_index":1436,"title":{},"body":{"index.html":{}}}],["external",{"_index":1358,"title":{},"body":{"index.html":{}}}],["extreme",{"_index":1415,"title":{},"body":{"index.html":{}}}],["fa",{"_index":1420,"title":{},"body":{"index.html":{}}}],["factories",{"_index":747,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["factory",{"_index":262,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["fais",{"_index":686,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["fake",{"_index":1404,"title":{},"body":{"index.html":{}}}],["fallback",{"_index":1002,"title":{},"body":{"injectables/TranslateService.html":{}}}],["false",{"_index":110,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"injectables/ControlSidebarService.html":{},"components/LayoutAuthComponent.html":{},"modules/NgxAdminLteModule.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["fast",{"_index":1257,"title":{},"body":{"index.html":{}}}],["feature",{"_index":1263,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1261,"title":{},"body":{"index.html":{}}}],["field",{"_index":1458,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1321,"title":{},"body":{"index.html":{},"license.html":{}}}],["first",{"_index":1476,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":1029,"title":{},"body":{"classes/User.html":{},"components/UserBoxComponent.html":{},"index.html":{}}}],["fitness",{"_index":1528,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1116,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["folder",{"_index":1326,"title":{},"body":{"index.html":{}}}],["followers",{"_index":1071,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["following",{"_index":1512,"title":{},"body":{"license.html":{}}}],["font",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["footer",{"_index":16,"title":{},"body":{"components/AppFooterComponent.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"index.html":{}}}],["footer'},{'name",{"_index":51,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["footer.component",{"_index":759,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["footer.component.css",{"_index":18,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["footer.component.html",{"_index":20,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["footer.component.ts",{"_index":12,"title":{},"body":{"components/AppFooterComponent.html":{},"coverage.html":{}}}],["footer.component.ts:10",{"_index":28,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["footer/app",{"_index":11,"title":{},"body":{"components/AppFooterComponent.html":{},"modules/NgxAdminLteModule.html":{},"coverage.html":{}}}],["footerserv",{"_index":34,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["footerservice",{"_index":26,"title":{"injectables/FooterService.html":{}},"body":{"components/AppFooterComponent.html":{},"injectables/FooterService.html":{},"modules/NgxAdminLteModule.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["forget",{"_index":1348,"title":{},"body":{"index.html":{}}}],["format",{"_index":1454,"title":{},"body":{"index.html":{}}}],["found",{"_index":1005,"title":{},"body":{"injectables/TranslateService.html":{}}}],["fr",{"_index":993,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["free",{"_index":1262,"title":{},"body":{"index.html":{},"license.html":{}}}],["friends",{"_index":1073,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["full",{"_index":1240,"title":{},"body":{"index.html":{}}}],["function",{"_index":705,"title":{},"body":{"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"injectables/NotificationsService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":1451,"title":{},"body":{"index.html":{}}}],["functions",{"_index":922,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/RestService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["furnished",{"_index":1511,"title":{},"body":{"license.html":{}}}],["furthermore",{"_index":1269,"title":{},"body":{"index.html":{}}}],["gear",{"_index":342,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["general",{"_index":343,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["get(id",{"_index":883,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["getactionurl",{"_index":865,"title":{},"body":{"injectables/RestService.html":{}}}],["getall",{"_index":866,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["getallfromls",{"_index":867,"title":{},"body":{"injectables/RestService.html":{}}}],["getallfromls(maxtime",{"_index":887,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["getcurrent",{"_index":164,"title":{},"body":{"injectables/BreadcrumbService.html":{},"injectables/FooterService.html":{},"injectables/LogoService.html":{},"injectables/MenuService.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["getfromcache",{"_index":868,"title":{},"body":{"injectables/RestService.html":{}}}],["getfromcache(id",{"_index":890,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["getitems",{"_index":306,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["getname",{"_index":1031,"title":{},"body":{"classes/User.html":{}}}],["getstate",{"_index":307,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["getting",{"_index":145,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"components/BreadcrumbComponent.html":{},"components/MenuAsideComponent.html":{},"injectables/RestService.html":{}}}],["gettranslate",{"_index":985,"title":{},"body":{"injectables/TranslateService.html":{}}}],["github",{"_index":1360,"title":{},"body":{"index.html":{}}}],["give",{"_index":266,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["given",{"_index":1322,"title":{},"body":{"index.html":{}}}],["glob",{"_index":1293,"title":{},"body":{"index.html":{}}}],["globally",{"_index":1395,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1491,"title":{},"body":{"license.html":{}}}],["growing",{"_index":1256,"title":{},"body":{"index.html":{}}}],["guard",{"_index":187,"title":{"guards/CanActivateGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":776,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["guard.service.ts",{"_index":192,"title":{},"body":{"guards/CanActivateGuard.html":{},"coverage.html":{}}}],["guard.service.ts:18",{"_index":198,"title":{},"body":{"guards/CanActivateGuard.html":{}}}],["guard.service.ts:7",{"_index":197,"title":{},"body":{"guards/CanActivateGuard.html":{}}}],["guards",{"_index":189,"title":{},"body":{"guards/CanActivateGuard.html":{}}}],["hakonamatata",{"_index":453,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["handle",{"_index":351,"title":{},"body":{"injectables/ControlSidebarService.html":{},"changelog.html":{}}}],["handled",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["handleerror",{"_index":869,"title":{},"body":{"injectables/RestService.html":{}}}],["handleerror(error",{"_index":892,"title":{},"body":{"injectables/RestService.html":{}}}],["handles",{"_index":1470,"title":{},"body":{"index.html":{}}}],["handling",{"_index":1320,"title":{},"body":{"index.html":{}}}],["having",{"_index":926,"title":{},"body":{"injectables/RestService.html":{}}}],["header",{"_index":89,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"components/LayoutAuthComponent.html":{},"changelog.html":{},"index.html":{}}}],["header'},{'name",{"_index":53,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["header.component",{"_index":757,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["header.component.css",{"_index":90,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["header.component.html",{"_index":91,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["header.component.ts",{"_index":88,"title":{},"body":{"components/AppHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:11",{"_index":112,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["header.component.ts:12",{"_index":113,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["header.component.ts:13",{"_index":114,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["header.component.ts:14",{"_index":115,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["header.component.ts:15",{"_index":109,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["header.component.ts:16",{"_index":111,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":107,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["header.component.ts:24",{"_index":116,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":119,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["header/app",{"_index":87,"title":{},"body":{"components/AppHeaderComponent.html":{},"modules/NgxAdminLteModule.html":{},"coverage.html":{}}}],["header_components",{"_index":102,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/LayoutAuthComponent.html":{},"index.html":{}}}],["headers",{"_index":857,"title":{},"body":{"injectables/RestService.html":{},"changelog.html":{},"index.html":{}}}],["height",{"_index":448,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["help",{"_index":1270,"title":{},"body":{"index.html":{}}}],["helper",{"_index":1372,"title":{},"body":{"index.html":{}}}],["helpers",{"_index":914,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["here",{"_index":207,"title":{},"body":{"guards/CanActivateGuard.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["hereby",{"_index":1490,"title":{},"body":{"license.html":{}}}],["hide",{"_index":514,"title":{},"body":{"components/LogoComponent.html":{},"changelog.html":{},"index.html":{}}}],["hold",{"_index":466,"title":{},"body":{"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{}}}],["holders",{"_index":1533,"title":{},"body":{"license.html":{}}}],["home",{"_index":326,"title":{},"body":{"injectables/ControlSidebarService.html":{},"components/LayoutAuthComponent.html":{},"index.html":{}}}],["homecomponent",{"_index":1315,"title":{},"body":{"index.html":{}}}],["homepage",{"_index":1374,"title":{},"body":{"index.html":{}}}],["hook",{"_index":242,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["html",{"_index":46,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"changelog.html":{},"index.html":{}}}],["html.pipes",{"_index":754,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["html.pipes.ts",{"_index":960,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["html.pipes.ts:8",{"_index":963,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["html_lg",{"_index":536,"title":{},"body":{"injectables/LogoService.html":{},"index.html":{}}}],["html_mini",{"_index":534,"title":{},"body":{"injectables/LogoService.html":{},"index.html":{}}}],["http",{"_index":736,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"injectables/RestService.html":{},"index.html":{}}}],["httpclient",{"_index":741,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"injectables/RestService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":742,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["httpheaders",{"_index":901,"title":{},"body":{"injectables/RestService.html":{}}}],["httploaderfactory",{"_index":748,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(httpclient",{"_index":1235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpresponse",{"_index":893,"title":{},"body":{"injectables/RestService.html":{}}}],["https://github.com/twanoo67/ngx",{"_index":1361,"title":{},"body":{"index.html":{}}}],["https://twanoo67.github.io/ngx",{"_index":1488,"title":{},"body":{"license.html":{}}}],["i18n",{"_index":1390,"title":{},"body":{"index.html":{}}}],["i18nref",{"_index":494,"title":{},"body":{"injectables/LoggerService.html":{}}}],["icon",{"_index":173,"title":{},"body":{"injectables/BreadcrumbService.html":{},"injectables/ControlSidebarService.html":{},"components/LayoutAuthComponent.html":{},"index.html":{}}}],["id",{"_index":325,"title":{},"body":{"injectables/ControlSidebarService.html":{},"injectables/RestService.html":{}}}],["idea",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["identifier",{"_index":1197,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":449,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["imessagesoperation",{"_index":664,"title":{},"body":{"injectables/MessagesService.html":{},"miscellaneous/typealiases.html":{}}}],["img",{"_index":1341,"title":{},"body":{"index.html":{}}}],["imperative",{"_index":704,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["implement",{"_index":1368,"title":{},"body":{"index.html":{}}}],["implements",{"_index":202,"title":{},"body":{"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{}}}],["implied",{"_index":1524,"title":{},"body":{"license.html":{}}}],["import",{"_index":37,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["importance",{"_index":1414,"title":{},"body":{"index.html":{}}}],["important",{"_index":1418,"title":{},"body":{"index.html":{}}}],["imports",{"_index":781,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"index.html":{}}}],["included",{"_index":1517,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1472,"title":{},"body":{"index.html":{}}}],["including",{"_index":1500,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":630,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexed",{"_index":931,"title":{},"body":{"injectables/RestService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{}}}],["information",{"_index":347,"title":{},"body":{"injectables/ControlSidebarService.html":{},"index.html":{}}}],["initial",{"_index":628,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["initialdata",{"_index":162,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["initialisation",{"_index":233,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["initialised",{"_index":1329,"title":{},"body":{"index.html":{}}}],["initialmessages",{"_index":663,"title":{},"body":{"injectables/MessagesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialnotifications",{"_index":835,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":158,"title":{"injectables/BreadcrumbService.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"injectables/LoggerService.html":{},"injectables/LogoService.html":{},"injectables/MenuService.html":{},"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"injectables/TranslateService.html":{},"injectables/UserService.html":{}},"body":{"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"injectables/LoggerService.html":{},"injectables/LogoService.html":{},"injectables/MenuService.html":{},"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"injectables/TranslateService.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["injectables",{"_index":159,"title":{},"body":{"injectables/BreadcrumbService.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"injectables/LoggerService.html":{},"injectables/LogoService.html":{},"injectables/MenuService.html":{},"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"injectables/TranslateService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inner",{"_index":251,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["inotificationsoperation",{"_index":836,"title":{},"body":{"injectables/NotificationsService.html":{},"miscellaneous/typealiases.html":{}}}],["input",{"_index":120,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/TasksBoxComponent.html":{},"index.html":{}}}],["inputs",{"_index":95,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/TasksBoxComponent.html":{}}}],["install",{"_index":1285,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1280,"title":{},"body":{"index.html":{}}}],["integrate",{"_index":1238,"title":{},"body":{"index.html":{}}}],["interne",{"_index":690,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["ionicons",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["isn't",{"_index":1004,"title":{},"body":{"injectables/TranslateService.html":{}}}],["issue",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":1264,"title":{},"body":{"index.html":{}}}],["it's",{"_index":673,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"changelog.html":{},"index.html":{}}}],["italian",{"_index":1118,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":876,"title":{},"body":{"injectables/RestService.html":{}}}],["item.header",{"_index":573,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["item.title",{"_index":157,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/MenuAsideComponent.html":{}}}],["items",{"_index":281,"title":{},"body":{"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"changelog.html":{}}}],["itemtoupdate",{"_index":899,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["joined",{"_index":1423,"title":{},"body":{"index.html":{}}}],["jquery",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1097,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["json",{"_index":751,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"injectables/RestService.html":{},"index.html":{}}}],["json.parse(json",{"_index":918,"title":{},"body":{"injectables/RestService.html":{}}}],["json.stringify(item",{"_index":950,"title":{},"body":{"injectables/RestService.html":{}}}],["json.stringify(itemtoupdate",{"_index":954,"title":{},"body":{"injectables/RestService.html":{}}}],["json.stringify(obj",{"_index":945,"title":{},"body":{"injectables/RestService.html":{}}}],["json.stringify(tab",{"_index":952,"title":{},"body":{"injectables/RestService.html":{}}}],["kind",{"_index":1522,"title":{},"body":{"license.html":{}}}],["kingmario",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["la",{"_index":688,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["label",{"_index":1352,"title":{},"body":{"index.html":{}}}],["lang",{"_index":984,"title":{},"body":{"injectables/TranslateService.html":{}}}],["langdon's",{"_index":331,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["langmatch",{"_index":997,"title":{},"body":{"injectables/TranslateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs",{"_index":991,"title":{},"body":{"injectables/TranslateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["language",{"_index":1000,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["last",{"_index":1477,"title":{},"body":{"index.html":{}}}],["lastget",{"_index":858,"title":{},"body":{"injectables/RestService.html":{}}}],["lastgetall",{"_index":859,"title":{},"body":{"injectables/RestService.html":{}}}],["lastname",{"_index":1030,"title":{},"body":{"classes/User.html":{},"components/UserBoxComponent.html":{},"index.html":{}}}],["layout",{"_index":65,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"changelog.html":{},"index.html":{}}}],["layoutauthcomponent",{"_index":61,"title":{"components/LayoutAuthComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["layoutlogincomponent",{"_index":64,"title":{"components/LayoutLoginComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["layoutregistercomponent",{"_index":67,"title":{"components/LayoutRegisterComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layouts",{"_index":62,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["layouts/auth/auth",{"_index":778,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["layouts/login/login.component",{"_index":779,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["layouts/register/register.component",{"_index":780,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["le",{"_index":693,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["left",{"_index":1354,"title":{},"body":{"index.html":{}}}],["left_part",{"_index":374,"title":{},"body":{"injectables/FooterService.html":{},"index.html":{}}}],["legend",{"_index":45,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"overview.html":{}}}],["les",{"_index":685,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["lets",{"_index":1325,"title":{},"body":{"index.html":{}}}],["levels",{"_index":133,"title":{},"body":{"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"index.html":{}}}],["liability",{"_index":1537,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1534,"title":{},"body":{"license.html":{}}}],["lib",{"_index":1281,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1323,"title":{},"body":{"index.html":{}}}],["library",{"_index":1170,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["licence",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":1485,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":241,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["limitation",{"_index":1501,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1525,"title":{},"body":{"license.html":{}}}],["link",{"_index":176,"title":{},"body":{"injectables/BreadcrumbService.html":{},"components/LayoutAuthComponent.html":{},"classes/Notification.html":{},"index.html":{}}}],["links",{"_index":554,"title":{},"body":{"components/MenuAsideComponent.html":{},"changelog.html":{},"index.html":{}}}],["liste",{"_index":689,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["listen",{"_index":1456,"title":{},"body":{"index.html":{}}}],["literal",{"_index":974,"title":{},"body":{"components/TasksBoxComponent.html":{}}}],["little",{"_index":1273,"title":{},"body":{"index.html":{}}}],["load",{"_index":216,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["loader",{"_index":222,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"modules/NgxAdminLteModule.html":{},"injectables/TranslateService.html":{},"dependencies.html":{}}}],["loader'},{'name",{"_index":57,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["loader.component",{"_index":774,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["loader.component.ts",{"_index":214,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"coverage.html":{}}}],["loader.component.ts:17",{"_index":236,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["loader.component.ts:22",{"_index":237,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["loader.component.ts:27",{"_index":257,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["loader.component.ts:31",{"_index":232,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["loader.component.ts:44",{"_index":248,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["loader.component.ts:56",{"_index":240,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["loader.component.ts:63",{"_index":250,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["loader.component.ts:75",{"_index":247,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["loader/component",{"_index":213,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"modules/NgxAdminLteModule.html":{},"coverage.html":{}}}],["loading",{"_index":474,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["local",{"_index":632,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{}}}],["locally",{"_index":1397,"title":{},"body":{"index.html":{}}}],["localstorage.getitem",{"_index":915,"title":{},"body":{"injectables/RestService.html":{}}}],["localstorage.setitem",{"_index":944,"title":{},"body":{"injectables/RestService.html":{}}}],["log",{"_index":489,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["log(component",{"_index":492,"title":{},"body":{"injectables/LoggerService.html":{}}}],["logged",{"_index":209,"title":{},"body":{"guards/CanActivateGuard.html":{},"index.html":{}}}],["logger",{"_index":614,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{}}}],["loggerservice",{"_index":487,"title":{"injectables/LoggerService.html":{}},"body":{"injectables/LoggerService.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["login",{"_index":211,"title":{},"body":{"guards/CanActivateGuard.html":{},"components/LayoutLoginComponent.html":{},"index.html":{}}}],["login'},{'name",{"_index":66,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["login.component.html",{"_index":477,"title":{},"body":{"components/LayoutLoginComponent.html":{}}}],["login.css",{"_index":476,"title":{},"body":{"components/LayoutLoginComponent.html":{}}}],["logo",{"_index":512,"title":{},"body":{"components/LogoComponent.html":{},"injectables/LogoService.html":{},"index.html":{}}}],["logo'},{'name",{"_index":70,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["logo.big",{"_index":540,"title":{},"body":{"injectables/LogoService.html":{}}}],["logo.big.bold}}{{logo.big.normal",{"_index":527,"title":{},"body":{"components/LogoComponent.html":{}}}],["logo.component.html",{"_index":513,"title":{},"body":{"components/LogoComponent.html":{}}}],["logo.small",{"_index":539,"title":{},"body":{"injectables/LogoService.html":{}}}],["logo.small.bold}}{{logo.small.normal",{"_index":526,"title":{},"body":{"components/LogoComponent.html":{}}}],["logocomponent",{"_index":69,"title":{"components/LogoComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logoserv",{"_index":518,"title":{},"body":{"components/LogoComponent.html":{},"index.html":{}}}],["logoservice",{"_index":516,"title":{"injectables/LogoService.html":{}},"body":{"components/LogoComponent.html":{},"injectables/LogoService.html":{},"modules/NgxAdminLteModule.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["logout",{"_index":93,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"changelog.html":{}}}],["logoutaction",{"_index":1077,"title":{},"body":{"injectables/UserService.html":{},"changelog.html":{}}}],["looking",{"_index":1239,"title":{},"body":{"index.html":{}}}],["lte",{"_index":1222,"title":{},"body":{"dependencies.html":{},"index.html":{},"license.html":{}}}],["lte.module.ts",{"_index":727,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["lte/dist/css/adminlte.min.css",{"_index":1304,"title":{},"body":{"index.html":{}}}],["lte/dist/css/skins/_all",{"_index":1305,"title":{},"body":{"index.html":{}}}],["lte/dist/js/app.min.js",{"_index":1301,"title":{},"body":{"index.html":{}}}],["lte/public/assets",{"_index":1295,"title":{},"body":{"index.html":{}}}],["lte/src/public/assets",{"_index":1324,"title":{},"body":{"index.html":{}}}],["lte/src/public/assets/i18n",{"_index":1333,"title":{},"body":{"index.html":{}}}],["lte/src/public/assets/img",{"_index":1335,"title":{},"body":{"index.html":{}}}],["main",{"_index":1168,"title":{},"body":{"changelog.html":{}}}],["maintained",{"_index":1244,"title":{},"body":{"index.html":{}}}],["map",{"_index":661,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{}}}],["map((response",{"_index":925,"title":{},"body":{"injectables/RestService.html":{}}}],["map(function(message",{"_index":701,"title":{},"body":{"injectables/MessagesService.html":{}}}],["map(function(notification",{"_index":842,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["marked",{"_index":1185,"title":{},"body":{"changelog.html":{}}}],["markthreadasread",{"_index":680,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["matching",{"_index":85,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxtime",{"_index":889,"title":{},"body":{"injectables/RestService.html":{}}}],["members",{"_index":1422,"title":{},"body":{"index.html":{}}}],["menu",{"_index":72,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"changelog.html":{},"index.html":{}}}],["menu_title",{"_index":1133,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["menuasidecomponent",{"_index":71,"title":{"components/MenuAsideComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menuserv",{"_index":404,"title":{},"body":{"components/LayoutAuthComponent.html":{},"index.html":{}}}],["menuservice",{"_index":398,"title":{"injectables/MenuService.html":{}},"body":{"components/LayoutAuthComponent.html":{},"injectables/MenuService.html":{},"modules/NgxAdminLteModule.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["menuwidgetcomponent",{"_index":1351,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1527,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1502,"title":{},"body":{"license.html":{}}}],["merged",{"_index":1268,"title":{},"body":{"index.html":{}}}],["message",{"_index":580,"title":{"classes/Message.html":{}},"body":{"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"components/TasksBoxComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":608,"title":{},"body":{"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"components/TasksBoxComponent.html":{},"index.html":{}}}],["messages.concat(message",{"_index":702,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messagesbox",{"_index":607,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["messagesbox'},{'name",{"_index":75,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["messagesboxcomponent",{"_index":74,"title":{"components/MessagesBoxComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["messageslist",{"_index":649,"title":{},"body":{"injectables/MessagesService.html":{}}}],["messagesservice",{"_index":613,"title":{"injectables/MessagesService.html":{}},"body":{"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["method",{"_index":1389,"title":{},"body":{"index.html":{}}}],["methods",{"_index":92,"title":{},"body":{"components/AppHeaderComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{}}}],["mini",{"_index":468,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["miscellaneous",{"_index":1233,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1139,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["model",{"_index":928,"title":{},"body":{"injectables/RestService.html":{},"changelog.html":{},"index.html":{}}}],["modelname",{"_index":860,"title":{},"body":{"injectables/RestService.html":{}}}],["models",{"_index":1428,"title":{},"body":{"index.html":{}}}],["models/device",{"_index":1434,"title":{},"body":{"index.html":{}}}],["models/message",{"_index":622,"title":{},"body":{"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"components/TasksBoxComponent.html":{}}}],["models/notification",{"_index":811,"title":{},"body":{"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{}}}],["models/user",{"_index":564,"title":{},"body":{"components/MenuAsideComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{}}}],["modif",{"_index":1062,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["modification",{"_index":243,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"index.html":{}}}],["modify",{"_index":459,"title":{},"body":{"components/LayoutAuthComponent.html":{},"components/UserBoxComponent.html":{},"license.html":{}}}],["module",{"_index":708,"title":{"modules/NgxAdminLteModule.html":{}},"body":{"modules/NgxAdminLteModule.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":710,"title":{"modules.html":{}},"body":{"modules/NgxAdminLteModule.html":{},"modules.html":{}}}],["more",{"_index":1258,"title":{},"body":{"index.html":{}}}],["moved",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["msg",{"_index":493,"title":{},"body":{"injectables/LoggerService.html":{},"components/MessagesBoxComponent.html":{}}}],["msg.content",{"_index":644,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["msg.date",{"_index":642,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["msg.title",{"_index":641,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["msgbox",{"_index":635,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["msgbox.count",{"_index":639,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["msgbox.footer",{"_index":645,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["msglength",{"_index":611,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["msgserv",{"_index":616,"title":{},"body":{"components/MessagesBoxComponent.html":{},"index.html":{}}}],["multiple",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["mycompo",{"_index":1380,"title":{},"body":{"index.html":{}}}],["mycomponent",{"_index":1379,"title":{},"body":{"index.html":{}}}],["mylinks",{"_index":392,"title":{},"body":{"components/LayoutAuthComponent.html":{},"index.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["named",{"_index":1327,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":127,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/LayoutAuthComponent.html":{},"index.html":{}}}],["need",{"_index":1253,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1442,"title":{},"body":{"index.html":{}}}],["new",{"_index":181,"title":{},"body":{"injectables/BreadcrumbService.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["newestontop",{"_index":791,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["newmessages",{"_index":650,"title":{},"body":{"injectables/MessagesService.html":{}}}],["newnotifications",{"_index":825,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["ng",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":728,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"index.html":{}}}],["ngonchange",{"_index":271,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["ngonchanges",{"_index":225,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["ngonchanges(changes",{"_index":239,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["ngondestroy",{"_index":226,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"index.html":{}}}],["ngoninit",{"_index":227,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{},"index.html":{}}}],["ngx",{"_index":521,"title":{},"body":{"components/LogoComponent.html":{},"modules/NgxAdminLteModule.html":{},"injectables/TranslateService.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["ngxadminltemodule",{"_index":709,"title":{"modules/NgxAdminLteModule.html":{}},"body":{"modules/NgxAdminLteModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["ngxtranslateservice",{"_index":986,"title":{},"body":{"injectables/TranslateService.html":{}}}],["node_modules/admin",{"_index":1300,"title":{},"body":{"index.html":{}}}],["node_modules/bootstrap/dist/css/bootstrap.min.css",{"_index":1307,"title":{},"body":{"index.html":{}}}],["node_modules/bootstrap/dist/js/bootstrap.min.js",{"_index":1299,"title":{},"body":{"index.html":{}}}],["node_modules/font",{"_index":1308,"title":{},"body":{"index.html":{}}}],["node_modules/ionicons/dist/css/ionicons.min.css\";then",{"_index":1311,"title":{},"body":{"index.html":{}}}],["node_modules/jquery/dist/jquery.min.js",{"_index":1298,"title":{},"body":{"index.html":{}}}],["node_modules/ngx",{"_index":1294,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1531,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1515,"title":{},"body":{"license.html":{}}}],["notif",{"_index":814,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["notif.content",{"_index":822,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["notifbox.count",{"_index":820,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["notifbox.footer",{"_index":823,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["notification",{"_index":796,"title":{"classes/Notification.html":{}},"body":{"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["notificationbox",{"_index":815,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["notificationboxcomponent",{"_index":76,"title":{"components/NotificationBoxComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notifications",{"_index":807,"title":{},"body":{"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{}}}],["notifications.concat(notification",{"_index":843,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notifications.length",{"_index":819,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["notificationsbox",{"_index":806,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["notificationsbox'},{'name",{"_index":77,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["notificationslist",{"_index":826,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notificationsservice",{"_index":721,"title":{"injectables/NotificationsService.html":{}},"body":{"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["notiflength",{"_index":808,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["notifserv",{"_index":810,"title":{},"body":{"components/NotificationBoxComponent.html":{},"index.html":{}}}],["now",{"_index":544,"title":{},"body":{"injectables/LogoService.html":{},"changelog.html":{},"index.html":{}}}],["npm",{"_index":1237,"title":{},"body":{"index.html":{}}}],["null",{"_index":235,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"injectables/TranslateService.html":{},"classes/User.html":{}}}],["number",{"_index":881,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["o",{"_index":175,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["obj",{"_index":917,"title":{},"body":{"injectables/RestService.html":{}}}],["obj.date",{"_index":919,"title":{},"body":{"injectables/RestService.html":{}}}],["object",{"_index":619,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"injectables/RestService.html":{}}}],["object.assign(this.componentref.instance",{"_index":269,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["observable",{"_index":877,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["observable.throw(error.body",{"_index":957,"title":{},"body":{"injectables/RestService.html":{}}}],["observabletranslateservice",{"_index":1455,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":1494,"title":{},"body":{"license.html":{}}}],["ok",{"_index":1384,"title":{},"body":{"index.html":{}}}],["old",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["once",{"_index":667,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["onchanges",{"_index":219,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"index.html":{}}}],["ondestroy",{"_index":218,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{}}}],["oninit",{"_index":217,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{}}}],["online",{"_index":572,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["ope(this.messageslist",{"_index":697,"title":{},"body":{"injectables/MessagesService.html":{}}}],["ope(this.notificationslist",{"_index":838,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["open",{"_index":308,"title":{},"body":{"injectables/ControlSidebarService.html":{},"index.html":{}}}],["operation",{"_index":683,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["option",{"_index":348,"title":{},"body":{"injectables/ControlSidebarService.html":{},"changelog.html":{}}}],["optional",{"_index":33,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["optionnal",{"_index":1149,"title":{},"body":{"changelog.html":{}}}],["options",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["order",{"_index":937,"title":{},"body":{"injectables/RestService.html":{},"changelog.html":{},"index.html":{}}}],["otherwise",{"_index":1461,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":724,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1296,"title":{},"body":{"index.html":{}}}],["overridable",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["override",{"_index":1340,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1546,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1091,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["packagr",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":481,"title":{},"body":{"components/LayoutLoginComponent.html":{},"index.html":{}}}],["page/2",{"_index":1399,"title":{},"body":{"index.html":{}}}],["page/3",{"_index":1401,"title":{},"body":{"index.html":{}}}],["page/:id",{"_index":1318,"title":{},"body":{"index.html":{}}}],["pagenumcomponent",{"_index":1317,"title":{},"body":{"index.html":{}}}],["panel",{"_index":345,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["param",{"_index":411,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["param.hasownproperty(index",{"_index":441,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["param[index",{"_index":442,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["paramexistordefault",{"_index":396,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["paramexistordefault(param",{"_index":408,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["params",{"_index":501,"title":{},"body":{"injectables/LoggerService.html":{}}}],["part",{"_index":1165,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["particular",{"_index":1529,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1154,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["pass",{"_index":238,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["passing",{"_index":1343,"title":{},"body":{"index.html":{}}}],["path",{"_index":1316,"title":{},"body":{"index.html":{}}}],["peer",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["perform",{"_index":675,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["permission",{"_index":1489,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1509,"title":{},"body":{"license.html":{}}}],["person",{"_index":1493,"title":{},"body":{"license.html":{}}}],["personnal",{"_index":1245,"title":{},"body":{"index.html":{}}}],["personnalise",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["persons",{"_index":1510,"title":{},"body":{"license.html":{}}}],["pescu",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["pipe",{"_index":924,"title":{"pipes/SafeHtmlPipe.html":{}},"body":{"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipe({name",{"_index":966,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["pipes",{"_index":752,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"pipes/SafeHtmlPipe.html":{}}}],["pipes/safe",{"_index":753,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["pipetransform",{"_index":964,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["place",{"_index":447,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["please",{"_index":457,"title":{},"body":{"components/LayoutAuthComponent.html":{},"components/UserBoxComponent.html":{},"index.html":{}}}],["portions",{"_index":1519,"title":{},"body":{"license.html":{}}}],["portugese",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["positionclass",{"_index":785,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["possiblities",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["practical",{"_index":1370,"title":{},"body":{"index.html":{}}}],["precisely",{"_index":1144,"title":{},"body":{"changelog.html":{}}}],["preference",{"_index":845,"title":{"classes/Preference.html":{}},"body":{"classes/Preference.html":{},"changelog.html":{},"coverage.html":{}}}],["preferencies",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["preferred",{"_index":1015,"title":{},"body":{"injectables/TranslateService.html":{}}}],["preferredlang",{"_index":848,"title":{},"body":{"classes/Preference.html":{},"classes/User.html":{},"index.html":{}}}],["preflang",{"_index":1019,"title":{},"body":{"injectables/TranslateService.html":{}}}],["preflang.match",{"_index":1022,"title":{},"body":{"injectables/TranslateService.html":{}}}],["preventduplicates",{"_index":789,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["principle",{"_index":1338,"title":{},"body":{"index.html":{}}}],["private",{"_index":42,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"components/LayoutAuthComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["process",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["progress",{"_index":337,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["project",{"_index":1169,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["projects",{"_index":1260,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{},"body":{"components/AppFooterComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{}}}],["property",{"_index":1346,"title":{},"body":{"index.html":{}}}],["protected",{"_index":394,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["provide",{"_index":793,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"changelog.html":{},"index.html":{}}}],["provided",{"_index":1520,"title":{},"body":{"license.html":{}}}],["providers",{"_index":714,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"overview.html":{}}}],["pt",{"_index":996,"title":{},"body":{"injectables/TranslateService.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":23,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{}}}],["public/i18n",{"_index":1337,"title":{},"body":{"index.html":{}}}],["publish",{"_index":1503,"title":{},"body":{"license.html":{}}}],["publishes",{"_index":666,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["puis",{"_index":691,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["pull",{"_index":1266,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1530,"title":{},"body":{"license.html":{}}}],["put",{"_index":1378,"title":{},"body":{"index.html":{}}}],["questions/issues",{"_index":1250,"title":{},"body":{"index.html":{}}}],["quickly",{"_index":1252,"title":{},"body":{"index.html":{}}}],["r",{"_index":1332,"title":{},"body":{"index.html":{}}}],["read",{"_index":255,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["rebuild",{"_index":938,"title":{},"body":{"injectables/RestService.html":{}}}],["receive",{"_index":1369,"title":{},"body":{"index.html":{}}}],["received.message",{"_index":636,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["received.notification",{"_index":816,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["receives",{"_index":670,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["recent",{"_index":329,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["recois",{"_index":681,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["redefine",{"_index":383,"title":{},"body":{"injectables/FooterService.html":{},"injectables/LogoService.html":{}}}],["reference",{"_index":252,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["register",{"_index":462,"title":{},"body":{"components/LayoutAuthComponent.html":{},"components/LayoutRegisterComponent.html":{},"index.html":{}}}],["register'},{'name",{"_index":68,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["register.component.html",{"_index":483,"title":{},"body":{"components/LayoutRegisterComponent.html":{}}}],["registercomponent",{"_index":1319,"title":{},"body":{"index.html":{}}}],["registered",{"_index":1473,"title":{},"body":{"index.html":{}}}],["relative",{"_index":1481,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1103,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["removed",{"_index":1146,"title":{},"body":{"changelog.html":{}}}],["removing",{"_index":1376,"title":{},"body":{"index.html":{}}}],["renamed",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["replaysubject",{"_index":171,"title":{},"body":{"injectables/BreadcrumbService.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"injectables/LogoService.html":{},"injectables/MenuService.html":{},"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"injectables/UserService.html":{}}}],["replaysubject(1",{"_index":182,"title":{},"body":{"injectables/BreadcrumbService.html":{},"injectables/ControlSidebarService.html":{},"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["report",{"_index":344,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["requests",{"_index":1267,"title":{},"body":{"index.html":{}}}],["requires",{"_index":745,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["res",{"_index":509,"title":{},"body":{"injectables/LoggerService.html":{}}}],["reserved",{"_index":381,"title":{},"body":{"injectables/FooterService.html":{}}}],["reset",{"_index":723,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"overview.html":{}}}],["resize",{"_index":444,"title":{},"body":{"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{}}}],["resp",{"_index":1453,"title":{},"body":{"index.html":{}}}],["respecting",{"_index":1452,"title":{},"body":{"index.html":{}}}],["response",{"_index":1430,"title":{},"body":{"index.html":{}}}],["response.body",{"_index":947,"title":{},"body":{"injectables/RestService.html":{}}}],["response.body[this.modelname",{"_index":929,"title":{},"body":{"injectables/RestService.html":{}}}],["rest",{"_index":921,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["rest_all_",{"_index":916,"title":{},"body":{"injectables/RestService.html":{}}}],["rest_api_to_contact/devices",{"_index":1441,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":1499,"title":{},"body":{"license.html":{}}}],["restservice",{"_index":855,"title":{"injectables/RestService.html":{}},"body":{"injectables/RestService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["result",{"_index":84,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resultat",{"_index":694,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["results",{"_index":86,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":185,"title":{},"body":{"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"injectables/LogoService.html":{},"injectables/MenuService.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["returns",{"_index":117,"title":{},"body":{"components/AppHeaderComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{}}}],["revert",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":788,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["right_part",{"_index":371,"title":{},"body":{"injectables/FooterService.html":{},"index.html":{}}}],["rights",{"_index":380,"title":{},"body":{"injectables/FooterService.html":{},"license.html":{}}}],["route",{"_index":401,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["route.snapshot.data[0",{"_index":427,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["router",{"_index":196,"title":{},"body":{"guards/CanActivateGuard.html":{},"components/LayoutLoginComponent.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["routermodule",{"_index":729,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["routes",{"_index":1313,"title":{},"body":{"index.html":{}}}],["ru",{"_index":994,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":179,"title":{},"body":{"injectables/BreadcrumbService.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"injectables/LogoService.html":{},"injectables/MenuService.html":{},"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/add/operator/map",{"_index":1432,"title":{},"body":{"index.html":{}}}],["rxjs/observable",{"_index":1433,"title":{},"body":{"index.html":{}}}],["rxjs/operators",{"_index":662,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{}}}],["safehtml",{"_index":297,"title":{},"body":{"components/ControlSidebarComponent.html":{},"pipes/SafeHtmlPipe.html":{}}}],["safehtmlpipe",{"_index":720,"title":{"pipes/SafeHtmlPipe.html":{}},"body":{"modules/NgxAdminLteModule.html":{},"pipes/SafeHtmlPipe.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["sales",{"_index":1072,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["same",{"_index":927,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["sanitized",{"_index":967,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["scripts",{"_index":1297,"title":{},"body":{"index.html":{}}}],["se",{"_index":1059,"title":{},"body":{"components/UserBoxComponent.html":{},"index.html":{}}}],["sedding",{"_index":443,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["selected",{"_index":1457,"title":{},"body":{"index.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["sell",{"_index":1507,"title":{},"body":{"license.html":{}}}],["send",{"_index":244,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"index.html":{}}}],["send/get",{"_index":1462,"title":{},"body":{"index.html":{}}}],["sending",{"_index":1409,"title":{},"body":{"index.html":{}}}],["server",{"_index":958,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["serverwithapiurl",{"_index":861,"title":{},"body":{"injectables/RestService.html":{}}}],["service",{"_index":1107,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["services",{"_index":147,"title":{},"body":{"components/BreadcrumbComponent.html":{},"modules/NgxAdminLteModule.html":{},"changelog.html":{},"index.html":{}}}],["services/breadcrumb.service",{"_index":143,"title":{},"body":{"components/BreadcrumbComponent.html":{},"modules/NgxAdminLteModule.html":{}}}],["services/can",{"_index":775,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["services/control",{"_index":122,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/ControlSidebarComponent.html":{},"modules/NgxAdminLteModule.html":{}}}],["services/footer.service",{"_index":39,"title":{},"body":{"components/AppFooterComponent.html":{},"modules/NgxAdminLteModule.html":{}}}],["services/logger.service",{"_index":621,"title":{},"body":{"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{}}}],["services/logo.service",{"_index":523,"title":{},"body":{"components/LogoComponent.html":{},"modules/NgxAdminLteModule.html":{}}}],["services/menu.service",{"_index":425,"title":{},"body":{"components/LayoutAuthComponent.html":{},"modules/NgxAdminLteModule.html":{}}}],["services/messages.service",{"_index":620,"title":{},"body":{"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{}}}],["services/notifications.service",{"_index":777,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{}}}],["services/translate.service",{"_index":426,"title":{},"body":{"components/LayoutAuthComponent.html":{},"modules/NgxAdminLteModule.html":{}}}],["services/user.service",{"_index":121,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/MenuAsideComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/UserBoxComponent.html":{}}}],["set",{"_index":1016,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["setapiurl",{"_index":870,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["setapiurl(url",{"_index":896,"title":{},"body":{"injectables/RestService.html":{}}}],["setcomponentdata",{"_index":228,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["setcomponentdata(changes",{"_index":249,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["setcurrent",{"_index":165,"title":{},"body":{"injectables/BreadcrumbService.html":{},"injectables/FooterService.html":{},"injectables/LogoService.html":{},"injectables/MenuService.html":{},"injectables/UserService.html":{},"changelog.html":{},"index.html":{}}}],["setcurrent(data",{"_index":169,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["setcurrent(footer",{"_index":367,"title":{},"body":{"injectables/FooterService.html":{}}}],["setcurrent(logo",{"_index":531,"title":{},"body":{"injectables/LogoService.html":{}}}],["setcurrent(menu",{"_index":578,"title":{},"body":{"injectables/MenuService.html":{}}}],["setcurrent(user",{"_index":1081,"title":{},"body":{"injectables/UserService.html":{}}}],["setitems",{"_index":309,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["setitems(items",{"_index":316,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["setstate",{"_index":310,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["setstate(val",{"_index":318,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["setting",{"_index":1347,"title":{},"body":{"index.html":{}}}],["settings",{"_index":341,"title":{},"body":{"injectables/ControlSidebarService.html":{},"index.html":{}}}],["shall",{"_index":1516,"title":{},"body":{"license.html":{}}}],["show",{"_index":500,"title":{},"body":{"injectables/LoggerService.html":{},"index.html":{}}}],["sidebar",{"_index":277,"title":{},"body":{"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"components/LayoutAuthComponent.html":{},"changelog.html":{}}}],["sidebar'},{'name",{"_index":60,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["sidebar.component",{"_index":763,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["sidebar.component.css",{"_index":278,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["sidebar.component.html",{"_index":279,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":276,"title":{},"body":{"components/ControlSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:10",{"_index":288,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["sidebar.component.ts:11",{"_index":284,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["sidebar.component.ts:13",{"_index":287,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["sidebar.component.ts:15",{"_index":286,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["sidebar.component.ts:23",{"_index":285,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["sidebar.service",{"_index":123,"title":{},"body":{"components/AppHeaderComponent.html":{},"components/ControlSidebarComponent.html":{},"modules/NgxAdminLteModule.html":{}}}],["sidebar.service.ts",{"_index":299,"title":{},"body":{"injectables/ControlSidebarService.html":{},"coverage.html":{}}}],["sidebar.service.ts:101",{"_index":321,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar.service.ts:12",{"_index":322,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar.service.ts:13",{"_index":349,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar.service.ts:68",{"_index":311,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar.service.ts:7",{"_index":323,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar.service.ts:75",{"_index":317,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar.service.ts:79",{"_index":313,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar.service.ts:8",{"_index":350,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar.service.ts:83",{"_index":314,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar.service.ts:87",{"_index":319,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar.service.ts:9",{"_index":324,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar.service.ts:92",{"_index":315,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar.service.ts:97",{"_index":312,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["sidebar/control",{"_index":275,"title":{},"body":{"components/ControlSidebarComponent.html":{},"modules/NgxAdminLteModule.html":{},"coverage.html":{}}}],["sidebarservice",{"_index":105,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["simplified",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["skin",{"_index":393,"title":{},"body":{"components/LayoutAuthComponent.html":{},"changelog.html":{},"index.html":{}}}],["skins.min.css",{"_index":1306,"title":{},"body":{"index.html":{}}}],["small",{"_index":542,"title":{},"body":{"injectables/LogoService.html":{}}}],["software",{"_index":1495,"title":{},"body":{"license.html":{}}}],["solution",{"_index":452,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"modules/NgxAdminLteModule.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["src/.../messages.service.ts",{"_index":1551,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../ngx",{"_index":1234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../notifications.service.ts",{"_index":1552,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../translate.service.ts",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/assets",{"_index":1292,"title":{},"body":{"index.html":{}}}],["src/favicon.ico",{"_index":1291,"title":{},"body":{"index.html":{}}}],["src/layouts/auth/auth.ts",{"_index":385,"title":{},"body":{"components/LayoutAuthComponent.html":{},"coverage.html":{}}}],["src/layouts/auth/auth.ts:11",{"_index":422,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:12",{"_index":424,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:13",{"_index":413,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:14",{"_index":420,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:15",{"_index":419,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:16",{"_index":417,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:17",{"_index":418,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:18",{"_index":416,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:19",{"_index":415,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:20",{"_index":414,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:21",{"_index":421,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:22",{"_index":412,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:23",{"_index":403,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:45",{"_index":410,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:49",{"_index":407,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:81",{"_index":406,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/auth/auth.ts:85",{"_index":405,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["src/layouts/login/login.component.ts",{"_index":475,"title":{},"body":{"components/LayoutLoginComponent.html":{},"coverage.html":{}}}],["src/layouts/login/login.component.ts:15",{"_index":480,"title":{},"body":{"components/LayoutLoginComponent.html":{}}}],["src/layouts/login/login.component.ts:20",{"_index":479,"title":{},"body":{"components/LayoutLoginComponent.html":{}}}],["src/layouts/login/login.component.ts:9",{"_index":478,"title":{},"body":{"components/LayoutLoginComponent.html":{}}}],["src/layouts/register/register.component.ts",{"_index":482,"title":{},"body":{"components/LayoutRegisterComponent.html":{},"coverage.html":{}}}],["src/layouts/register/register.component.ts:13",{"_index":485,"title":{},"body":{"components/LayoutRegisterComponent.html":{}}}],["src/layouts/register/register.component.ts:7",{"_index":484,"title":{},"body":{"components/LayoutRegisterComponent.html":{}}}],["src/models/message.ts",{"_index":582,"title":{},"body":{"classes/Message.html":{},"coverage.html":{}}}],["src/models/message.ts:4",{"_index":590,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.ts:5",{"_index":592,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.ts:6",{"_index":589,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.ts:7",{"_index":591,"title":{},"body":{"classes/Message.html":{}}}],["src/models/message.ts:8",{"_index":588,"title":{},"body":{"classes/Message.html":{}}}],["src/models/notification.ts",{"_index":797,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["src/models/notification.ts:2",{"_index":800,"title":{},"body":{"classes/Notification.html":{}}}],["src/models/notification.ts:3",{"_index":799,"title":{},"body":{"classes/Notification.html":{}}}],["src/models/notification.ts:4",{"_index":798,"title":{},"body":{"classes/Notification.html":{}}}],["src/models/preference.ts",{"_index":846,"title":{},"body":{"classes/Preference.html":{},"coverage.html":{}}}],["src/models/preference.ts:2",{"_index":850,"title":{},"body":{"classes/Preference.html":{}}}],["src/models/preference.ts:3",{"_index":849,"title":{},"body":{"classes/Preference.html":{}}}],["src/models/user.ts",{"_index":1026,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/models/user.ts:2",{"_index":1036,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:20",{"_index":1039,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:3",{"_index":1037,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:4",{"_index":1035,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:5",{"_index":1033,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:6",{"_index":1034,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:7",{"_index":1038,"title":{},"body":{"classes/User.html":{}}}],["src/models/user.ts:8",{"_index":1032,"title":{},"body":{"classes/User.html":{}}}],["src/ngx",{"_index":725,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/pipes/safe",{"_index":959,"title":{},"body":{"pipes/SafeHtmlPipe.html":{},"coverage.html":{}}}],["src/public",{"_index":1334,"title":{},"body":{"index.html":{}}}],["src/public/i18n",{"_index":1328,"title":{},"body":{"index.html":{}}}],["src/services/breadcrumb.service.ts",{"_index":160,"title":{},"body":{"injectables/BreadcrumbService.html":{},"coverage.html":{}}}],["src/services/breadcrumb.service.ts:19",{"_index":166,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["src/services/breadcrumb.service.ts:26",{"_index":170,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["src/services/breadcrumb.service.ts:30",{"_index":168,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["src/services/breadcrumb.service.ts:34",{"_index":167,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["src/services/breadcrumb.service.ts:6",{"_index":172,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["src/services/breadcrumb.service.ts:7",{"_index":178,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["src/services/can",{"_index":190,"title":{},"body":{"guards/CanActivateGuard.html":{},"coverage.html":{}}}],["src/services/control",{"_index":298,"title":{},"body":{"injectables/ControlSidebarService.html":{},"coverage.html":{}}}],["src/services/footer.service.ts",{"_index":364,"title":{},"body":{"injectables/FooterService.html":{},"coverage.html":{}}}],["src/services/footer.service.ts:11",{"_index":365,"title":{},"body":{"injectables/FooterService.html":{}}}],["src/services/footer.service.ts:16",{"_index":368,"title":{},"body":{"injectables/FooterService.html":{}}}],["src/services/footer.service.ts:20",{"_index":366,"title":{},"body":{"injectables/FooterService.html":{}}}],["src/services/footer.service.ts:6",{"_index":370,"title":{},"body":{"injectables/FooterService.html":{}}}],["src/services/footer.service.ts:7",{"_index":382,"title":{},"body":{"injectables/FooterService.html":{}}}],["src/services/logger.service.ts",{"_index":488,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/services/logger.service.ts:5",{"_index":491,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/services/logger.service.ts:9",{"_index":495,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/services/logo.service.ts",{"_index":528,"title":{},"body":{"injectables/LogoService.html":{},"coverage.html":{}}}],["src/services/logo.service.ts:11",{"_index":529,"title":{},"body":{"injectables/LogoService.html":{}}}],["src/services/logo.service.ts:18",{"_index":532,"title":{},"body":{"injectables/LogoService.html":{}}}],["src/services/logo.service.ts:25",{"_index":530,"title":{},"body":{"injectables/LogoService.html":{}}}],["src/services/logo.service.ts:6",{"_index":533,"title":{},"body":{"injectables/LogoService.html":{}}}],["src/services/logo.service.ts:8",{"_index":537,"title":{},"body":{"injectables/LogoService.html":{}}}],["src/services/menu.service.ts",{"_index":575,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["src/services/menu.service.ts:13",{"_index":579,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/services/menu.service.ts:17",{"_index":577,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/services/menu.service.ts:7",{"_index":576,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/services/messages.service.ts",{"_index":647,"title":{},"body":{"injectables/MessagesService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/services/messages.service.ts:12",{"_index":658,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/services/messages.service.ts:14",{"_index":659,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/services/messages.service.ts:17",{"_index":657,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/services/messages.service.ts:22",{"_index":660,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/services/messages.service.ts:25",{"_index":653,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/services/messages.service.ts:48",{"_index":655,"title":{},"body":{"injectables/MessagesService.html":{}}}],["src/services/notifications.service.ts",{"_index":824,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/services/notifications.service.ts:14",{"_index":833,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/services/notifications.service.ts:16",{"_index":831,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/services/notifications.service.ts:19",{"_index":832,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/services/notifications.service.ts:24",{"_index":834,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/services/notifications.service.ts:27",{"_index":828,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/services/notifications.service.ts:50",{"_index":830,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/services/rest.service.ts",{"_index":856,"title":{},"body":{"injectables/RestService.html":{},"coverage.html":{}}}],["src/services/rest.service.ts:10",{"_index":905,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:104",{"_index":879,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:114",{"_index":900,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:122",{"_index":882,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:129",{"_index":894,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:13",{"_index":903,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:14",{"_index":873,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:25",{"_index":897,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:30",{"_index":888,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:41",{"_index":891,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:49",{"_index":885,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:55",{"_index":886,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:8",{"_index":904,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:82",{"_index":884,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:9",{"_index":902,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/rest.service.ts:94",{"_index":875,"title":{},"body":{"injectables/RestService.html":{}}}],["src/services/translate.service.ts",{"_index":983,"title":{},"body":{"injectables/TranslateService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/services/translate.service.ts:11",{"_index":990,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/services/translate.service.ts:12",{"_index":987,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/services/translate.service.ts:42",{"_index":989,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/services/translate.service.ts:46",{"_index":988,"title":{},"body":{"injectables/TranslateService.html":{}}}],["src/services/user.service.ts",{"_index":1076,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:11",{"_index":1078,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:17",{"_index":1082,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:21",{"_index":1079,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:25",{"_index":1080,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:8",{"_index":1083,"title":{},"body":{"injectables/UserService.html":{}}}],["src/styles.scss",{"_index":1302,"title":{},"body":{"index.html":{}}}],["src/widgets/app",{"_index":10,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"coverage.html":{}}}],["src/widgets/breadcrumb/breadcrumb.component.ts",{"_index":128,"title":{},"body":{"components/BreadcrumbComponent.html":{},"coverage.html":{}}}],["src/widgets/breadcrumb/breadcrumb.component.ts:10",{"_index":141,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/widgets/breadcrumb/breadcrumb.component.ts:11",{"_index":139,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/widgets/breadcrumb/breadcrumb.component.ts:12",{"_index":136,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/widgets/breadcrumb/breadcrumb.component.ts:9",{"_index":140,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["src/widgets/component",{"_index":212,"title":{},"body":{"components/ComponentLoaderComponent.html":{},"coverage.html":{}}}],["src/widgets/control",{"_index":274,"title":{},"body":{"components/ControlSidebarComponent.html":{},"coverage.html":{}}}],["src/widgets/logo/logo.component.ts",{"_index":511,"title":{},"body":{"components/LogoComponent.html":{},"coverage.html":{}}}],["src/widgets/logo/logo.component.ts:10",{"_index":520,"title":{},"body":{"components/LogoComponent.html":{}}}],["src/widgets/logo/logo.component.ts:11",{"_index":517,"title":{},"body":{"components/LogoComponent.html":{}}}],["src/widgets/logo/logo.component.ts:17",{"_index":519,"title":{},"body":{"components/LogoComponent.html":{}}}],["src/widgets/menu",{"_index":546,"title":{},"body":{"components/MenuAsideComponent.html":{},"coverage.html":{}}}],["src/widgets/messages",{"_index":604,"title":{},"body":{"components/MessagesBoxComponent.html":{},"coverage.html":{}}}],["src/widgets/notification",{"_index":805,"title":{},"body":{"components/NotificationBoxComponent.html":{},"coverage.html":{}}}],["src/widgets/tasks",{"_index":969,"title":{},"body":{"components/TasksBoxComponent.html":{},"coverage.html":{}}}],["src/widgets/user",{"_index":1049,"title":{},"body":{"components/UserBoxComponent.html":{},"coverage.html":{}}}],["standard",{"_index":1357,"title":{},"body":{"index.html":{}}}],["started",{"_index":1088,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":352,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["statements",{"_index":1198,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["static",{"_index":256,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["stored",{"_index":677,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["stream",{"_index":665,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["streams",{"_index":679,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["string",{"_index":138,"title":{},"body":{"components/BreadcrumbComponent.html":{},"components/LayoutAuthComponent.html":{},"injectables/LoggerService.html":{},"components/MenuAsideComponent.html":{},"classes/Message.html":{},"classes/Notification.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"index.html":{}}}],["structural",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["structure",{"_index":456,"title":{},"body":{"components/LayoutAuthComponent.html":{},"index.html":{}}}],["stuff",{"_index":1383,"title":{},"body":{"index.html":{}}}],["style",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["style.css",{"_index":1349,"title":{},"body":{"index.html":{}}}],["style.scss",{"_index":1303,"title":{},"body":{"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutLoginComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"index.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["sub",{"_index":289,"title":{},"body":{"components/ControlSidebarComponent.html":{},"index.html":{}}}],["sub.unsubscribe",{"_index":295,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["subarray",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["subitem.html",{"_index":296,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["subitem.title",{"_index":574,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["subject",{"_index":656,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"license.html":{}}}],["sublicense",{"_index":1505,"title":{},"body":{"license.html":{}}}],["sublinks",{"_index":1359,"title":{},"body":{"index.html":{}}}],["subs",{"_index":282,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["subscribe",{"_index":508,"title":{},"body":{"injectables/LoggerService.html":{}}}],["subscribe(this.updates",{"_index":703,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["substantial",{"_index":1518,"title":{},"body":{"license.html":{}}}],["super",{"_index":1417,"title":{},"body":{"index.html":{}}}],["super(_http",{"_index":1438,"title":{},"body":{"index.html":{}}}],["super.get(id).map((unit",{"_index":1448,"title":{},"body":{"index.html":{}}}],["super.getall().map((tab",{"_index":1445,"title":{},"body":{"index.html":{}}}],["support",{"_index":1242,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":1460,"title":{},"body":{"index.html":{}}}],["sur",{"_index":687,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["svg",{"_index":1544,"title":{},"body":{"modules.html":{}}}],["syntaxe",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["tab",{"_index":327,"title":{},"body":{"injectables/ControlSidebarService.html":{},"injectables/RestService.html":{}}}],["tab.map(unit",{"_index":1446,"title":{},"body":{"index.html":{}}}],["table",{"_index":1215,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1214,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1186,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["taptodismiss",{"_index":790,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["target",{"_index":1362,"title":{},"body":{"index.html":{}}}],["task",{"_index":1475,"title":{},"body":{"index.html":{}}}],["taskbox.count",{"_index":977,"title":{},"body":{"components/TasksBoxComponent.html":{}}}],["taskbox.footer",{"_index":982,"title":{},"body":{"components/TasksBoxComponent.html":{}}}],["tasks",{"_index":336,"title":{},"body":{"injectables/ControlSidebarService.html":{},"components/TasksBoxComponent.html":{},"index.html":{}}}],["tasksbox",{"_index":970,"title":{},"body":{"components/TasksBoxComponent.html":{}}}],["tasksbox'},{'name",{"_index":79,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["tasksboxcomponent",{"_index":78,"title":{"components/TasksBoxComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskslength",{"_index":971,"title":{},"body":{"components/TasksBoxComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"changelog.html":{},"index.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["test",{"_index":206,"title":{},"body":{"guards/CanActivateGuard.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["tested",{"_index":1282,"title":{},"body":{"index.html":{}}}],["text",{"_index":1388,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["this._factoryresolver.resolvecomponentfactory(this.class_component",{"_index":263,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["this._sidebar.getitems().subscribe(items",{"_index":290,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["this._user_serv.current_user.subscribe((user",{"_index":1467,"title":{},"body":{"index.html":{}}}],["this._user_serv.setcurrentuser",{"_index":1465,"title":{},"body":{"index.html":{}}}],["this.author",{"_index":597,"title":{},"body":{"classes/Message.html":{}}}],["this.avatarurl",{"_index":851,"title":{},"body":{"classes/Preference.html":{},"classes/User.html":{}}}],["this.boxed_style",{"_index":440,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.breadserv.clear",{"_index":1377,"title":{},"body":{"index.html":{}}}],["this.breadserv.getcurrent().subscribe((data",{"_index":148,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.breadserv.setcurrent",{"_index":1375,"title":{},"body":{"index.html":{}}}],["this.class",{"_index":801,"title":{},"body":{"classes/Notification.html":{}}}],["this.clear",{"_index":183,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["this.componentref",{"_index":264,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["this.componentref.destroy",{"_index":273,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["this.componentref.instance.ngonchanges",{"_index":272,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["this.connected",{"_index":204,"title":{},"body":{"guards/CanActivateGuard.html":{},"classes/User.html":{}}}],["this.content",{"_index":593,"title":{},"body":{"classes/Message.html":{},"classes/Notification.html":{}}}],["this.creationdate",{"_index":1046,"title":{},"body":{"classes/User.html":{}}}],["this.current",{"_index":180,"title":{},"body":{"injectables/BreadcrumbService.html":{},"injectables/FooterService.html":{},"injectables/LogoService.html":{},"injectables/MenuService.html":{},"injectables/UserService.html":{}}}],["this.current.next",{"_index":384,"title":{},"body":{"injectables/FooterService.html":{},"injectables/LogoService.html":{},"injectables/MenuService.html":{},"injectables/UserService.html":{}}}],["this.current.next(data",{"_index":184,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["this.current_items",{"_index":357,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["this.current_items.next(items",{"_index":356,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["this.current_items.next(this.default_items",{"_index":355,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["this.current_state",{"_index":358,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["this.current_state.next(this.current_state_value",{"_index":360,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["this.current_state.next(this.default_state",{"_index":354,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["this.current_state_value",{"_index":359,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["this.current_user",{"_index":1468,"title":{},"body":{"index.html":{}}}],["this.currenturl",{"_index":567,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["this.currentuser",{"_index":570,"title":{},"body":{"components/MenuAsideComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{}}}],["this.currentuser.preferredlang",{"_index":1020,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.date",{"_index":601,"title":{},"body":{"classes/Message.html":{}}}],["this.description",{"_index":153,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.destination",{"_index":599,"title":{},"body":{"classes/Message.html":{}}}],["this.detectie",{"_index":450,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.display",{"_index":149,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.display_control",{"_index":430,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.display_control_sidebar",{"_index":438,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.display_logout",{"_index":437,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.display_menu_search",{"_index":436,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.display_menu_user",{"_index":435,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.display_messages",{"_index":433,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.display_notifications",{"_index":434,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.display_tasks",{"_index":432,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.display_user",{"_index":431,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.email",{"_index":1044,"title":{},"body":{"classes/User.html":{}}}],["this.firstname",{"_index":1040,"title":{},"body":{"classes/User.html":{}}}],["this.footer",{"_index":44,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["this.footerserv.getcurrent().subscribe",{"_index":43,"title":{},"body":{"components/AppFooterComponent.html":{}}}],["this.header",{"_index":151,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.header_components",{"_index":439,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.headers",{"_index":910,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.delete(this.getactionurl",{"_index":955,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.get(this.getactionurl",{"_index":923,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.post(this.getactionurl",{"_index":951,"title":{},"body":{"injectables/RestService.html":{}}}],["this.http.put(this.getactionurl",{"_index":953,"title":{},"body":{"injectables/RestService.html":{}}}],["this.items",{"_index":291,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["this.lastget",{"_index":948,"title":{},"body":{"injectables/RestService.html":{}}}],["this.lastgetall",{"_index":943,"title":{},"body":{"injectables/RestService.html":{}}}],["this.lastname",{"_index":1042,"title":{},"body":{"classes/User.html":{}}}],["this.levels",{"_index":155,"title":{},"body":{"components/BreadcrumbComponent.html":{}}}],["this.link",{"_index":803,"title":{},"body":{"classes/Notification.html":{}}}],["this.logger.log",{"_index":634,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{}}}],["this.logo",{"_index":525,"title":{},"body":{"components/LogoComponent.html":{}}}],["this.logoserv.getcurrent().subscribe((logo",{"_index":524,"title":{},"body":{"components/LogoComponent.html":{}}}],["this.logoserv.setcurrentlogo",{"_index":1394,"title":{},"body":{"index.html":{}}}],["this.logoutaction",{"_index":1085,"title":{},"body":{"injectables/UserService.html":{}}}],["this.menuserv.getcurrent().subscribe((menu",{"_index":464,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.menuserv.setcurrentmenu(this.mylinks);messagesservice",{"_index":1402,"title":{},"body":{"index.html":{}}}],["this.menuservice.setcurrent(this.mylinks);don't",{"_index":1365,"title":{},"body":{"index.html":{}}}],["this.messages",{"_index":629,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["this.messages.length",{"_index":638,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["this.messages.next(this.messageslist",{"_index":699,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.messageslist",{"_index":696,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.modelname",{"_index":908,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["this.msglength",{"_index":637,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["this.msgserv.addmessage",{"_index":1410,"title":{},"body":{"index.html":{}}}],["this.msgserv.messages.subscribe",{"_index":633,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["this.mylinks",{"_index":460,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.newmessages.next(message",{"_index":707,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.newmessages.pipe",{"_index":700,"title":{},"body":{"injectables/MessagesService.html":{}}}],["this.newnotifications.next(notification",{"_index":844,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.newnotifications.pipe",{"_index":841,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.notifications",{"_index":812,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["this.notifications.length",{"_index":818,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["this.notifications.next(this.notificationslist",{"_index":840,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.notificationslist",{"_index":837,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.notiflength",{"_index":817,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["this.notifserv.addnotification",{"_index":1419,"title":{},"body":{"index.html":{}}}],["this.notifserv.notifications.subscribe",{"_index":813,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["this.paramexistordefault(param",{"_index":429,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.preferredlang",{"_index":853,"title":{},"body":{"classes/Preference.html":{},"classes/User.html":{}}}],["this.router.events.subscribe((evt",{"_index":566,"title":{},"body":{"components/MenuAsideComponent.html":{}}}],["this.router.navigate",{"_index":210,"title":{},"body":{"guards/CanActivateGuard.html":{},"index.html":{}}}],["this.router.navigate(['login",{"_index":1087,"title":{},"body":{"injectables/UserService.html":{}}}],["this.sanitized.bypasssecuritytrusthtml(value",{"_index":968,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["this.serverwithapiurl",{"_index":913,"title":{},"body":{"injectables/RestService.html":{}}}],["this.setapiurl('http://my",{"_index":1440,"title":{},"body":{"index.html":{}}}],["this.setcomponentdata(changes",{"_index":268,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["this.setcomponentdata(this.data",{"_index":267,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["this.setcurrent",{"_index":1086,"title":{},"body":{"injectables/UserService.html":{}}}],["this.setcurrent(this.initialdata",{"_index":186,"title":{},"body":{"injectables/BreadcrumbService.html":{}}}],["this.setcurrent(this.logo",{"_index":538,"title":{},"body":{"injectables/LogoService.html":{}}}],["this.setstate(!this.current_state_value",{"_index":363,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["this.setstate(false",{"_index":362,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["this.setstate(true",{"_index":361,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["this.sidebarservice.toggle",{"_index":125,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["this.skin",{"_index":428,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["this.subs",{"_index":292,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["this.subs.foreach((sub",{"_index":294,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["this.subs.push(sub",{"_index":293,"title":{},"body":{"components/ControlSidebarComponent.html":{}}}],["this.title",{"_index":595,"title":{},"body":{"classes/Message.html":{}}}],["this.translate",{"_index":1025,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.translate.getbrowserculturelang",{"_index":1012,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.translate.getbrowserlang",{"_index":1010,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.translate.gettranslate().get",{"_index":507,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.translate.use",{"_index":1023,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.updates.subscribe((ope",{"_index":695,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["this.userserv.getcurrent().subscribe",{"_index":1007,"title":{},"body":{"injectables/TranslateService.html":{}}}],["this.userserv.getcurrent().subscribe((user",{"_index":569,"title":{},"body":{"components/MenuAsideComponent.html":{},"components/UserBoxComponent.html":{}}}],["this.userserv.logout",{"_index":1065,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["this.userserv.setcurrent",{"_index":1387,"title":{},"body":{"index.html":{}}}],["this.userservice.getcurrent().subscribe((user",{"_index":203,"title":{},"body":{"guards/CanActivateGuard.html":{}}}],["this.userservice.logout",{"_index":124,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["this.viewcontainerref.createcomponent(factory",{"_index":265,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["those",{"_index":1367,"title":{},"body":{"index.html":{}}}],["time",{"_index":1246,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":783,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["timestamp",{"_index":1483,"title":{},"body":{"index.html":{}}}],["title",{"_index":177,"title":{},"body":{"injectables/BreadcrumbService.html":{},"components/LayoutAuthComponent.html":{},"classes/Message.html":{},"changelog.html":{},"index.html":{}}}],["toadd",{"_index":949,"title":{},"body":{"injectables/RestService.html":{}}}],["toast",{"_index":786,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["toastr",{"_index":735,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":733,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["toastrmodule.forroot",{"_index":782,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["toastrservice",{"_index":734,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["today",{"_index":1424,"title":{},"body":{"index.html":{}}}],["todo",{"_index":486,"title":{},"body":{"components/LayoutRegisterComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{}}}],["toggle",{"_index":126,"title":{},"body":{"components/AppHeaderComponent.html":{},"injectables/ControlSidebarService.html":{}}}],["togglesidebar",{"_index":94,"title":{},"body":{"components/AppHeaderComponent.html":{}}}],["top",{"_index":787,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"index.html":{}}}],["tort",{"_index":1540,"title":{},"body":{"license.html":{}}}],["transform",{"_index":961,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["transform(value",{"_index":962,"title":{},"body":{"pipes/SafeHtmlPipe.html":{}}}],["transforming",{"_index":930,"title":{},"body":{"injectables/RestService.html":{}}}],["transition",{"_index":467,"title":{},"body":{"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{}}}],["translate",{"_index":399,"title":{},"body":{"components/LayoutAuthComponent.html":{},"injectables/LoggerService.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{}}}],["translate.addlangs",{"_index":999,"title":{},"body":{"injectables/TranslateService.html":{}}}],["translate.service",{"_index":497,"title":{},"body":{"injectables/LoggerService.html":{}}}],["translate.setdefaultlang",{"_index":1006,"title":{},"body":{"injectables/TranslateService.html":{}}}],["translate.use",{"_index":1024,"title":{},"body":{"injectables/TranslateService.html":{}}}],["translate/core",{"_index":522,"title":{},"body":{"components/LogoComponent.html":{},"modules/NgxAdminLteModule.html":{},"injectables/TranslateService.html":{},"dependencies.html":{}}}],["translate/http",{"_index":740,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"dependencies.html":{}}}],["translate:msglength",{"_index":640,"title":{},"body":{"components/MessagesBoxComponent.html":{}}}],["translate:notiflength",{"_index":821,"title":{},"body":{"components/NotificationBoxComponent.html":{}}}],["translate:taskslength",{"_index":978,"title":{},"body":{"components/TasksBoxComponent.html":{}}}],["translatehttploader",{"_index":739,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["translatehttploader(httpclient",{"_index":749,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["translateloader",{"_index":737,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["translatemodule",{"_index":738,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["translatemodule.forroot",{"_index":792,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["translateservice",{"_index":400,"title":{"injectables/TranslateService.html":{}},"body":{"components/LayoutAuthComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"modules/NgxAdminLteModule.html":{},"injectables/TranslateService.html":{},"coverage.html":{},"overview.html":{}}}],["translation",{"_index":1003,"title":{},"body":{"injectables/TranslateService.html":{},"changelog.html":{},"index.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["trigger",{"_index":270,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["true",{"_index":108,"title":{},"body":{"components/AppHeaderComponent.html":{},"injectables/ControlSidebarService.html":{},"components/LayoutAuthComponent.html":{},"injectables/LoggerService.html":{},"components/MenuAsideComponent.html":{},"modules/NgxAdminLteModule.html":{},"index.html":{}}}],["ts",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["tslint:disable",{"_index":623,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["tslint:enable",{"_index":624,"title":{},"body":{"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"guards/CanActivateGuard.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"classes/Message.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"classes/Notification.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"classes/Preference.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1549,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1443,"title":{},"body":{"index.html":{}}}],["ua",{"_index":469,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["ua.includes('edge",{"_index":473,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["ua.includes('msie",{"_index":471,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["ua.includes('trident",{"_index":472,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["un",{"_index":1416,"title":{},"body":{"index.html":{}}}],["uniforming",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["unit",{"_index":934,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["unit.id",{"_index":920,"title":{},"body":{"injectables/RestService.html":{}}}],["unit[champ",{"_index":941,"title":{},"body":{"injectables/RestService.html":{}}}],["up",{"_index":669,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["upd",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":871,"title":{},"body":{"injectables/RestService.html":{}}}],["update(id",{"_index":898,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["updates",{"_index":651,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{}}}],["url",{"_index":565,"title":{},"body":{"components/MenuAsideComponent.html":{},"injectables/RestService.html":{},"index.html":{}}}],["usage",{"_index":346,"title":{},"body":{"injectables/ControlSidebarService.html":{},"index.html":{}}}],["use",{"_index":458,"title":{},"body":{"components/LayoutAuthComponent.html":{},"injectables/LogoService.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":1001,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{}}}],["usefactory",{"_index":794,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["uselang",{"_index":1018,"title":{},"body":{"injectables/TranslateService.html":{}}}],["user",{"_index":208,"title":{"classes/User.html":{}},"body":{"guards/CanActivateGuard.html":{},"components/MenuAsideComponent.html":{},"classes/Message.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["user);specific",{"_index":1469,"title":{},"body":{"index.html":{}}}],["user.connected",{"_index":205,"title":{},"body":{"guards/CanActivateGuard.html":{},"injectables/UserService.html":{},"index.html":{}}}],["user.service",{"_index":201,"title":{},"body":{"guards/CanActivateGuard.html":{},"injectables/TranslateService.html":{}}}],["user1",{"_index":1385,"title":{},"body":{"index.html":{}}}],["user1.connected",{"_index":1386,"title":{},"body":{"index.html":{}}}],["user2",{"_index":1408,"title":{},"body":{"index.html":{}}}],["userbox",{"_index":81,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["userbox.membersince",{"_index":1069,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["userbox.profile",{"_index":1074,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["userbox.signout",{"_index":1075,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["userboxcomponent",{"_index":80,"title":{"components/UserBoxComponent.html":{}},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"modules/NgxAdminLteModule.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":1406,"title":{},"body":{"index.html":{}}}],["userserv",{"_index":557,"title":{},"body":{"components/MenuAsideComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{},"index.html":{}}}],["userservice",{"_index":104,"title":{"injectables/UserService.html":{}},"body":{"components/AppHeaderComponent.html":{},"guards/CanActivateGuard.html":{},"components/MenuAsideComponent.html":{},"modules/NgxAdminLteModule.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["using",{"_index":935,"title":{},"body":{"injectables/RestService.html":{},"index.html":{}}}],["v1",{"_index":1104,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["v2",{"_index":1277,"title":{},"body":{"index.html":{}}}],["v3",{"_index":1279,"title":{},"body":{"index.html":{}}}],["val",{"_index":320,"title":{},"body":{"injectables/ControlSidebarService.html":{}}}],["value",{"_index":36,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"injectables/BreadcrumbService.html":{},"components/ComponentLoaderComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"pipes/SafeHtmlPipe.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"classes/User.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":49,"title":{},"body":{"components/AppFooterComponent.html":{},"components/AppHeaderComponent.html":{},"components/BreadcrumbComponent.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"components/LogoComponent.html":{},"components/MenuAsideComponent.html":{},"components/MessagesBoxComponent.html":{},"components/NotificationBoxComponent.html":{},"components/TasksBoxComponent.html":{},"components/UserBoxComponent.html":{}}}],["variable",{"_index":626,"title":{},"body":{"components/MessagesBoxComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1553,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1275,"title":{},"body":{"index.html":{}}}],["via",{"_index":1265,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":258,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["viewchild('destination",{"_index":254,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["viewcontainerref",{"_index":224,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["viewencapsulation",{"_index":259,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["viewencapsulation.none",{"_index":221,"title":{},"body":{"components/ComponentLoaderComponent.html":{}}}],["void",{"_index":118,"title":{},"body":{"components/AppHeaderComponent.html":{},"injectables/BreadcrumbService.html":{},"components/ComponentLoaderComponent.html":{},"components/ControlSidebarComponent.html":{},"injectables/ControlSidebarService.html":{},"injectables/FooterService.html":{},"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{},"components/LayoutRegisterComponent.html":{},"injectables/LoggerService.html":{},"components/LogoComponent.html":{},"injectables/LogoService.html":{},"components/MenuAsideComponent.html":{},"injectables/MenuService.html":{},"components/MessagesBoxComponent.html":{},"injectables/MessagesService.html":{},"components/NotificationBoxComponent.html":{},"injectables/NotificationsService.html":{},"injectables/RestService.html":{},"components/TasksBoxComponent.html":{},"injectables/TranslateService.html":{},"components/UserBoxComponent.html":{},"injectables/UserService.html":{}}}],["want",{"_index":373,"title":{},"body":{"injectables/FooterService.html":{},"index.html":{}}}],["warranties",{"_index":1526,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1521,"title":{},"body":{"license.html":{}}}],["way",{"_index":674,"title":{},"body":{"injectables/MessagesService.html":{},"injectables/NotificationsService.html":{},"changelog.html":{}}}],["web",{"_index":1067,"title":{},"body":{"components/UserBoxComponent.html":{}}}],["weber",{"_index":1055,"title":{},"body":{"components/UserBoxComponent.html":{},"index.html":{}}}],["weber.antoine.pro@gmail.com",{"_index":1407,"title":{},"body":{"index.html":{}}}],["weber.antoine@outlook.com",{"_index":1054,"title":{},"body":{"components/UserBoxComponent.html":{},"index.html":{}}}],["wei",{"_index":1247,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1274,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1538,"title":{},"body":{"license.html":{}}}],["widget",{"_index":1353,"title":{},"body":{"index.html":{}}}],["widget.component",{"_index":1356,"title":{},"body":{"index.html":{}}}],["widget/menu",{"_index":1355,"title":{},"body":{"index.html":{}}}],["widgets",{"_index":755,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"changelog.html":{},"index.html":{}}}],["widgets/app",{"_index":756,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["widgets/breadcrumb/breadcrumb.component",{"_index":772,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["widgets/component",{"_index":773,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["widgets/control",{"_index":762,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["widgets/logo/logo.component",{"_index":758,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["widgets/menu",{"_index":760,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"index.html":{}}}],["widgets/messages",{"_index":764,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["widgets/notification",{"_index":766,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["widgets/tasks",{"_index":768,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["widgets/user",{"_index":770,"title":{},"body":{"modules/NgxAdminLteModule.html":{}}}],["window.dispatchevent",{"_index":451,"title":{},"body":{"components/LayoutAuthComponent.html":{},"components/LayoutLoginComponent.html":{}}}],["window.navigator.useragent",{"_index":470,"title":{},"body":{"components/LayoutAuthComponent.html":{}}}],["wip",{"_index":1474,"title":{},"body":{"index.html":{}}}],["without",{"_index":1498,"title":{},"body":{"license.html":{}}}],["work",{"_index":1284,"title":{},"body":{"index.html":{}}}],["wtfpl",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["x",{"_index":379,"title":{},"body":{"injectables/FooterService.html":{}}}],["yarn",{"_index":1287,"title":{},"body":{"index.html":{}}}],["yes",{"_index":496,"title":{},"body":{"injectables/LoggerService.html":{}}}],["yop@yopmail.com",{"_index":1464,"title":{},"body":{"index.html":{}}}],["zh",{"_index":995,"title":{},"body":{"injectables/TranslateService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":722,"title":{},"body":{"modules/NgxAdminLteModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppFooterComponent.html":{"url":"components/AppFooterComponent.html","title":"component - AppFooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppFooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/widgets/app-footer/app-footer.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                styleUrls\n                ./app-footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                footer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(footerServ: FooterService)\n                    \n                \n                        \n                            \n                                Defined in src/widgets/app-footer/app-footer.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        footerServ\n                                                  \n                                                        \n                                                                        FooterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            footer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/app-footer/app-footer.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FooterService } from '../../services/footer.service';\n\n@Component( {\n    selector: 'app-footer',\n    styleUrls: ['./app-footer.component.css'],\n    templateUrl: './app-footer.component.html'\n})\nexport class AppFooterComponent {\n    public footer: any = {};\n\n    constructor( private footerServ: FooterService) {\n      this.footerServ.getCurrent().subscribe( footer => this.footer = footer);\n    }\n}\n\n    \n\n    \n        \n\n\t\n\t\n\t\n\t\n\n\n    \n\n    \n                \n                    ./app-footer.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppFooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppHeaderComponent.html":{"url":"components/AppHeaderComponent.html","title":"component - AppHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/widgets/app-header/app-header.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./app-header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                toggleSidebar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display_control\n                            \n                            \n                                display_logout\n                            \n                            \n                                display_messages\n                            \n                            \n                                display_notifications\n                            \n                            \n                                display_tasks\n                            \n                            \n                                display_user\n                            \n                            \n                                header_components\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, sidebarService: ControlSidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/widgets/app-header/app-header.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sidebarService\n                                                  \n                                                        \n                                                                        ControlSidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display_control\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/app-header/app-header.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        display_logout\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/app-header/app-header.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        display_messages\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/app-header/app-header.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        display_notifications\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/app-header/app-header.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        display_tasks\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/app-header/app-header.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        display_user\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/app-header/app-header.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header_components\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/app-header/app-header.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/app-header/app-header.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleSidebar\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleSidebar()\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/app-header/app-header.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { UserService } from '../../services/user.service';\nimport { ControlSidebarService } from '../../services/control-sidebar.service';\n\n@Component( {\n    selector: 'app-header',\n    styleUrls: ['./app-header.component.css'],\n    templateUrl: './app-header.component.html'\n})\nexport class AppHeaderComponent {\n  @Input() public display_messages = true;\n  @Input() public display_notifications = true;\n  @Input() public display_tasks = true;\n  @Input() public display_user = true;\n  @Input() public display_control = true;\n  @Input() public display_logout = false;\n  @Input() public header_components = [];\n\n  constructor(\n    private userService: UserService,\n    private sidebarService: ControlSidebarService\n  ) { }\n\n  logout(): void {\n    this.userService.logout();\n  }\n\n  toggleSidebar() {\n    this.sidebarService.toggle();\n  }\n\n}\n\n    \n\n    \n        \n\n\t\n\t\n\t\n\t\n\t\t\n\t\t\n\t\t\t -->\n      Toggle navigation\n\t\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n        \n        \n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\n\n    \n\n    \n                \n                    ./app-header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t -->      Toggle navigation\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BreadcrumbComponent.html":{"url":"components/BreadcrumbComponent.html","title":"component - BreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/widgets/breadcrumb/breadcrumb.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-breadcrumb\n            \n\n\n\n\n            \n                templateUrl\n                ./breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                display\n                            \n                            \n                                    Public\n                                header\n                            \n                            \n                                    Public\n                                levels\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breadServ: BreadcrumbService)\n                    \n                \n                        \n                            \n                                Defined in src/widgets/breadcrumb/breadcrumb.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breadServ\n                                                  \n                                                        \n                                                                        BreadcrumbService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/breadcrumb/breadcrumb.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/breadcrumb/breadcrumb.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            header\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/breadcrumb/breadcrumb.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            levels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/breadcrumb/breadcrumb.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BreadcrumbService } from '../../services/breadcrumb.service';\n\n@Component({\n  selector: 'app-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent {\n  public display = false;\n  public header = '';\n  public description = '';\n  public levels: Array = [];\n\n  constructor(private breadServ: BreadcrumbService) {\n    // getting the data from the services\n    this.breadServ.getCurrent().subscribe((data) => {\n      this.display = data.display;\n      this.header = data.header;\n      this.description = data.description;\n      this.levels = data.levels;\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    {{ header }}\n    {{ description }}\n  \n  \n    \n      \n        \n           {{ item.title }}\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ header }}    {{ description }}                                 {{ item.title }}                    '\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BreadcrumbService.html":{"url":"injectables/BreadcrumbService.html","title":"injectable - BreadcrumbService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BreadcrumbService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/breadcrumb.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                            \n                                    Private\n                                initialData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getCurrent\n                            \n                            \n                                    Public\n                                setCurrent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/breadcrumb.service.ts:19\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/services/breadcrumb.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrent()\n                \n            \n\n\n            \n                \n                    Defined in src/services/breadcrumb.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCurrent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrent(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/breadcrumb.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/breadcrumb.service.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initialData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    description: '',\n    display: false,\n    header : '',\n\n    levels: [\n      {\n        icon: 'clock-o',\n        link: ['/'],\n        title: 'Default'\n      }\n    ]\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/services/breadcrumb.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class BreadcrumbService {\n  public current: ReplaySubject;\n  private initialData: any = {\n    description: '',\n    display: false,\n    header : '',\n\n    levels: [\n      {\n        icon: 'clock-o',\n        link: ['/'],\n        title: 'Default'\n      }\n    ]\n  };\n\n  constructor() {\n    this.current = new ReplaySubject(1);\n    this.clear();\n  }\n\n  public setCurrent(data: any) {\n    this.current.next(data);\n  }\n\n  public getCurrent() {\n    return this.current;\n  }\n\n  public clear() {\n    this.setCurrent(this.initialData);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/CanActivateGuard.html":{"url":"guards/CanActivateGuard.html","title":"guard - CanActivateGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    CanActivateGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/services/can-activate-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/services/can-activate-guard.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/services/can-activate-guard.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class CanActivateGuard implements CanActivate {\n  private connected = false;\n\n  constructor(\n    private router: Router,\n    private userService: UserService\n  ) {\n    this.userService.getCurrent().subscribe((user) => {\n      this.connected = user.connected;\n    });\n  }\n\n  public canActivate() {\n    // test here if you user is logged\n    if ( !this.connected ) {\n      this.router.navigate( [ 'login' ] );\n    }\n    return this.connected;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ComponentLoaderComponent.html":{"url":"components/ComponentLoaderComponent.html","title":"component - ComponentLoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ComponentLoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/widgets/component-loader/component-loader.component.ts\n\n\n    \n        Description\n    \n    \n        Component to dynamicly load other component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-component-loader\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                componentRef\n                            \n                            \n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setComponentData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                class_component\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_factoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in src/widgets/component-loader/component-loader.component.ts:31\n                            \n                        \n\n                \n                    \n                            Component initialisation\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _factoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        class_component\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/component-loader/component-loader.component.ts:17\n                            \n                        \n                \n                    \n                        class of the component to load\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/component-loader/component-loader.component.ts:22\n                            \n                        \n                \n                    \n                        data to pass to component\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/component-loader/component-loader.component.ts:56\n                \n            \n\n\n            \n                \n                    Lifecycle hook OnChanges, on modification of data send it to the child\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/component-loader/component-loader.component.ts:75\n                \n            \n\n\n            \n                \n                    Lifecycle hook OnDestroy\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/component-loader/component-loader.component.ts:44\n                \n            \n\n\n            \n                \n                    Lifecycle hook OnInit\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setComponentData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setComponentData(changes)\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/component-loader/component-loader.component.ts:63\n                \n            \n\n\n            \n                \n                    Send data to the inner component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            componentRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/component-loader/component-loader.component.ts:31\n                            \n                        \n\n                \n                    \n                        component reference\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('destination', {read: ViewContainerRef, static: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/component-loader/component-loader.component.ts:27\n                            \n                        \n\n                \n                    \n                        component reference in dom\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy, OnChanges,\n    ComponentFactoryResolver, ViewContainerRef, ViewChild, ViewEncapsulation} from '@angular/core';\n\n/**\n * Component to dynamicly load other component\n */\n@Component({\n    selector: 'app-component-loader',\n    encapsulation: ViewEncapsulation.None,\n    template: ''\n})\nexport class ComponentLoaderComponent implements OnInit, OnDestroy, OnChanges {\n\n    /**\n     * class of the component to load\n     */\n    @Input() class_component: any = null;\n\n    /**\n     * data to pass to component\n     */\n    @Input() data: any = null;\n\n    /**\n     * component reference in dom\n     */\n    @ViewChild('destination', { read: ViewContainerRef, static: false }) viewContainerRef: ViewContainerRef;\n    /**\n     * component reference\n     */\n    private componentRef: any = null;\n\n    /**\n     * Component initialisation\n     */\n    constructor(\n        private _factoryResolver: ComponentFactoryResolver\n    ) { }\n\n\n    /**\n     * Lifecycle hook OnInit\n     */\n    ngOnInit() {\n        // Build the child component\n        const factory = this._factoryResolver.resolveComponentFactory(this.class_component);\n        this.componentRef = this.viewContainerRef.createComponent(factory);\n\n        // then give some data\n        this.setComponentData(this.data);\n    }\n\n    /**\n     * Lifecycle hook OnChanges, on modification of data send it to the child\n     */\n    ngOnChanges(changes) {\n        this.setComponentData(changes);\n    }\n\n    /**\n     * Send data to the inner component\n     */\n    private setComponentData(changes) {\n        if (this.componentRef) {\n        // send data to component\n        Object.assign(this.componentRef.instance, changes);\n        // trigger component ngOnChange\n        this.componentRef.instance.ngOnChanges( changes );\n        }\n    }\n\n    /**\n     * Lifecycle hook OnDestroy\n     */\n    ngOnDestroy() {\n        if (this.componentRef) {\n        this.componentRef.destroy();\n        }\n    }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ComponentLoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlSidebarComponent.html":{"url":"components/ControlSidebarComponent.html","title":"component - ControlSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ControlSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/widgets/control-sidebar/control-sidebar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-control-sidebar\n            \n\n            \n                styleUrls\n                ./control-sidebar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./control-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _sidebar\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Private\n                                subs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_sidebar: ControlSidebarService)\n                    \n                \n                        \n                            \n                                Defined in src/widgets/control-sidebar/control-sidebar.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _sidebar\n                                                  \n                                                        \n                                                                        ControlSidebarService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/control-sidebar/control-sidebar.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/control-sidebar/control-sidebar.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _sidebar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ControlSidebarService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/control-sidebar/control-sidebar.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/control-sidebar/control-sidebar.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/control-sidebar/control-sidebar.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ControlSidebarService } from '../../services/control-sidebar.service';\n\n@Component({\n  selector: 'app-control-sidebar',\n  styleUrls: ['./control-sidebar.component.css'],\n  templateUrl: './control-sidebar.component.html'\n})\nexport class ControlSidebarComponent implements OnDestroy, OnInit {\n  public items: any[];\n  private subs: any[];\n\n  constructor (public _sidebar: ControlSidebarService) { }\n\n  public ngOnInit () {\n    const sub = this._sidebar.getItems().subscribe(items => {\n      this.items = items;\n    });\n    this.subs = [];\n    this.subs.push(sub);\n  }\n\n  public ngOnDestroy () {\n    this.subs.forEach((sub) => sub.unsubscribe());\n    this.subs = null;\n    this.items = null;\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n        \n            \n                \n            \n        \n    \n    \n    \n        \n            \n            \n                \n                    \n                    \n                        \n                            \n                        \n                    \n                    \n                        {{ subitem.html | safeHtml }}\n                    \n                \n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./control-sidebar.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                {{ subitem.html | safeHtml }}                                                            '\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ControlSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ControlSidebarService.html":{"url":"injectables/ControlSidebarService.html","title":"injectable - ControlSidebarService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ControlSidebarService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/control-sidebar.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                current_items\n                            \n                            \n                                    Private\n                                current_state\n                            \n                            \n                                    Private\n                                current_state_value\n                            \n                            \n                                    Private\n                                default_items\n                            \n                            \n                                    Private\n                                default_state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                close\n                            \n                            \n                                    Public\n                                getItems\n                            \n                            \n                                    Public\n                                getState\n                            \n                            \n                                    Public\n                                open\n                            \n                            \n                                    Public\n                                setItems\n                            \n                            \n                                    Public\n                                setState\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/control-sidebar.service.ts:68\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            close\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/services/control-sidebar.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getItems()\n                \n            \n\n\n            \n                \n                    Defined in src/services/control-sidebar.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getState()\n                \n            \n\n\n            \n                \n                    Defined in src/services/control-sidebar.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ReplaySubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            open\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    open()\n                \n            \n\n\n            \n                \n                    Defined in src/services/control-sidebar.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setItems(items: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/control-sidebar.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    items\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setState(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/services/control-sidebar.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/services/control-sidebar.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            current_items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/services/control-sidebar.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            current_state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/services/control-sidebar.service.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            current_state_value\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/services/control-sidebar.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            default_items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n      id: 'control-sidebar-home-tab',\n      icon: 'home',\n      active: true,\n      items: [\n        {\n          html: `\n            Recent Activity\n            \n               \n                  \n                    Langdon's Birthday\n                    Will be 23 on April 24th\n                  \n              \n            `\n        },\n        {\n          html: `\n            Tasks Progress\n            \n              \n                  \n                    Custom Template Design 70%\n                  \n                  \n                    \n                  \n              \n            `\n        }\n      ]\n    },\n    {\n      id: 'control-sidebar-settings-tab',\n      icon: 'gear',\n      active: false,\n      items: [\n        {\n          html: `\n            General Settings\n            \n               Report panel\n                usage \n              \n              Some information about this general settings option\n            \n            \n          `\n        }\n      ]\n    }\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/services/control-sidebar.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            default_state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/services/control-sidebar.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class ControlSidebarService {\n  // Handle the state (open or closed)\n  private current_state: ReplaySubject = new ReplaySubject(1);\n  private default_state: any = false;\n  private current_state_value = false;\n\n  // Handle the items\n  private current_items: ReplaySubject = new ReplaySubject(1);\n  private default_items: any = [\n    {\n      id: 'control-sidebar-home-tab',\n      icon: 'home',\n      active: true,\n      items: [\n        {\n          html: `\n            Recent Activity\n            \n               \n                  \n                    Langdon's Birthday\n                    Will be 23 on April 24th\n                  \n              \n            `\n        },\n        {\n          html: `\n            Tasks Progress\n            \n              \n                  \n                    Custom Template Design 70%\n                  \n                  \n                    \n                  \n              \n            `\n        }\n      ]\n    },\n    {\n      id: 'control-sidebar-settings-tab',\n      icon: 'gear',\n      active: false,\n      items: [\n        {\n          html: `\n            General Settings\n            \n               Report panel\n                usage \n              \n              Some information about this general settings option\n            \n            \n          `\n        }\n      ]\n    }\n  ];\n\n  constructor() {\n    this.current_state.next(this.default_state);\n    this.current_items.next(this.default_items);\n  }\n\n  public setItems(items: any) {\n    this.current_items.next(items);\n  }\n\n  public getItems() {\n    return this.current_items;\n  }\n\n  public getState(): ReplaySubject {\n    return this.current_state;\n  }\n\n  public setState(val: boolean): void {\n    this.current_state_value = val;\n    this.current_state.next(this.current_state_value);\n  }\n\n  public open(): void {\n    this.setState(true);\n    this.current_state.next(this.current_state_value);\n  }\n\n  public close(): void {\n    this.setState(false);\n  }\n\n  public toggle(): void {\n    this.setState(!this.current_state_value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FooterService.html":{"url":"injectables/FooterService.html","title":"injectable - FooterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FooterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/footer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                current\n                            \n                            \n                                    Public\n                                default\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrent\n                            \n                            \n                                    Public\n                                setCurrent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/footer.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrent()\n                \n            \n\n\n            \n                \n                    Defined in src/services/footer.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCurrent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrent(footer: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/footer.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    footer\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject( 1 )\n                        \n                    \n                        \n                            \n                                    Defined in src/services/footer.service.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            default\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n      right_part: 'Anything you want',\n      left_part: `Copyright &copy; 2016 Company X.\n    \t All rights reserved.`\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/services/footer.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class FooterService {\n    public current: ReplaySubject = new ReplaySubject( 1 );\n    public default: any = {\n      right_part: 'Anything you want',\n      left_part: `Copyright &copy; 2016 Company X.\n    \t All rights reserved.`\n    }\n\n    constructor() {}\n\n    /* Redefine the footer html */\n    public setCurrent( footer: any ) {\n      this.current.next( footer );\n    }\n\n    public getCurrent() {\n      return this.current;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutAuthComponent.html":{"url":"components/LayoutAuthComponent.html","title":"component - LayoutAuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutAuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/layouts/auth/auth.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layouts-auth\n            \n\n\n\n\n            \n                templateUrl\n                ./auth.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                boxed_style\n                            \n                            \n                                    Public\n                                display_control\n                            \n                            \n                                    Public\n                                display_control_sidebar\n                            \n                            \n                                    Public\n                                display_logout\n                            \n                            \n                                    Public\n                                display_menu_search\n                            \n                            \n                                    Public\n                                display_menu_user\n                            \n                            \n                                    Public\n                                display_messages\n                            \n                            \n                                    Public\n                                display_notifications\n                            \n                            \n                                    Public\n                                display_tasks\n                            \n                            \n                                    Public\n                                display_user\n                            \n                            \n                                    Public\n                                header_components\n                            \n                            \n                                    Public\n                                mylinks\n                            \n                            \n                                    Public\n                                skin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                detectIE\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Private\n                                paramExistOrDefault\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuServ: MenuService, translate: TranslateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/layouts/auth/auth.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuServ\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            detectIE\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    detectIE()\n                \n            \n\n\n            \n                \n                    Defined in src/layouts/auth/auth.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/layouts/auth/auth.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/layouts/auth/auth.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            paramExistOrDefault\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    paramExistOrDefault(param: any, index: string, default_value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/layouts/auth/auth.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    index\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    default_value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            boxed_style\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display_control\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display_control_sidebar\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display_logout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display_menu_search\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display_menu_user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display_messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display_notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display_tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            display_user\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            header_components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mylinks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'skin-blue'\n                        \n                    \n                        \n                            \n                                    Defined in src/layouts/auth/auth.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MenuService } from '../../services/menu.service';\nimport { TranslateService } from '../../services/translate.service';\n\n@Component( {\n    selector: 'app-layouts-auth',\n    templateUrl: './auth.html'\n})\nexport class LayoutAuthComponent implements OnInit, OnDestroy {\n    public mylinks: Array = [];\n    public skin = 'skin-blue';\n    public display_control = true;\n    public display_user = true;\n    public display_tasks = true;\n    public display_messages = true;\n    public display_notifications = true;\n    public display_menu_user = true;\n    public display_menu_search = true;\n    public display_logout = false;\n    public header_components = [];\n    public boxed_style = true;\n    public display_control_sidebar = true;\n\n    constructor(\n      private menuServ: MenuService,\n      private translate: TranslateService,\n      route: ActivatedRoute) {\n        const param = route.snapshot.data[0];\n        this.skin = this.paramExistOrDefault(param, 'skin', 'skin-blue');\n        this.display_control = this.paramExistOrDefault(param, 'display_control');\n        this.display_user = this.paramExistOrDefault(param, 'display_user');\n        this.display_tasks = this.paramExistOrDefault(param, 'display_tasks');\n        this.display_messages = this.paramExistOrDefault(param, 'display_messages');\n        this.display_notifications = this.paramExistOrDefault(param, 'display_notifications');\n        this.display_menu_user = this.paramExistOrDefault(param, 'display_menu_user');\n        this.display_menu_search = this.paramExistOrDefault(param, 'display_menu_search');\n        this.display_logout = this.paramExistOrDefault(param, 'display_logout', false);\n        this.display_control_sidebar = this.paramExistOrDefault(param, 'display_control_sidebar', true);\n        this.header_components = this.paramExistOrDefault(param, 'header_components', []);\n        this.boxed_style = this.paramExistOrDefault(param, 'boxed_style', true);\n\n    }\n\n    private paramExistOrDefault(param: any, index: string, default_value: any = true) {\n      return param.hasOwnProperty(index) ? param[index] : default_value;\n    }\n\n    public ngOnInit(): void {\n        //  sedding the resize event, for AdminLTE to place the height\n        const ie = this.detectIE();\n        if (!ie) {\n            window.dispatchEvent( new Event( 'resize' ) );\n        } else {\n            // solution for IE from @hakonamatata\n            const event = document.createEvent( 'Event' );\n            event.initEvent( 'resize', false, true );\n            window.dispatchEvent( event );\n        }\n\n        // default menu structure, please use the menuService to modify\n        this.mylinks = [\n          {\n            'header': 'NAVIGATION'\n          },\n          {\n            'title': 'Home',\n            'icon': 'dashboard',\n            'link': ['/']\n          }\n        ];\n\n        // register to menu change\n        this.menuServ.getCurrent().subscribe((menu) => {\n          this.mylinks = menu;\n        });\n\n      document.body.className = 'hold-transition ' + this.skin + ' sidebar-mini';\n    }\n\n    public ngOnDestroy(): void {\n      document.body.className = '';\n    }\n\n    protected detectIE(): boolean {\n        const ua: string = window.navigator.userAgent;\n        return ua.includes('MSIE ') || ua.includes('Trident/') || ua.includes('Edge/');\n    }\n\n}\n\n    \n\n    \n        \n\t{{ 'LOADING' | translate }} header...\n\t{{ 'LOADING' | translate }} menu...\n\n\t\n\t\n\t\t\n\t\t\n\n\t\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\n\t\n\t{{ 'LOADING' | translate }} footer...\n\t{{ 'LOADING' | translate }} control sidebar...\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t{{ \\'LOADING\\' | translate }} header...\t{{ \\'LOADING\\' | translate }} menu...\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ \\'LOADING\\' | translate }} footer...\t{{ \\'LOADING\\' | translate }} control sidebar...'\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutAuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutLoginComponent.html":{"url":"components/LayoutLoginComponent.html","title":"component - LayoutLoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutLoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/layouts/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-login\n            \n\n\n            \n                styles\n                ./login.css\n            \n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/layouts/login/login.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/layouts/login/login.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/layouts/login/login.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-layout-login',\n  styles: ['./login.css'],\n  templateUrl: './login.component.html'\n})\nexport class LayoutLoginComponent implements OnInit, OnDestroy {\n\n  constructor(\n  ) {\n  }\n\n  public ngOnInit() {\n    window.dispatchEvent( new Event( 'resize' ) );\n    document.body.className = 'hold-transition login-page';\n  }\n\n  public ngOnDestroy() {\n    document.body.className = '';\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n  \n    \n  \n  \n\n\n\n    \n\n    \n            ./login.css\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutLoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutRegisterComponent.html":{"url":"components/LayoutRegisterComponent.html","title":"component - LayoutRegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutRegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/layouts/register/register.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-layout-register\n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/layouts/register/register.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/layouts/register/register.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-layout-register',\n  templateUrl: './register.component.html'\n})\nexport class LayoutRegisterComponent implements OnInit {\n\n  constructor( ) {\n    // TODO\n  }\n\n  public ngOnInit() {\n    // TODO\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  '\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutRegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/services/logger.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(component: string, msg?: string, i18nRef?: string, data?: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/services/logger.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    i18nRef\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from './translate.service';\n\n@Injectable()\nexport class LoggerService {\n\n    constructor( private translate: TranslateService ) {}\n\n    public log( component: string, msg?: string, i18nRef?: string, data?: string[] ) {\n        // here we should test some environment config to show or not the log\n        if ( true ) {\n            if ( i18nRef ) {\n                let params: {} = {};\n                if ( data ) {\n                    params = ( data[0] ) ? { 0: data[0] } : params;\n                    params = ( data[1] ) ? { 0: data[0], 1: data[1] } : params;\n                    params = ( data[2] ) ? { 0: data[0], 1: data[1], 2: data[2] } : params;\n                }\n                this.translate.getTranslate().get( i18nRef, params ).subscribe(( res: string ) => {\n                    console.log( component + ': ' + res );\n                });\n            } else {\n                console.log( component + ': ' + msg );\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoComponent.html":{"url":"components/LogoComponent.html","title":"component - LogoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LogoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/widgets/logo/logo.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logo\n            \n\n\n\n\n            \n                templateUrl\n                ./logo.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logoServ: LogoService)\n                    \n                \n                        \n                            \n                                Defined in src/widgets/logo/logo.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logoServ\n                                                  \n                                                        \n                                                                        LogoService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        hide\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/logo/logo.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/logo/logo.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/logo/logo.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LogoService } from '../../services/logo.service';\n\n@Component( {\n    selector: 'app-logo',\n    templateUrl: './logo.component.html'\n})\nexport class LogoComponent implements OnInit {\n  public logo: any;\n  @Input() hide = '';\n\n  constructor(\n    private logoServ: LogoService\n  ) { }\n\n  public ngOnInit() {\n    this.logoServ.getCurrent().subscribe((logo) => {\n      this.logo = logo;\n    });\n  }\n}\n\n    \n\n    \n        \n \n\t\n\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\t{{logo.small.bold}}{{logo.small.normal}} \n\t\t\n\t\n\n\t\n\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\t{{logo.big.bold}}{{logo.big.normal}}\n\t\t\n\t\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' \t\t\t\t\t\t\t\t\t\t\t\t\t{{logo.small.bold}}{{logo.small.normal}} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{logo.big.bold}}{{logo.big.normal}}\t\t\t'\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogoService.html":{"url":"injectables/LogoService.html","title":"injectable - LogoService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/logo.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                current\n                            \n                            \n                                    Public\n                                logo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrent\n                            \n                            \n                                    Public\n                                setCurrent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/logo.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrent()\n                \n            \n\n\n            \n                \n                    Defined in src/services/logo.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCurrent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrent(logo: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/logo.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject( 1 )\n                        \n                    \n                        \n                            \n                                    Defined in src/services/logo.service.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n      html_mini: 'ALT',\n      html_lg: 'AdminLTE'\n    }\n                        \n                    \n                        \n                            \n                                    Defined in src/services/logo.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable()\nexport class LogoService {\n    private current: ReplaySubject = new ReplaySubject( 1 );\n    // default logo\n    public logo: any = {\n      html_mini: 'ALT',\n      html_lg: 'AdminLTE'\n    };\n\n    constructor() {\n      this.setCurrent(this.logo);\n    }\n\n    /* Redefine the logo */\n    public setCurrent( logo: any ) {\n      if (logo.small || logo.big ) {\n        console.log('NgxAdminLTE: LogoService setCurrent: small and big are now deprecated in logo, use html_mini and html_lg');\n      }\n      this.current.next( logo );\n    }\n\n    public getCurrent() {\n      return this.current;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuAsideComponent.html":{"url":"components/MenuAsideComponent.html","title":"component - MenuAsideComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuAsideComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/widgets/menu-aside/menu-aside.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-aside\n            \n\n            \n                styleUrls\n                ./menu-aside.component.css\n            \n\n\n\n            \n                templateUrl\n                ./menu-aside.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUrl\n                            \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display_menu_search\n                            \n                            \n                                display_menu_user\n                            \n                            \n                                links\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userServ: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/widgets/menu-aside/menu-aside.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userServ\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display_menu_search\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/menu-aside/menu-aside.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        display_menu_user\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/menu-aside/menu-aside.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        links\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/menu-aside/menu-aside.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/menu-aside/menu-aside.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/menu-aside/menu-aside.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Default value : new User()\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/menu-aside/menu-aside.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/menu-aside/menu-aside.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { User } from '../../models/user';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-menu-aside',\n  styleUrls: ['./menu-aside.component.css'],\n  templateUrl: './menu-aside.component.html'\n})\nexport class MenuAsideComponent implements OnInit {\n  public currentUrl: string;\n  public currentUser: User = new User();\n\n  @Input() links: Array = [];\n  @Input() display_menu_user = true;\n  @Input() display_menu_search = true;\n\n  constructor(\n    private userServ: UserService,\n    public router: Router\n  ) {\n    // getting the current url\n    this.router.events.subscribe((evt: any) => this.currentUrl = evt.url);\n    this.userServ.getCurrent().subscribe((user) => this.currentUser = user);\n  }\n\n  public ngOnInit() { }\n\n}\n\n    \n\n    \n        \n\n\t\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\t{{currentUser?.getName()}}\n\t\t\t\t\n\t\t\t\t Online\n\t\t\t\n\t\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\t \n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t{{item.header}}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{item.title}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{item.title}}\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{{item.title}}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t{{subitem.title}}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t{{subitem.title}}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\t\n\t\n\t\n\n\n    \n\n    \n                \n                    ./menu-aside.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{currentUser?.getName()}}\t\t\t\t\t\t\t\t Online\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{item.header}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{item.title}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{item.title}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{item.title}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{subitem.title}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{subitem.title}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuAsideComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/menu.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                current\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrent\n                            \n                            \n                                    Public\n                                setCurrent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/services/menu.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrent()\n                \n            \n\n\n            \n                \n                    Defined in src/services/menu.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCurrent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrent(menu: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/menu.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject( 1 )\n                        \n                    \n                        \n                            \n                                    Defined in src/services/menu.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class MenuService {\n    private current: ReplaySubject = new ReplaySubject( 1 );\n\n    constructor(\n      private router: Router\n    ) {}\n\n    public setCurrent( menu: any ) {\n      this.current.next( menu );\n    }\n\n    public getCurrent() {\n      return this.current;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Message.html":{"url":"classes/Message.html","title":"class - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/message.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                destination\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/message.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/message.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/message.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/message.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            destination\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/message.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/message.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user';\n\nexport class Message {\n  public content: string;\n  public title: string;\n  public author: User;\n  public destination: User;\n  public date: string;\n\n  public constructor(data: any = {}) {\n    this.content = data.content || '';\n    this.title = data.title || '';\n    this.author = data.author || null;\n    this.destination = data.destination || null;\n    this.date = data.date || Date.now();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessagesBoxComponent.html":{"url":"components/MessagesBoxComponent.html","title":"component - MessagesBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MessagesBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/widgets/messages-box/messages-box.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                .messagesBox\n            \n\n            \n                styleUrls\n                ./messages-box.component.css\n            \n\n\n\n            \n                templateUrl\n                ./messages-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                messages\n                            \n                            \n                                msgLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(msgServ: MessagesService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/widgets/messages-box/messages-box.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msgServ\n                                                  \n                                                        \n                                                                        MessagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/messages-box/messages-box.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/messages-box/messages-box.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            msgLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { 0: 0 }\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/messages-box/messages-box.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { MessagesService } from '../../services/messages.service';\nimport { LoggerService } from '../../services/logger.service';\nimport { Message } from '../../models/message';\n\n@Component( {\n    /* tslint:disable */\n    selector: '.messagesBox',\n    /* tslint:enable */\n    styleUrls: ['./messages-box.component.css'],\n    templateUrl: './messages-box.component.html'\n})\nexport class MessagesBoxComponent implements OnInit {\n    // Declaring the variable for binding with initial value\n    public messages: Message[];\n    msgLength = { 0: 0 };\n\n    constructor( private msgServ: MessagesService, private logger: LoggerService ) {\n        this.messages = [];\n    }\n\n    public ngOnInit() {\n        // Every incoming message changes entire local message Array.\n        this.msgServ.messages.subscribe(( msg: Message[] ) => {\n            this.logger.log( 'MsgBox', null, 'RECEIVED.MESSAGE', null );\n            this.messages = msg;\n            this.msgLength = { 0: this.messages.length };\n        });\n    }\n}\n\n    \n\n    \n        \n  \n\n\n\t{{ 'MSGBOX.COUNT' | translate:msgLength }}\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\t \n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t \n\t\t\t\t\t\n\t\t\t\t\t\t{{msg.title}} \n\t\t\t\t\t\t\t{{msg.date | date:'yMd' }}\n\t\t\t\t\t \n\t\t\t\t\t{{msg.content}}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t \n\t\n\t\n    {{ 'MSGBOX.FOOTER' | translate }}\n  \n\n\n    \n\n    \n                \n                    ./messages-box.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  \t{{ \\'MSGBOX.COUNT\\' | translate:msgLength }}\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t{{msg.title}} \t\t\t\t\t\t\t{{msg.date | date:\\'yMd\\' }}\t\t\t\t\t \t\t\t\t\t{{msg.content}}\t\t\t\t\t\t\t\t\t\t\t \t\t    {{ \\'MSGBOX.FOOTER\\' | translate }}  '\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessagesBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessagesService.html":{"url":"injectables/MessagesService.html","title":"injectable - MessagesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessagesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/messages.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                messages\n                            \n                            \n                                    Private\n                                messagesList\n                            \n                            \n                                    Public\n                                newMessages\n                            \n                            \n                                    Public\n                                updates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/messages.service.ts:25\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addMessage(message: Message)\n                \n            \n\n\n            \n                \n                    Defined in src/services/messages.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            create\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/services/messages.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/services/messages.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            messagesList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/services/messages.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/services/messages.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/services/messages.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Message } from '../models/message';\nimport { Injectable } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nconst initialMessages: Message[] = [];\n\ntype IMessagesOperation = (messages: Message[]) => Message[];\n\n@Injectable()\nexport class MessagesService {\n  private messagesList: Message[] = [];\n  // a stream that publishes new messages only once\n  public newMessages: Subject = new Subject();\n\n  // `messages` is a stream that emits an array of the most up to date messages\n  public messages: ReplaySubject = new ReplaySubject(1);\n\n  // `updates` receives _operations_ to be applied to our `messages`\n  // it's a way we can perform changes on *all* messages (that are currently\n  // stored in `messages`)\n  public updates: Subject = new Subject();\n\n  // action streams\n  public create: Subject = new Subject();\n  // public markThreadAsRead: Subject = new Subject();\n\n  constructor() {\n    // recois des operation, et les fais sur la liste interne, puis diffuse le resultat sur messages\n    this.updates.subscribe((ope) => {\n      this.messagesList = ope(this.messagesList);\n      console.log(this.messagesList);\n      this.messages.next(this.messagesList);\n    });\n\n    this.newMessages.pipe(\n        map(function(message: Message): IMessagesOperation {\n          return (messages: Message[]) => {\n            return messages.concat(message);\n          };\n        })\n      )\n      .subscribe(this.updates);\n\n  }\n\n  // an imperative function call to this action stream\n  public addMessage(message: Message): void {\n    this.newMessages.next(message);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxAdminLteModule.html":{"url":"modules/NgxAdminLteModule.html","title":"module - NgxAdminLteModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxAdminLteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxAdminLteModule\n\n\n\ncluster_NgxAdminLteModule_declarations\n\n\n\ncluster_NgxAdminLteModule_exports\n\n\n\ncluster_NgxAdminLteModule_providers\n\n\n\n\nAppFooterComponent\n\nAppFooterComponent\n\n\n\nNgxAdminLteModule\n\nNgxAdminLteModule\n\nNgxAdminLteModule -->\n\nAppFooterComponent->NgxAdminLteModule\n\n\n\n\n\nAppHeaderComponent\n\nAppHeaderComponent\n\nNgxAdminLteModule -->\n\nAppHeaderComponent->NgxAdminLteModule\n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\nNgxAdminLteModule -->\n\nBreadcrumbComponent->NgxAdminLteModule\n\n\n\n\n\nComponentLoaderComponent\n\nComponentLoaderComponent\n\nNgxAdminLteModule -->\n\nComponentLoaderComponent->NgxAdminLteModule\n\n\n\n\n\nControlSidebarComponent\n\nControlSidebarComponent\n\nNgxAdminLteModule -->\n\nControlSidebarComponent->NgxAdminLteModule\n\n\n\n\n\nLayoutAuthComponent\n\nLayoutAuthComponent\n\nNgxAdminLteModule -->\n\nLayoutAuthComponent->NgxAdminLteModule\n\n\n\n\n\nLayoutLoginComponent\n\nLayoutLoginComponent\n\nNgxAdminLteModule -->\n\nLayoutLoginComponent->NgxAdminLteModule\n\n\n\n\n\nLayoutRegisterComponent\n\nLayoutRegisterComponent\n\nNgxAdminLteModule -->\n\nLayoutRegisterComponent->NgxAdminLteModule\n\n\n\n\n\nLogoComponent\n\nLogoComponent\n\nNgxAdminLteModule -->\n\nLogoComponent->NgxAdminLteModule\n\n\n\n\n\nMenuAsideComponent\n\nMenuAsideComponent\n\nNgxAdminLteModule -->\n\nMenuAsideComponent->NgxAdminLteModule\n\n\n\n\n\nMessagesBoxComponent\n\nMessagesBoxComponent\n\nNgxAdminLteModule -->\n\nMessagesBoxComponent->NgxAdminLteModule\n\n\n\n\n\nNotificationBoxComponent\n\nNotificationBoxComponent\n\nNgxAdminLteModule -->\n\nNotificationBoxComponent->NgxAdminLteModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nNgxAdminLteModule -->\n\nSafeHtmlPipe->NgxAdminLteModule\n\n\n\n\n\nTasksBoxComponent\n\nTasksBoxComponent\n\nNgxAdminLteModule -->\n\nTasksBoxComponent->NgxAdminLteModule\n\n\n\n\n\nUserBoxComponent\n\nUserBoxComponent\n\nNgxAdminLteModule -->\n\nUserBoxComponent->NgxAdminLteModule\n\n\n\n\n\nSafeHtmlPipe \n\nSafeHtmlPipe \n\nSafeHtmlPipe  -->\n\nNgxAdminLteModule->SafeHtmlPipe \n\n\n\n\n\nBreadcrumbService\n\nBreadcrumbService\n\nNgxAdminLteModule -->\n\nBreadcrumbService->NgxAdminLteModule\n\n\n\n\n\nControlSidebarService\n\nControlSidebarService\n\nNgxAdminLteModule -->\n\nControlSidebarService->NgxAdminLteModule\n\n\n\n\n\nFooterService\n\nFooterService\n\nNgxAdminLteModule -->\n\nFooterService->NgxAdminLteModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nNgxAdminLteModule -->\n\nLoggerService->NgxAdminLteModule\n\n\n\n\n\nLogoService\n\nLogoService\n\nNgxAdminLteModule -->\n\nLogoService->NgxAdminLteModule\n\n\n\n\n\nMenuService\n\nMenuService\n\nNgxAdminLteModule -->\n\nMenuService->NgxAdminLteModule\n\n\n\n\n\nMessagesService\n\nMessagesService\n\nNgxAdminLteModule -->\n\nMessagesService->NgxAdminLteModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNgxAdminLteModule -->\n\nNotificationsService->NgxAdminLteModule\n\n\n\n\n\nTranslateService\n\nTranslateService\n\nNgxAdminLteModule -->\n\nTranslateService->NgxAdminLteModule\n\n\n\n\n\nUserService\n\nUserService\n\nNgxAdminLteModule -->\n\nUserService->NgxAdminLteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ngx-admin-lte.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppFooterComponent\n                        \n                        \n                            AppHeaderComponent\n                        \n                        \n                            BreadcrumbComponent\n                        \n                        \n                            ComponentLoaderComponent\n                        \n                        \n                            ControlSidebarComponent\n                        \n                        \n                            LayoutAuthComponent\n                        \n                        \n                            LayoutLoginComponent\n                        \n                        \n                            LayoutRegisterComponent\n                        \n                        \n                            LogoComponent\n                        \n                        \n                            MenuAsideComponent\n                        \n                        \n                            MessagesBoxComponent\n                        \n                        \n                            NotificationBoxComponent\n                        \n                        \n                            SafeHtmlPipe\n                        \n                        \n                            TasksBoxComponent\n                        \n                        \n                            UserBoxComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            BreadcrumbService\n                        \n                        \n                            ControlSidebarService\n                        \n                        \n                            FooterService\n                        \n                        \n                            LoggerService\n                        \n                        \n                            LogoService\n                        \n                        \n                            MenuService\n                        \n                        \n                            MessagesService\n                        \n                        \n                            NotificationsService\n                        \n                        \n                            TranslateService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SafeHtmlPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { ToastrModule, ToastrService } from 'ngx-toastr';\n\n// import ngx-translate and the http loader\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {HttpClient, HttpClientModule} from '@angular/common/http';\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory (httpClient) {\n  return new TranslateHttpLoader(httpClient, 'assets/i18n/', '.json');\n}\n\n// Pipes\nimport { SafeHtmlPipe } from './pipes/safe-html.pipes';\n\n// Widgets\nimport { AppHeaderComponent } from './widgets/app-header/app-header.component';\nimport { LogoComponent } from './widgets/logo/logo.component';\nimport { AppFooterComponent } from './widgets/app-footer/app-footer.component';\nimport { MenuAsideComponent } from './widgets/menu-aside/menu-aside.component';\nimport { ControlSidebarComponent } from './widgets/control-sidebar/control-sidebar.component';\nimport { MessagesBoxComponent } from './widgets/messages-box/messages-box.component';\nimport { NotificationBoxComponent } from './widgets/notification-box/notification-box.component';\nimport { TasksBoxComponent } from './widgets/tasks-box/tasks-box.component';\nimport { UserBoxComponent } from './widgets/user-box/user-box.component';\nimport { BreadcrumbComponent } from './widgets/breadcrumb/breadcrumb.component';\nimport { ComponentLoaderComponent } from './widgets/component-loader/component-loader.component';\n\n// Services\nimport { UserService } from './services/user.service';\nimport { MenuService } from './services/menu.service';\nimport { LogoService } from './services/logo.service';\nimport { FooterService } from './services/footer.service';\nimport { MessagesService } from './services/messages.service';\nimport { CanActivateGuard } from './services/can-activate-guard.service';\nimport { NotificationsService } from './services/notifications.service';\nimport { BreadcrumbService } from './services/breadcrumb.service';\nimport { TranslateService } from './services/translate.service';\nimport { LoggerService } from './services/logger.service';\nimport { ControlSidebarService } from './services/control-sidebar.service';\n\n// Layouts\nimport { LayoutAuthComponent } from './layouts/auth/auth';\nimport { LayoutLoginComponent } from './layouts/login/login.component';\nimport { LayoutRegisterComponent } from './layouts/register/register.component';\n\n\n@NgModule({\n  declarations: [\n    // PIPES\n    SafeHtmlPipe,\n    // WIDGETS\n    BreadcrumbComponent,\n    AppHeaderComponent,\n    LogoComponent,\n    AppFooterComponent,\n    MenuAsideComponent,\n    ControlSidebarComponent,\n    MessagesBoxComponent,\n    NotificationBoxComponent,\n    TasksBoxComponent,\n    UserBoxComponent,\n    ComponentLoaderComponent,\n    // LAYOUTS\n    LayoutAuthComponent,\n    LayoutLoginComponent,\n    LayoutRegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    ToastrModule.forRoot({\n      timeOut: 10000,\n      positionClass: 'toast-top-right',\n      preventDuplicates: true,\n      tapToDismiss: false,\n      newestOnTop: true\n    }),\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n  ],\n  exports: [\n    SafeHtmlPipe,\n  ],\n  providers: [\n    // SERVICES\n    UserService,\n    MenuService,\n    LogoService,\n    FooterService,\n    BreadcrumbService,\n    MessagesService,\n    CanActivateGuard,\n    NotificationsService,\n    TranslateService,\n    LoggerService,\n    ControlSidebarService,\n    ToastrService\n  ]\n})\nexport class NgxAdminLteModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/notification.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                class\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                link\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/notification.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/notification.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/notification.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            link\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/notification.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Notification {\n  public content: string;\n  public class: string;\n  public link: string;\n\n  public constructor(data: any = {}) {\n    this.content = data.content || '';\n    this.class = data.class || '';\n    this.link = data.link || '';\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationBoxComponent.html":{"url":"components/NotificationBoxComponent.html","title":"component - NotificationBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/widgets/notification-box/notification-box.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                .notificationsBox\n            \n\n            \n                styleUrls\n                ./notification-box.component.css\n            \n\n\n\n            \n                templateUrl\n                ./notification-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                notifications\n                            \n                            \n                                notifLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notifServ: NotificationsService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/widgets/notification-box/notification-box.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notifServ\n                                                  \n                                                        \n                                                                        NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/notification-box/notification-box.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notification[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/notification-box/notification-box.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { 0: 0 }\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/notification-box/notification-box.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Notification } from '../../models/notification';\nimport { NotificationsService } from '../../services/notifications.service';\nimport { LoggerService } from '../../services/logger.service';\n\n@Component( {\n    /* tslint:disable */\n    selector: '.notificationsBox',\n    /* tslint:enable */\n    styleUrls: ['./notification-box.component.css'],\n    templateUrl: './notification-box.component.html'\n})\nexport class NotificationBoxComponent implements OnInit {\n\n    public notifications: Notification[];\n    notifLength = { 0: 0 };\n\n    constructor( private notifServ: NotificationsService, private logger: LoggerService ) {\n        this.notifications = [];\n    }\n\n    public ngOnInit() {\n        // Every incoming notification changes entire local notification Array.\n        this.notifServ.notifications.subscribe(( notif: Notification[] ) => {\n            this.logger.log( 'NotificationBox', null, 'RECEIVED.NOTIFICATION', null );\n            this.notifications = notif;\n            this.notifLength = { 0: this.notifications.length };\n        });\n    }\n\n}\n\n    \n\n    \n        \n\n\t\n\t{{ notifications.length }}\n\n\n\t{{ 'NOTIFBOX.COUNT' | translate:notifLength }}\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\t\t {{notif.content}}\n\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t{{ 'NOTIFBOX.FOOTER' | translate }}\n\t\t\n\t\n\n\n    \n\n    \n                \n                    ./notification-box.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t{{ notifications.length }}\t{{ \\'NOTIFBOX.COUNT\\' | translate:notifLength }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t {{notif.content}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ \\'NOTIFBOX.FOOTER\\' | translate }}\t\t\t'\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/notifications.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                newNotifications\n                            \n                            \n                                    Public\n                                notifications\n                            \n                            \n                                    Private\n                                notificationsList\n                            \n                            \n                                    Public\n                                updates\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/notifications.service.ts:27\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addNotification\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addNotification(notification: Notification)\n                \n            \n\n\n            \n                \n                    Defined in src/services/notifications.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    notification\n                                    \n                                                Notification\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            create\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/services/notifications.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            newNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/services/notifications.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in src/services/notifications.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            notificationsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/services/notifications.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            updates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/services/notifications.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Notification } from '../models/notification';\nimport { Injectable } from '@angular/core';\nimport { Subject, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nconst initialNotifications: Notification[] = [];\n\ntype INotificationsOperation = (notifications: Notification[]) => Notification[];\n\n@Injectable()\nexport class NotificationsService {\n  private notificationsList: Notification[] = [];\n  // a stream that publishes new notifications only once\n  public newNotifications: Subject = new Subject();\n\n  // `notifications` is a stream that emits an array of the most up to date notifications\n  public notifications: ReplaySubject = new ReplaySubject(1);\n\n  // `updates` receives _operations_ to be applied to our `notifications`\n  // it's a way we can perform changes on *all* notifications (that are currently\n  // stored in `notifications`)\n  public updates: Subject = new Subject();\n\n  // action streams\n  public create: Subject = new Subject();\n  // public markThreadAsRead: Subject = new Subject();\n\n  constructor() {\n    // recois des operation, et les fais sur la liste interne, puis diffuse le resultat sur notifications\n    this.updates.subscribe((ope) => {\n      this.notificationsList = ope(this.notificationsList);\n      console.log(this.notificationsList);\n      this.notifications.next(this.notificationsList);\n    });\n\n    this.newNotifications.pipe(\n      map(function(notification: Notification): INotificationsOperation {\n        return (notifications: Notification[]) => {\n          return notifications.concat(notification);\n        };\n      })\n    )\n      .subscribe(this.updates);\n\n  }\n\n  // an imperative function call to this action stream\n  public addNotification(notification: Notification): void {\n    this.newNotifications.next(notification);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Preference.html":{"url":"classes/Preference.html","title":"class - Preference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Preference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/preference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                avatarUrl\n                            \n                            \n                                    Public\n                                preferredLang\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/preference.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            avatarUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/preference.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            preferredLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/preference.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Preference {\n    public avatarUrl: string;\n    public preferredLang: string;\n\n    public constructor( data: any = {}) {\n        this.avatarUrl = data.avatarUrl || '';\n        this.preferredLang = data.preferredLang || null;\n    }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RestService.html":{"url":"injectables/RestService.html","title":"injectable - RestService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/rest.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                headers\n                            \n                            \n                                    Public\n                                lastGet\n                            \n                            \n                                    Public\n                                lastGetAll\n                            \n                            \n                                    Public\n                                modelName\n                            \n                            \n                                    Private\n                                serverWithApiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                add\n                            \n                            \n                                    Public\n                                addAll\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Private\n                                getActionUrl\n                            \n                            \n                                    Public\n                                getAll\n                            \n                            \n                                    Public\n                                getAllFromLS\n                            \n                            \n                                    Public\n                                getFromCache\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                setApiUrl\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/rest.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            add\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    add(item: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/rest.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addAll(tab: Array)\n                \n            \n\n\n            \n                \n                    Defined in src/services/rest.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                            Array\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/rest.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/rest.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getActionUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getActionUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/services/rest.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/services/rest.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAllFromLS\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllFromLS(maxtime: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/rest.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    maxtime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFromCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFromCache(id)\n                \n            \n\n\n            \n                \n                    Defined in src/services/rest.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/services/rest.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setApiUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setApiUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/rest.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: number, itemToUpdate: any)\n                \n            \n\n\n            \n                \n                    Defined in src/services/rest.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemToUpdate\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/rest.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastGet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/rest.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastGetAll\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/rest.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/rest.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            serverWithApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/rest.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\n\n@Injectable()\nexport class RestService {\n    public modelName: string;\n    public headers: HttpHeaders;\n    private serverWithApiUrl: string;\n\n    // cache data\n    public lastGetAll: Array;\n    public lastGet: any;\n\n    constructor(private http: HttpClient) {\n        this.modelName = 'to-configure';\n\n        this.headers = new HttpHeaders({\n          'Content-Type':  'application/json',\n          'Accept': 'application/json'\n        });\n    }\n\n    public setApiUrl( url: string) {\n      this.serverWithApiUrl = url;\n    }\n\n    // HELPERS\n    public getAllFromLS(maxtime = 0): Array {\n      const json = localStorage.getItem( 'rest_all_' + this.modelName );\n      if ( json ) {\n        const obj = JSON.parse(json);\n        if ( obj && (obj.date  unit.id === id);\n      } else {\n        return null;\n      }\n    }\n\n    private getActionUrl() {\n      return this.serverWithApiUrl + this.modelName + '/';\n    }\n\n\n    // REST functions\n    public getAll(): Observable {\n        return this.http.get(this.getActionUrl(), { headers: this.headers })\n        .pipe(\n            map((response:  HttpResponse) => {\n              // getting an array having the same name as the model\n              const data = response.body[this.modelName];\n              // transforming the array from indexed to associative\n              const tab = data.records.map((elem) => {\n                const unit = {};\n                // using the columns order and number to rebuild the object\n                data.columns.forEach( (champ, index) => {\n                  unit[champ] = elem[index];\n                });\n                return unit;\n              });\n              this.lastGetAll = tab;\n              const obj = {\n                data: tab,\n                date: Date.now()\n              };\n              localStorage.setItem( 'rest_all_' + this.modelName, JSON.stringify(obj) );\n              return tab;\n            }),\n            catchError(this.handleError)\n        );\n    }\n\n    public get(id: number): Observable {\n        return this.http.get(this.getActionUrl() + id, { headers: this.headers })\n        .pipe(\n            map((response:  HttpResponse) => {\n              const data = response.body;\n              this.lastGet = data;\n              return data;\n            }),\n            catchError(this.handleError)\n          );\n    }\n\n    public add(item: any): Observable {\n        const toAdd = JSON.stringify(item);\n\n        return this.http.post(this.getActionUrl(), toAdd, { headers: this.headers })\n        .pipe(\n            map((response:  HttpResponse) => response.body),\n            catchError(this.handleError)\n        );\n    }\n\n    public addAll(tab: Array): Observable {\n      const toAdd = JSON.stringify(tab);\n\n      return this.http.post(this.getActionUrl(), toAdd, { headers: this.headers })\n      .pipe(\n          map((response:  HttpResponse) => response.body),\n          catchError(this.handleError)\n      );\n    }\n\n    public update(id: number, itemToUpdate: any): Observable {\n        return this.http.put(this.getActionUrl() + id, JSON.stringify(itemToUpdate), { headers: this.headers })\n        .pipe(\n            map((response:  HttpResponse) => response.body),\n            catchError(this.handleError)\n        );\n    }\n\n    public delete(id: number): Observable {\n        return this.http.delete(this.getActionUrl() + id, { headers: this.headers })\n        .pipe(\n            catchError(this.handleError)\n        );\n    }\n\n    private handleError(error:  HttpResponse) {\n        console.error(error);\n        return Observable.throw(error.body || 'Server error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SafeHtmlPipe.html":{"url":"pipes/SafeHtmlPipe.html","title":"pipe - SafeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SafeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/safe-html.pipes.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        safeHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/safe-html.pipes.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\n\n@Pipe({name: 'safeHtml'})\nexport class SafeHtmlPipe implements PipeTransform {\n    constructor(private sanitized: DomSanitizer) {\n    }\n    transform(value: string) {\n        return this.sanitized.bypassSecurityTrustHtml(value);\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TasksBoxComponent.html":{"url":"components/TasksBoxComponent.html","title":"component - TasksBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TasksBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/widgets/tasks-box/tasks-box.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                .tasksBox\n            \n\n            \n                styleUrls\n                ./tasks-box.component.css\n            \n\n\n\n            \n                templateUrl\n                ./tasks-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                messages\n                            \n                            \n                                tasksLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/widgets/tasks-box/tasks-box.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                        \n                            \n                                    Defined in src/widgets/tasks-box/tasks-box.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/tasks-box/tasks-box.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/tasks-box/tasks-box.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasksLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : { 0: 0 }\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/tasks-box/tasks-box.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Message } from '../../models/message';\n\n@Component( {\n    /* tslint:disable */\n    selector: '.tasksBox',\n    /* tslint:enable */\n    styleUrls: ['./tasks-box.component.css'],\n    templateUrl: './tasks-box.component.html'\n})\nexport class TasksBoxComponent implements OnInit {\n\n    messages: Message[];\n    tasksLength: {} = { 0: 0 };\n    @Input() public user;\n\n    constructor() {}\n\n    public ngOnInit() {}\n\n}\n\n    \n\n    \n        \n  9\n\n\n\t{{ 'TASKBOX.COUNT' | translate:tasksLength }}\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\t  \n\t\t\t\t\t\n\t\t\t\t\t\tDesign some buttons 20%\n\t\t\t\t\t \n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t20% Complete\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\n\t\n\t{{ 'TASKBOX.FOOTER' | translate\n\t\t\t}}\n\n\n    \n\n    \n                \n                    ./tasks-box.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  9\t{{ \\'TASKBOX.COUNT\\' | translate:tasksLength }}\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\tDesign some buttons 20%\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t20% Complete\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{ \\'TASKBOX.FOOTER\\' | translate\t\t\t}}'\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TasksBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslateService.html":{"url":"injectables/TranslateService.html","title":"injectable - TranslateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/translate.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                currentUser\n                            \n                            \n                                    Private\n                                lang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTranslate\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userServ: UserService, translate: NGXTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/services/translate.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userServ\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        NGXTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTranslate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTranslate()\n                \n            \n\n\n            \n                \n                    Defined in src/services/translate.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NGXTranslateService\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/services/translate.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/translate.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'us'\n                        \n                    \n                        \n                            \n                                    Defined in src/services/translate.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { TranslateService as NGXTranslateService } from '@ngx-translate/core';\nimport { UserService } from './user.service';\nimport { User } from '../models/user';\n\nconst langs = ['en', 'fr', 'ru', 'he', 'zh', 'pt', 'it'];\nconst langmatch = /en|fr|ru|he|zh|pt|it/;\n\n@Injectable()\nexport class TranslateService implements OnInit {\n    private lang = 'us';\n    private currentUser: User;\n\n    constructor( private userServ: UserService, private translate: NGXTranslateService ) {\n        translate.addLangs( langs );\n        // this language will be used as a fallback when a translation isn't found in the current language\n        translate.setDefaultLang( 'en' );\n\n        this.userServ.getCurrent().subscribe(( user: User ) => {\n            this.currentUser = user;\n\n            // the lang to use, if the lang isn't available, it will use the current loader to get them\n            const browserLang = this.translate.getBrowserLang();\n            const browserCultureLang = this.translate.getBrowserCultureLang();\n            console.log( 'Detected browser language: \"' + browserCultureLang + '\"' );\n\n            // check if current User has a Preferred Language set, and it differs from his browser lang\n            let useLang = 'en';\n            const prefLang = ( this.currentUser ) ? this.currentUser.preferredLang : null;\n            if ( !prefLang ) {\n                useLang = browserLang.match( langmatch ) ? browserLang : 'en';\n            } else {\n                console.log( 'Detected User preferred language: \"' + prefLang + '\"' );\n                useLang = prefLang.match( langmatch ) ? prefLang : 'en';\n            }\n            this.translate.use( useLang );\n            console.log( 'Translation language has been set to: \"' + useLang + '\"' );\n            // translate.use( 'ru' );\n        });\n    }\n\n    public ngOnInit() {\n        // TODO\n    }\n\n    public getTranslate(): NGXTranslateService {\n        return this.translate;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                avatarUrl\n                            \n                            \n                                    Public\n                                connected\n                            \n                            \n                                    Public\n                                creationDate\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstname\n                            \n                            \n                                    Public\n                                lastname\n                            \n                            \n                                    Public\n                                preferredLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/models/user.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            avatarUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            connected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/models/user.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            creationDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/user.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/user.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            preferredLang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/user.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getName()\n                \n            \n\n\n            \n                \n                    Defined in src/models/user.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    public firstname: string;\n    public lastname: string;\n    public email: string;\n    public avatarUrl: string;\n    public creationDate: string;\n    public preferredLang: string;\n    public connected = false;\n\n    public constructor( data: any = {}) {\n        this.firstname = data.firstname || '';\n        this.lastname = data.lastname || '';\n        this.email = data.email || '';\n        this.avatarUrl = data.avatarUrl || '';\n        this.creationDate = data.creation_date || Date.now();\n        this.preferredLang = data.preferredLang || null;\n        this.connected = data.connected || false;\n    }\n\n    public getName() {\n        return this.firstname + ' ' + this.lastname;\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserBoxComponent.html":{"url":"components/UserBoxComponent.html","title":"component - UserBoxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UserBoxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/widgets/user-box/user-box.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                .userBox\n            \n\n            \n                styleUrls\n                ./user-box.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-box.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Public\n                                logout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userServ: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/widgets/user-box/user-box.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userServ\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/widgets/user-box/user-box.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Default value : new User({\n      avatarUrl: 'assets/img/user2-160x160.jpg',\n      email: 'weber.antoine@outlook.com',\n      firstname: 'WEBER',\n      lastname: 'Antoine'\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/user-box/user-box.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/widgets/user-box/user-box.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { UserService } from '../../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  /* tslint:disable */\n  selector: '.userBox',\n  /* tslint:enable */\n  styleUrls: ['./user-box.component.css'],\n  templateUrl: './user-box.component.html'\n})\nexport class UserBoxComponent implements OnInit {\n\n  // default user, only an example, please use the userService to modify\n  public currentUser: User =  new User({\n      avatarUrl: 'assets/img/user2-160x160.jpg',\n      email: 'weber.antoine@outlook.com',\n      firstname: 'WEBER',\n      lastname: 'Antoine'\n  });\n\n  constructor(private userServ: UserService, private router: Router) {\n    // se connecter au modif du user courant\n    this.userServ.getCurrent().subscribe((user: User) => this.currentUser = user);\n  }\n\n  public ngOnInit() {\n    // TODO\n  }\n\n  public logout = (): void => {\n    this.userServ.logout();\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n  \n  {{currentUser.getName()}}\n\n\n  \n  \n    \n    \n      {{currentUser.getName()}} - Web Developer\n      {{ 'USERBOX.MEMBERSINCE' | translate }} {{currentUser.creationDate}}\n    \n  \n  \n  \n    \n      Followers\n    \n    \n      Sales\n    \n    \n      Friends\n    \n  \n  \n  \n    \n      {{ 'USERBOX.PROFILE' | translate }}\n    \n    \n      {{ 'USERBOX.SIGNOUT' | translate }}\n    \n  \n\n\n    \n\n    \n                \n                    ./user-box.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{currentUser.getName()}}                  {{currentUser.getName()}} - Web Developer      {{ \\'USERBOX.MEMBERSINCE\\' | translate }} {{currentUser.creationDate}}                    Followers              Sales              Friends                    {{ \\'USERBOX.PROFILE\\' | translate }}              {{ \\'USERBOX.SIGNOUT\\' | translate }}      '\n    var COMPONENTS = [{'name': 'AppFooterComponent', 'selector': 'app-footer'},{'name': 'AppHeaderComponent', 'selector': 'app-header'},{'name': 'BreadcrumbComponent', 'selector': 'app-breadcrumb'},{'name': 'ComponentLoaderComponent', 'selector': 'app-component-loader'},{'name': 'ControlSidebarComponent', 'selector': 'app-control-sidebar'},{'name': 'LayoutAuthComponent', 'selector': 'app-layouts-auth'},{'name': 'LayoutLoginComponent', 'selector': 'app-layout-login'},{'name': 'LayoutRegisterComponent', 'selector': 'app-layout-register'},{'name': 'LogoComponent', 'selector': 'app-logo'},{'name': 'MenuAsideComponent', 'selector': 'app-menu-aside'},{'name': 'MessagesBoxComponent', 'selector': '.messagesBox'},{'name': 'NotificationBoxComponent', 'selector': '.notificationsBox'},{'name': 'TasksBoxComponent', 'selector': '.tasksBox'},{'name': 'UserBoxComponent', 'selector': '.userBox'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserBoxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                current\n                            \n                            \n                                    Public\n                                logoutAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCurrent\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                setCurrent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrent()\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCurrent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrent(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/services/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject( 1 )\n                        \n                    \n                        \n                            \n                                    Defined in src/services/user.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logoutAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/services/user.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { User } from '../models/user';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class UserService {\n    private current: ReplaySubject = new ReplaySubject( 1 );\n\n    // Called when logout\n    public logoutAction: Function;\n\n    constructor(\n      private router: Router\n    ) {}\n\n    public setCurrent( user: User ) {\n      this.current.next( user );\n    }\n\n    public getCurrent() {\n      return this.current;\n    }\n\n    public logout() {\n      if ( this.logoutAction ) {\n        this.logoutAction();\n      } else {\n        const user = new User();\n        user.connected = false;\n        this.setCurrent( user );\n        this.router.navigate(['login']);\n      }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n#2.0.0\n\nNEW: Package system moved to ng-packagr ( TS => JS )\nADD: Compatibility with angular 5 and 6\nBC: Remove deprecated functions of v1\nBC: model Preferencies is renamed in Preference\nADD: Sidebar-Control service to handle widgets, and \"display_control_sidebar\" option to hide in layout\n\n#1.1.0 - 03/03/2018\n\nADD: Boxed Style for AuthLayout can now be desactivated ( idea from @amehat )\nFIX: Sidebar-Control display button\nADD: Italian translation (thanks @Pescu)\nADD: Portugese translation (thanks @btd1337)\nADD: Exporting SafeHtmlPipe (thanks @KingMario)\nFIX: Menu title changing (thanks @KingMario)\nFIX: Notification order and counting (thanks @Pescu)\n\n#1.0.1 - 10/12/2017\n\nADD: UserService logoutAction is overridable (thanks @chinkan)\nADD: multiple header possiblities in menu-aside (thanks @chinkan)\nDEPRECATED: 'menu_title' in layout, is replaced by 'header' in MenuService links.\n\n#1.0.0 - 05/11/2017\n\nBC: Licence changes from WTFPL to MIT\nADD: RestService headers are now public\nADD: Headers and Menu additionnal components\nDEL: Doesn't calculate precisely the browser anymore\nBC: Deprecated functions removed in MenuService, BreadcrumbService, LogoService, UserService\n\n#0.6.4 - 22/10/2017\n\nADD: optionnal logout button, thanks to @catull\n\n#0.6.3 - 22/10/2017\n\nFIX: Issue #11 about parameters to hide template parts\n\n#0.6.2 - 22/10/2017\n\nADD: Simplified translation process\n\n#0.6.1 - 22/10/2017\n\nBUG: Correct missing dependencies\n\n#0.6.0 - 22/10/2017\n\nADD: Options to disable buttons from the header\nADD: Options to disable part from the menu aside\nADD: Option to personnalise menu aside title\nBC: Changing the way to provide translation, so it's handled in the main project and not in the library\n\n#0.5.1 - 08/10/2017\n\nREVERT: back to adminlte 2.3.11 to correct menu bug\n\n#0.5.0 - 01/09/2017\n\nADD: Changing skin of the layout\nFIX LayoutLoginComponent CSS for the body\nADD FooterService\nADD Changelog\nUPD uniforming \"setCurrent\" and \"getCurrent\" in structural services (old syntaxe is now marked deprecated)\nUPD LogoService can now take html, old syntaxe with subarray items is deprecated\n\n#0.4.0 - 03/08/2017\n#0.3.0 - 25/07/2017\n#0.2.0 - 11/07/2017\n#0.1.0 - 11/07/2017\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/layouts/auth/auth.ts\n            \n            component\n            LayoutAuthComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/layouts/login/login.component.ts\n            \n            component\n            LayoutLoginComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/layouts/register/register.component.ts\n            \n            component\n            LayoutRegisterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/message.ts\n            \n            class\n            Message\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/notification.ts\n            \n            class\n            Notification\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/preference.ts\n            \n            class\n            Preference\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/ngx-admin-lte.module.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipes/safe-html.pipes.ts\n            \n            pipe\n            SafeHtmlPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/breadcrumb.service.ts\n            \n            injectable\n            BreadcrumbService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/services/can-activate-guard.service.ts\n            \n            guard\n            CanActivateGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/services/control-sidebar.service.ts\n            \n            injectable\n            ControlSidebarService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/services/footer.service.ts\n            \n            injectable\n            FooterService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/services/logo.service.ts\n            \n            injectable\n            LogoService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/messages.service.ts\n            \n            injectable\n            MessagesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/messages.service.ts\n            \n            variable\n            initialMessages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/notifications.service.ts\n            \n            injectable\n            NotificationsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/services/notifications.service.ts\n            \n            variable\n            initialNotifications\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/rest.service.ts\n            \n            injectable\n            RestService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/services/translate.service.ts\n            \n            injectable\n            TranslateService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/services/translate.service.ts\n            \n            variable\n            langmatch\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/translate.service.ts\n            \n            variable\n            langs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/widgets/app-footer/app-footer.component.ts\n            \n            component\n            AppFooterComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/widgets/app-header/app-header.component.ts\n            \n            component\n            AppHeaderComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/widgets/breadcrumb/breadcrumb.component.ts\n            \n            component\n            BreadcrumbComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/widgets/component-loader/component-loader.component.ts\n            \n            component\n            ComponentLoaderComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/widgets/control-sidebar/control-sidebar.component.ts\n            \n            component\n            ControlSidebarComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/widgets/logo/logo.component.ts\n            \n            component\n            LogoComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/widgets/menu-aside/menu-aside.component.ts\n            \n            component\n            MenuAsideComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/widgets/messages-box/messages-box.component.ts\n            \n            component\n            MessagesBoxComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/widgets/notification-box/notification-box.component.ts\n            \n            component\n            NotificationBoxComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/widgets/tasks-box/tasks-box.component.ts\n            \n            component\n            TasksBoxComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/widgets/user-box/user-box.component.ts\n            \n            component\n            UserBoxComponent\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : >=8.2.9\n        \n            @angular/core : >=8.2.9\n        \n            @angular/platform-browser : >=8.2.9\n        \n            @angular/platform-browser-dynamic : >=8.2.9\n        \n            @angular/router : >=8.2.9\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            admin-lte : \n        \n            ngx-toastr : ^11.1.0\n        \n            bootstrap : \n        \n            font-awesome : \n        \n            ionicons : \n        \n            jquery : \n        \n            rxjs : >=6.4.0\n        \n            zone.js : >=0.9.1\n        \n            core-js : >=2.5.1\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../ngx-admin-lte.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/ngx-admin-lte.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            HttpLoaderFactory\n                        \n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(httpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpClient\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-admin-lte\n\n\nAdmin-LTE for Angular 4/5/6/8 as a NPM package\n\nThis project is a library to integrate in your own project.\nIf your are looking for a full bootstrapping using this library, please check: Bootstrapping Ngx-Admin-Lte\nDocumentation\nDocumentation is available here Documentation\nSupport & Contribution\nThis project is maintained on personnal time.\nAs so weI can't assure you that all questions/issues will be answered as quickly as you need.\nBut the communauty around it is growing fast, more than 200 projects are using it\nAnd it's an open-source project, so feel free to add feature / fix issues via Pull Requests (they will be merged quickly).\nFurthermore, if you like this project and you do want to help us, please considere donating.\nEvery little help is welcome :)\n\nVersion\n\nFor Angular 2 use package v1\nFor Angular 4/6 use package v2\nFor Angular 8 use package v3\n\nInstallation\nThis lib is only tested on angular-cli projects, but it may work in any angular project.\nInstall this lib in your existing project with\nyarn add ngx-admin-lte or npm install ngx-admin-lte\n  in your app.modules.ts, add these statements:\n  import { NgxAdminLteModule } from 'ngx-admin-lte';\n\n  @NgModule({\n  // ...\n  imports: [\n    // ...\n    NgxAdminLteModule,  Add js and css of admin-lte in your project like so:\nin your angular.json\n  \"assets\": [\n    \"src/favicon.ico\",\n    \"src/assets\",\n    { \"glob\": \"**/*\", \"input\": \"node_modules/ngx-admin-lte/public/assets\", \"output\": \"./assets\" }\n  ],\n  \"scripts\": [\n    \"node_modules/jquery/dist/jquery.min.js\",\n    \"node_modules/bootstrap/dist/js/bootstrap.min.js\",\n    \"node_modules/admin-lte/dist/js/app.min.js\"\n  ],\n  \"styles\": [\n    \"src/styles.scss\"\n  ]in your style.scss\n  @import \"../node_modules/admin-lte/dist/css/AdminLTE.min.css\";\n  @import \"../node_modules/admin-lte/dist/css/skins/_all-skins.min.css\";\n  @import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n  @import \"../node_modules/font-awesome/css/font-awesome.min.css\";\n  @import \"../node_modules/ionicons/dist/css/ionicons.min.css\";then you can declare your component with the adminLte template in your router:\n  import { CanActivateGuard, LayoutAuthComponent } from 'ngx-admin-lte';\n  ...\n  const routes: Routes = [\n    // logged routes\n    {\n      canActivate: [CanActivateGuard],\n      children: [\n        {\n          canActivate: [CanActivateGuard],\n          component: HomeComponent,\n          path: 'home'\n        },\n        {\n          canActivate: [CanActivateGuard],\n          component: PageNumComponent,\n          path: 'page/:id'\n        },\n      ],\n      component: LayoutAuthComponent,\n      path: '',\n    },\n    // not logged routes\n    {\n      component: LayoutLoginComponent,\n      path: 'login'\n    },\n    {\n      component: RegisterComponent,\n      path: 'register'\n    }\n  ];Handling Translation\nIn order to use the translation files given by the libraries, you should configure your angular.json as:\n   { \"glob\": \"**/*\", \"input\": \"../node_modules/ngx-admin-lte/src/public/assets\", \"output\": \"./assets\" }But if you want to provide your own translation files, lets say in a folder named \"src/public/i18n\" in your project.\n( That you could have initialised it by doing cp -r ./node_modules/ngx-admin-lte/src/public/assets/i18n ./src/public/ in your project)\nYou could do that like so:\n    { \"glob\": \"**/*\", \"input\": \"../node_modules/ngx-admin-lte/src/public/assets/img\", \"output\": \"./assets/img\" },\n    { \"glob\": \"**/*\", \"input\": \"./public/i18n\", \"output\": \"./assets/i18n\" }Same principle applies if you want to override the \"img\" assets folder\nConfiguration\nYou can change skin and hide some buttons by passing data to the layout component like so:\n  component: LayoutAuthComponent,\n  data: [{\n      'skin': 'skin-black',\n      /*\n      // USE THIS IS YOU WANT TO HIDE SOME TEMPLATE PART\n      'boxed_style': false,\n      'display_tasks': false,\n      'display_control': false,\n      'display_user': false,\n      'display_messages': false,\n      'display_notifications': false,\n      'display_menu_user': false,\n      'display_menu_search': false,\n      'display_logout': true,\n      'display_control_sidebar': true,\n      header_components: []\n      */\n    }],DEPRECATED:\nPlease don't use 'menu_title' anymore, you can just set 'header' property in your links setting.\nDon't forget to import the css skin in you style.css if you use it.\nAdditionnal components\nYou can add some components in the header by adding some in the configuration of the layout like so:\n'header_components': [{\n  class: MenuWidgetComponent,\n  data: {\n    label: 'test widget'\n  }\n}]the same structure can be used in the menu configuration to add components in the left menu.\nimport { MenuWidgetComponent } from './widgets/menu-widget/menu-widget.component';\n...\nlet mylinks = [\n  //some standard link ...\n    {\n      'title': 'External Links',\n      'icon': 'link',\n      'sublinks': [\n        {\n          'title': 'Github',\n          'link': ['https://github.com/TwanoO67/ngx-admin-lte'],\n          'icon': 'github',\n          'external': true,\n          'target': '_blank'\n        }\n      ]\n    },\n    // and an additionnal component\n    {\n      class: MenuWidgetComponent,\n      data: {\n        label: 'test component'\n      }\n    }\n  ];\n// then define the menu\n    this.menuService.setCurrent(this.mylinks);Don't forget to add your component to the declarations and entryComponents part of your module file.\nThose components must implement OnChanges (so they can receive data)\nServices\nIf you need some practical example of using this services, check out the project Bootstraping-ngx-admin-lte\nBreadcrumbService\nHelper to set the breadcrumb in a LayoutAuthComponent extended page.\nExample for an homepage:\n  constructor(\n    private breadServ: BreadcrumbService\n  ) {\n\n  public ngOnInit() {\n    // settings the header for the home\n    this.breadServ.setCurrent({\n      description: 'HomePage',\n      display: true,\n      header: 'Dashboard',\n      levels: [\n        {\n          icon: 'dashboard',\n          link: ['/'],\n          title: 'Home'\n        }\n      ]\n    });\n  }\n\n  public ngOnDestroy() {\n    // removing the header\n    this.breadServ.clear();\n  }CanActivateGuard\nService that check if the user is connected.\nIf you want to use it, just put in you routes like, so;\n  import { CanActivateGuard } from 'ngx-admin-lte';\n\n  // ...\n  {\n    component: MyComponent,\n    canActivate: [CanActivateGuard],\n    path: 'mycompo'\n  }And set a user.connected = true in your user service.\nExample of a basic login page:\n  constructor(\n    private userServ: UserService,\n    private router: Router\n  ) {\n\n  private login() {\n    // DOING SOME BACKOFFICE STUFF ON THE SERVER\n\n    // then if the server said OK, then log the user in js\n    if ( 1 === 1 ) {\n\n      const user1 = new User( {\n          avatarUrl: 'assets/img/user2-160x160.jpg',\n          email: 'weber.antoine@outlook.com',\n          firstname: 'WEBER',\n          lastname: 'Antoine'\n      } );\n\n      user1.connected = true;\n\n      this.userServ.setCurrent( user1 );\n\n      this.router.navigate( ['home'] );\n    }\n  }FooterService\nHelper to define the footer of an LayoutAuthComponent extended page.\nuse setCurrent to send your footer with { left_part: \"some text or\", right_part: \"some html\"}\nLoggerService\nthe method log is used to show some console.log using the i18n translation\nLogoService\nHelper to define the logo of an LayoutAuthComponent extended page.\nuse setCurrent to send your logo with {\n  html_mini; \"ALTE\",\n  html_lg; \"AdminLTE\",\n}\nYou can define your own brand name in the logo, if you want it to be initialised once, do it in your app.compontent.ts like so:\n  import { LogoService } from 'ngx-admin-lte';\n\n  constructor(\n    private logoServ: LogoService\n    ){\n\n  // ...\n\n  this.logoServ.setCurrentLogo({\n    html_mini; \"ALTE\",\n    html_lg; \"AdminLTE\",\n  });Please remove any usage of it.\nMenuService\nYou can set the menu links, globally (if you do that in your app.component.ts for example),\nor locally, if you do that in each of your component.\nimport { User, MenuService, Message, MessagesService } from 'ngx-admin-lte';\n\n// ...\n\n// define here your own links menu structure\nprivate mylinks: any = [\n  {\n    'header': 'Custom Header'\n  },\n  {\n    'title': 'Home',\n    'icon': 'dashboard',\n    'link': ['/']\n  },\n  {\n    'title': 'Sub menu',\n    'icon': 'link',\n    'sublinks': [\n      {\n        'title': 'Page 2',\n        'link': ['/page/2'],\n      },\n      {\n        'title': 'Page 3',\n        'link': ['/page/3'],\n      }\n    ]\n  }\n];\n\nconstructor(\n  private menuServ: MenuService,\n  private msgServ: MessagesService\n) {\n\n}\n\npublic ngOnInit() {\n  // define menu\n  this.menuServ.setCurrentMenu(this.mylinks);MessagesService\nCan be used to send message in the message box of the header\nExample:\nconstructor(\n    private msgServ: MessagesService,\n    // ...\n  ) {\n    // ...\n  }\n\n  public ngOnInit() {\n    // FAKE MESSAGE\n    // defining some users\n    const user1 = new User( {\n        avatarUrl: 'assets/img/user2-160x160.jpg',\n        email: 'weber.antoine.pro@gmail.com',\n        firstname: 'WEBER',\n        lastname: 'Antoine'\n    });\n    const user2 = new User( {\n        avatarUrl: 'assets/img/user2-160x160.jpg',\n        email: 'EMAIL',\n        firstname: 'FIRSTNAME',\n        lastname: 'LASTNAME'\n    });\n\n    // sending a test message\n    this.msgServ.addMessage( new Message( {\n        author: user2,\n        content: 'le contenu d\\'un message d\\'une importance extreme',\n        destination: user1,\n        title: 'un message super important'\n    }) );NotificationsService\nCan be used to send notification in the notification box of the header\nExample:\nconstructor(\n    ...\n    private notifServ: NotificationsService\n  ) {\n    ...\n  }\n\n  public ngOnInit() {\n    // sending a test notification\n    this.notifServ.addNotification( new Notification( {\n        class: 'fa fa-users text-aqua',\n        content: '5 new members joined today',\n        link: '/page/2'\n    }) );RestService\nAbstract service to contact a REST API.\nYou can use that to do Services for you data models.\nExample, for a model named \"Device\"\nimport { Injectable } from '@angular/core';\nimport { Http, Response, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map'\nimport { Observable } from 'rxjs/Observable';\nimport { Device } from '../../models/device';\nimport { RestService } from \"ngx-admin-lte\";\n\n@Injectable()\nexport class DeviceService extends RestService {\n\n  constructor(_http: Http) {\n      super(_http);\n      this.modelName = 'devices';\n      this.setApiUrl('http://my-rest_api_to_contact/devices');\n  }\n\n  /*This parts are only needed if you want to have correct types for your datas*/\n  public getAll(): Observable{\n    return super.getAll().map((tab)=> {\n      return tab.map(unit => new Device(unit) );\n    });\n  }\n\n  public get(id: number): Observable{\n      return super.get(id).map((unit) => unit);\n  }\n\n}This service will now provide base CRUD functionality respecting the RESP in JSON API format.\n// CONFIGURATION\nsetApiUrl( url: string)\n\n// HELPERS WITH CACHE\ngetAllFromLS(maxtime = 0): Array\ngetFromCache(id): any\n\n// Standard REST functions\ngetAll(): Observable\nget(id: number): Observable\nadd(item: any): Observable\naddAll(tab: Array): Observable>\nupdate(id: number, itemToUpdate: any): Observable\ndelete(id: number): ObservableTranslateService\nThis service will listen to your user changes and check if the current user has a selected language (in the field preferredLang).\nIf so, it will change the language of the app, accordingly.\nUse the UserService to change the user, with language set like so:\nnew User( {\n    avatarUrl: 'assets/img/user2-160x160.jpg',\n    email: 'weber.antoine@outlook.com',\n    firstname: 'WEBER',\n    lastname: 'Antoine'\n    //set the language here\n    preferredLang: 'fr'\n} );Supported language are: 'en', 'fr', 'ru', 'he', 'zh'\nIf no preferredLang is given, it will take the browser settings, and otherwise default is 'en'.\nUser service\nThis service is used to send/get the current user information across the app\nFor example you can set the current user, in your login page :\nimport { User, UserService } from 'ngx-admin-lte';\n\nconstructor(\n  private _user_serv: UserService\n){\n\nngOnInit(){\n  let user = new User({\n    firstname: \"WEBER\",\n    lastname: \"Antoine\",\n    email: \"why-not-yop@yopmail.com\",\n    avatarUrl: \"assets/img/user2-160x160.jpg\"\n  });\n  this._user_serv.setCurrentUser( user );and you can get the user in a widget:\nimport { User, UserService } from 'ngx-admin-lte';\n\nprivate current_user: User;\nconstructor(\n  private _user_serv : UserService,\n){\n  //se connecter au modification du user courant\n  this._user_serv.current_user.subscribe((user: User) => this.current_user = user);Specific Components\nApp Header\nThis widget handles the header bar, it includes other 'box' widgets for the top navigation:\n\nMessages Box\nNotification Box\nTasks Box\nUser box\n\nMessages Box\nThis widget is registered to the messages service\nNotification Box\nWIP This widget is registered to the notification service\nTasks Box\nWIP This widget is registered to the task service\nUser box\nThis widget is registered to the user service (for the current user display)\nMenu Aside\nThis widget handles the left navigation Menu\nIt is registered to the user service (for the current user display)\nModels\nUser\n\nfirstname: string, First Name of the user\nlastname : string, Last Name of the user\nemail : string, Email address of the user\navatarUrl : string, URL for the user avatar, could be absolute or relative\ncreation_date : string, timestamp of the creation of the user\n\nMessage\n\ntitle : string, title of the message\ncontent : string, content of the message\nauthor : User, source user of the message\ndestination : User, destination user of the message\ndate : string, date of sending\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License\nCopyright (c) 2017 NGX AdminLTE, https://twanoo67.github.io/ngx-admin-lte\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxAdminLteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NgxAdminLteModule\n\n\n\ncluster_NgxAdminLteModule_declarations\n\n\n\ncluster_NgxAdminLteModule_exports\n\n\n\ncluster_NgxAdminLteModule_providers\n\n\n\n\nAppFooterComponent\n\nAppFooterComponent\n\n\n\nNgxAdminLteModule\n\nNgxAdminLteModule\n\nNgxAdminLteModule -->\n\nAppFooterComponent->NgxAdminLteModule\n\n\n\n\n\nAppHeaderComponent\n\nAppHeaderComponent\n\nNgxAdminLteModule -->\n\nAppHeaderComponent->NgxAdminLteModule\n\n\n\n\n\nBreadcrumbComponent\n\nBreadcrumbComponent\n\nNgxAdminLteModule -->\n\nBreadcrumbComponent->NgxAdminLteModule\n\n\n\n\n\nComponentLoaderComponent\n\nComponentLoaderComponent\n\nNgxAdminLteModule -->\n\nComponentLoaderComponent->NgxAdminLteModule\n\n\n\n\n\nControlSidebarComponent\n\nControlSidebarComponent\n\nNgxAdminLteModule -->\n\nControlSidebarComponent->NgxAdminLteModule\n\n\n\n\n\nLayoutAuthComponent\n\nLayoutAuthComponent\n\nNgxAdminLteModule -->\n\nLayoutAuthComponent->NgxAdminLteModule\n\n\n\n\n\nLayoutLoginComponent\n\nLayoutLoginComponent\n\nNgxAdminLteModule -->\n\nLayoutLoginComponent->NgxAdminLteModule\n\n\n\n\n\nLayoutRegisterComponent\n\nLayoutRegisterComponent\n\nNgxAdminLteModule -->\n\nLayoutRegisterComponent->NgxAdminLteModule\n\n\n\n\n\nLogoComponent\n\nLogoComponent\n\nNgxAdminLteModule -->\n\nLogoComponent->NgxAdminLteModule\n\n\n\n\n\nMenuAsideComponent\n\nMenuAsideComponent\n\nNgxAdminLteModule -->\n\nMenuAsideComponent->NgxAdminLteModule\n\n\n\n\n\nMessagesBoxComponent\n\nMessagesBoxComponent\n\nNgxAdminLteModule -->\n\nMessagesBoxComponent->NgxAdminLteModule\n\n\n\n\n\nNotificationBoxComponent\n\nNotificationBoxComponent\n\nNgxAdminLteModule -->\n\nNotificationBoxComponent->NgxAdminLteModule\n\n\n\n\n\nSafeHtmlPipe\n\nSafeHtmlPipe\n\nNgxAdminLteModule -->\n\nSafeHtmlPipe->NgxAdminLteModule\n\n\n\n\n\nTasksBoxComponent\n\nTasksBoxComponent\n\nNgxAdminLteModule -->\n\nTasksBoxComponent->NgxAdminLteModule\n\n\n\n\n\nUserBoxComponent\n\nUserBoxComponent\n\nNgxAdminLteModule -->\n\nUserBoxComponent->NgxAdminLteModule\n\n\n\n\n\nSafeHtmlPipe \n\nSafeHtmlPipe \n\nSafeHtmlPipe  -->\n\nNgxAdminLteModule->SafeHtmlPipe \n\n\n\n\n\nBreadcrumbService\n\nBreadcrumbService\n\nNgxAdminLteModule -->\n\nBreadcrumbService->NgxAdminLteModule\n\n\n\n\n\nControlSidebarService\n\nControlSidebarService\n\nNgxAdminLteModule -->\n\nControlSidebarService->NgxAdminLteModule\n\n\n\n\n\nFooterService\n\nFooterService\n\nNgxAdminLteModule -->\n\nFooterService->NgxAdminLteModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nNgxAdminLteModule -->\n\nLoggerService->NgxAdminLteModule\n\n\n\n\n\nLogoService\n\nLogoService\n\nNgxAdminLteModule -->\n\nLogoService->NgxAdminLteModule\n\n\n\n\n\nMenuService\n\nMenuService\n\nNgxAdminLteModule -->\n\nMenuService->NgxAdminLteModule\n\n\n\n\n\nMessagesService\n\nMessagesService\n\nNgxAdminLteModule -->\n\nMessagesService->NgxAdminLteModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNgxAdminLteModule -->\n\nNotificationsService->NgxAdminLteModule\n\n\n\n\n\nTranslateService\n\nTranslateService\n\nNgxAdminLteModule -->\n\nTranslateService->NgxAdminLteModule\n\n\n\n\n\nUserService\n\nUserService\n\nNgxAdminLteModule -->\n\nUserService->NgxAdminLteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            IMessagesOperation   (src/.../messages.service.ts)\n                        \n                        \n                            INotificationsOperation   (src/.../notifications.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/services/messages.service.ts\n    \n    \n        \n            \n                \n                    \n                    IMessagesOperation\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/services/notifications.service.ts\n    \n    \n        \n            \n                \n                    \n                    INotificationsOperation\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            initialMessages   (src/.../messages.service.ts)\n                        \n                        \n                            initialNotifications   (src/.../notifications.service.ts)\n                        \n                        \n                            langmatch   (src/.../translate.service.ts)\n                        \n                        \n                            langs   (src/.../translate.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/services/messages.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialMessages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Message[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/services/notifications.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/services/translate.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            langmatch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : /en|fr|ru|he|zh|pt|it/\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            langs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['en', 'fr', 'ru', 'he', 'zh', 'pt', 'it']\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
